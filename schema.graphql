type AbilityScore {
  _id: String!
  desc: [String]
  full_name: String
  index: String
  name: String
  skills: [AbilityScoreSkills]
  url: String
}

type AbilityScoreSkills {
  index: String
  name: String
  url: String
}

type Alignment {
  _id: String!
  desc: String
  abbreviation: String
  index: String
  name: String
  url: String
}

type Background {
  _id: String!
  index: String
  name: String
  starting_proficiencies: [AbilityScoreSkills]
  language_options: BackgroundLanguage_options
  url: String
  starting_equipment: [BackgroundStarting_equipment]
  starting_equipment_options: [BackgroundStarting_equipment_options]
  feature: BackgroundFeature
  personality_traits: BackgroundPersonality_traits
  ideals: BackgroundIdeals
  bonds: BackgroundPersonality_traits
  flaws: BackgroundPersonality_traits
}

type BackgroundFeature {
  name: String
  desc: [String]
}

type BackgroundIdeals {
  choose: Float
  from: [BackgroundIdealsFrom]
  type: String
}

type BackgroundIdealsFrom {
  desc: String
  alignments: [AbilityScoreSkills]
}

type BackgroundLanguage_options {
  choose: Float
  from: [AbilityScoreSkills]
  type: String
}

type BackgroundPersonality_traits {
  choose: Float
  from: [String]
  type: String
}

type BackgroundStarting_equipment {
  equipment: AbilityScoreSkills
  quantity: Float
}

type BackgroundStarting_equipment_options {
  choose: Float
  from: [BackgroundStarting_equipment_optionsFrom]
  type: String
}

type BackgroundStarting_equipment_optionsFrom {
  equipment: AbilityScoreSkills
  quantity: Float
}

type Class {
  _id: String!
  class_levels: String
  hit_die: Float
  index: String
  name: String
  proficiencies: [AbilityScoreSkills]
  proficiency_choices: [ClassProficiency_choices]
  saving_throws: [AbilityScoreSkills]
  spellcasting: ClassSpellcasting
  spells: String
  starting_equipment: [ClassStarting_equipment]
  starting_equipment_options: [ClassStarting_equipment_options]
  subclasses: [AbilityScoreSkills]
  url: String
}

type ClassProficiency_choices {
  choose: Float
  from: [AbilityScoreSkills]
  type: String
}

type ClassSpellcasting {
  info: [ClassSpellcastingInfo]
  level: Float
  spellcasting_ability: AbilityScoreSkills
}

type ClassSpellcastingInfo {
  desc: [String]
  name: String
}

type ClassStarting_equipment {
  equipment: AbilityScoreSkills
  quantity: Float
}

type ClassStarting_equipment_options {
  choose: Float
  from: [ClassStarting_equipment_optionsFrom]
  type: String
}

type ClassStarting_equipment_optionsFrom {
  equipment: AbilityScoreSkills
  quantity: Float
}

type Condition {
  _id: String!
  desc: [String]
  index: String
  name: String
  url: String
}

type DamageType {
  _id: String!
  desc: [String]
  index: String
  name: String
  url: String
}

type Equipment {
  _id: String!
  armor_category: String
  armor_class: EquipmentArmor_class
  capacity: String
  category_range: String
  contents: [EquipmentContents]
  cost: EquipmentCost
  damage: EquipmentDamage
  desc: [String]
  equipment_category: AbilityScoreSkills
  gear_category: AbilityScoreSkills
  index: String
  name: String
  properties: [AbilityScoreSkills]
  quantity: Float
  range: EquipmentRange
  special: [String]
  speed: EquipmentSpeed
  stealth_disadvantage: Boolean
  str_minimum: Float
  throw_range: EquipmentThrow_range
  tool_category: String
  two_handed_damage: EquipmentTwo_handed_damage
  url: String
  vehicle_category: String
  weapon_category: String
  weapon_range: String
  weight: Float
}

type EquipmentArmor_class {
  base: Float
  dex_bonus: Boolean
  max_bonus: Float
}

type EquipmentCategory {
  _id: String!
  equipment: [AbilityScoreSkills]
  index: String
  name: String
  url: String
}

type EquipmentContents {
  item: AbilityScoreSkills
  quantity: Float
}

type EquipmentCost {
  quantity: Float
  unit: String
}

type EquipmentDamage {
  damage_dice: String
  damage_type: AbilityScoreSkills
}

type EquipmentRange {
  long: Float
  normal: Float
}

type EquipmentSpeed {
  quantity: Float
  unit: String
}

type EquipmentThrow_range {
  long: Float
  normal: Float
}

type EquipmentTwo_handed_damage {
  damage_dice: String
  damage_type: AbilityScoreSkills
}

type Feature {
  _id: String!
  choice: FeatureChoice
  class: AbilityScoreSkills
  desc: [String]
  group: String
  index: String
  level: Float
  name: String
  prerequisites: [FeaturePrerequisites]
  reference: String
  subclass: AbilityScoreSkills
  url: String
}

type FeatureChoice {
  choose: Float
  from: [AbilityScoreSkills]
  type: String
}

type FeaturePrerequisites {
  level: Float
  type: String
}

input FilterFindManyAbilityScore_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyAbilityScoreDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyAbilityScoreFull_nameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyAbilityScoreIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyAbilityScoreInput {
  _id: String
  desc: [String]
  full_name: String
  index: String
  name: String
  skills: [FilterFindManyAbilityScoreSkillsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyAbilityScoreOperatorsInput
  OR: [FilterFindManyAbilityScoreInput!]
  AND: [FilterFindManyAbilityScoreInput!]
}

input FilterFindManyAbilityScoreNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyAbilityScoreOperatorsInput {
  _id: FilterFindManyAbilityScore_idOperatorsInput
  desc: FilterFindManyAbilityScoreDescOperatorsInput
  full_name: FilterFindManyAbilityScoreFull_nameOperatorsInput
  index: FilterFindManyAbilityScoreIndexOperatorsInput
  name: FilterFindManyAbilityScoreNameOperatorsInput
  skills: FilterFindManyAbilityScoreSkillsOperatorsInput
  url: FilterFindManyAbilityScoreUrlOperatorsInput
}

input FilterFindManyAbilityScoreSkillsIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyAbilityScoreSkillsInput {
  index: String
  name: String
  url: String
}

input FilterFindManyAbilityScoreSkillsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyAbilityScoreSkillsOperatorsInput {
  index: FilterFindManyAbilityScoreSkillsIndexOperatorsInput
  name: FilterFindManyAbilityScoreSkillsNameOperatorsInput
  url: FilterFindManyAbilityScoreSkillsUrlOperatorsInput
}

input FilterFindManyAbilityScoreSkillsUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyAbilityScoreUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyAlignment_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyAlignmentAbbreviationOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyAlignmentDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyAlignmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyAlignmentInput {
  _id: String
  desc: String
  abbreviation: String
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyAlignmentOperatorsInput
  OR: [FilterFindManyAlignmentInput!]
  AND: [FilterFindManyAlignmentInput!]
}

input FilterFindManyAlignmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyAlignmentOperatorsInput {
  _id: FilterFindManyAlignment_idOperatorsInput
  desc: FilterFindManyAlignmentDescOperatorsInput
  abbreviation: FilterFindManyAlignmentAbbreviationOperatorsInput
  index: FilterFindManyAlignmentIndexOperatorsInput
  name: FilterFindManyAlignmentNameOperatorsInput
  url: FilterFindManyAlignmentUrlOperatorsInput
}

input FilterFindManyAlignmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackground_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundBondsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyBackgroundBondsFromOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundBondsOperatorsInput {
  choose: FilterFindManyBackgroundBondsChooseOperatorsInput
  from: FilterFindManyBackgroundBondsFromOperatorsInput
  type: FilterFindManyBackgroundBondsTypeOperatorsInput
}

input FilterFindManyBackgroundBondsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundFeatureDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundFeatureInput {
  name: String
  desc: [String]
}

input FilterFindManyBackgroundFeatureNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundFeatureOperatorsInput {
  name: FilterFindManyBackgroundFeatureNameOperatorsInput
  desc: FilterFindManyBackgroundFeatureDescOperatorsInput
}

input FilterFindManyBackgroundFlawsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyBackgroundFlawsFromOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundFlawsOperatorsInput {
  choose: FilterFindManyBackgroundFlawsChooseOperatorsInput
  from: FilterFindManyBackgroundFlawsFromOperatorsInput
  type: FilterFindManyBackgroundFlawsTypeOperatorsInput
}

input FilterFindManyBackgroundFlawsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundIdealsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyBackgroundIdealsFromAlignmentsIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundIdealsFromAlignmentsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundIdealsFromAlignmentsOperatorsInput {
  index: FilterFindManyBackgroundIdealsFromAlignmentsIndexOperatorsInput
  name: FilterFindManyBackgroundIdealsFromAlignmentsNameOperatorsInput
  url: FilterFindManyBackgroundIdealsFromAlignmentsUrlOperatorsInput
}

input FilterFindManyBackgroundIdealsFromAlignmentsUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundIdealsFromDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundIdealsFromInput {
  desc: String
  alignments: [FilterFindManyAbilityScoreSkillsInput]
}

input FilterFindManyBackgroundIdealsFromOperatorsInput {
  desc: FilterFindManyBackgroundIdealsFromDescOperatorsInput
  alignments: FilterFindManyBackgroundIdealsFromAlignmentsOperatorsInput
}

input FilterFindManyBackgroundIdealsInput {
  choose: Float
  from: [FilterFindManyBackgroundIdealsFromInput]
  type: String
}

input FilterFindManyBackgroundIdealsOperatorsInput {
  choose: FilterFindManyBackgroundIdealsChooseOperatorsInput
  from: FilterFindManyBackgroundIdealsFromOperatorsInput
  type: FilterFindManyBackgroundIdealsTypeOperatorsInput
}

input FilterFindManyBackgroundIdealsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundInput {
  _id: String
  index: String
  name: String
  starting_proficiencies: [FilterFindManyAbilityScoreSkillsInput]
  language_options: FilterFindManyBackgroundLanguage_optionsInput
  url: String
  starting_equipment: [FilterFindManyBackgroundStarting_equipmentInput]
  starting_equipment_options: [FilterFindManyBackgroundStarting_equipment_optionsInput]
  feature: FilterFindManyBackgroundFeatureInput
  personality_traits: FilterFindManyBackgroundPersonality_traitsInput
  ideals: FilterFindManyBackgroundIdealsInput
  bonds: FilterFindManyBackgroundPersonality_traitsInput
  flaws: FilterFindManyBackgroundPersonality_traitsInput

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyBackgroundOperatorsInput
  OR: [FilterFindManyBackgroundInput!]
  AND: [FilterFindManyBackgroundInput!]
}

input FilterFindManyBackgroundLanguage_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyBackgroundLanguage_optionsFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundLanguage_optionsFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundLanguage_optionsFromOperatorsInput {
  index: FilterFindManyBackgroundLanguage_optionsFromIndexOperatorsInput
  name: FilterFindManyBackgroundLanguage_optionsFromNameOperatorsInput
  url: FilterFindManyBackgroundLanguage_optionsFromUrlOperatorsInput
}

input FilterFindManyBackgroundLanguage_optionsFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundLanguage_optionsInput {
  choose: Float
  from: [FilterFindManyAbilityScoreSkillsInput]
  type: String
}

input FilterFindManyBackgroundLanguage_optionsOperatorsInput {
  choose: FilterFindManyBackgroundLanguage_optionsChooseOperatorsInput
  from: FilterFindManyBackgroundLanguage_optionsFromOperatorsInput
  type: FilterFindManyBackgroundLanguage_optionsTypeOperatorsInput
}

input FilterFindManyBackgroundLanguage_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyBackgroundOperatorsInput {
  _id: FilterFindManyBackground_idOperatorsInput
  index: FilterFindManyBackgroundIndexOperatorsInput
  name: FilterFindManyBackgroundNameOperatorsInput
  starting_proficiencies: FilterFindManyBackgroundStarting_proficienciesOperatorsInput
  language_options: FilterFindManyBackgroundLanguage_optionsOperatorsInput
  url: FilterFindManyBackgroundUrlOperatorsInput
  starting_equipment: FilterFindManyBackgroundStarting_equipmentOperatorsInput
  starting_equipment_options: FilterFindManyBackgroundStarting_equipment_optionsOperatorsInput
  feature: FilterFindManyBackgroundFeatureOperatorsInput
  personality_traits: FilterFindManyBackgroundPersonality_traitsOperatorsInput
  ideals: FilterFindManyBackgroundIdealsOperatorsInput
  bonds: FilterFindManyBackgroundBondsOperatorsInput
  flaws: FilterFindManyBackgroundFlawsOperatorsInput
}

input FilterFindManyBackgroundPersonality_traitsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyBackgroundPersonality_traitsFromOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundPersonality_traitsInput {
  choose: Float
  from: [String]
  type: String
}

input FilterFindManyBackgroundPersonality_traitsOperatorsInput {
  choose: FilterFindManyBackgroundPersonality_traitsChooseOperatorsInput
  from: FilterFindManyBackgroundPersonality_traitsFromOperatorsInput
  type: FilterFindManyBackgroundPersonality_traitsTypeOperatorsInput
}

input FilterFindManyBackgroundPersonality_traitsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundStarting_equipment_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyBackgroundStarting_equipment_optionsFromEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundStarting_equipment_optionsFromEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundStarting_equipment_optionsFromEquipmentOperatorsInput {
  index: FilterFindManyBackgroundStarting_equipment_optionsFromEquipmentIndexOperatorsInput
  name: FilterFindManyBackgroundStarting_equipment_optionsFromEquipmentNameOperatorsInput
  url: FilterFindManyBackgroundStarting_equipment_optionsFromEquipmentUrlOperatorsInput
}

input FilterFindManyBackgroundStarting_equipment_optionsFromEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundStarting_equipment_optionsFromInput {
  equipment: FilterFindManyAbilityScoreSkillsInput
  quantity: Float
}

input FilterFindManyBackgroundStarting_equipment_optionsFromOperatorsInput {
  equipment: FilterFindManyBackgroundStarting_equipment_optionsFromEquipmentOperatorsInput
  quantity: FilterFindManyBackgroundStarting_equipment_optionsFromQuantityOperatorsInput
}

input FilterFindManyBackgroundStarting_equipment_optionsFromQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyBackgroundStarting_equipment_optionsInput {
  choose: Float
  from: [FilterFindManyBackgroundStarting_equipment_optionsFromInput]
  type: String
}

input FilterFindManyBackgroundStarting_equipment_optionsOperatorsInput {
  choose: FilterFindManyBackgroundStarting_equipment_optionsChooseOperatorsInput
  from: FilterFindManyBackgroundStarting_equipment_optionsFromOperatorsInput
  type: FilterFindManyBackgroundStarting_equipment_optionsTypeOperatorsInput
}

input FilterFindManyBackgroundStarting_equipment_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundStarting_equipmentEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundStarting_equipmentEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundStarting_equipmentEquipmentOperatorsInput {
  index: FilterFindManyBackgroundStarting_equipmentEquipmentIndexOperatorsInput
  name: FilterFindManyBackgroundStarting_equipmentEquipmentNameOperatorsInput
  url: FilterFindManyBackgroundStarting_equipmentEquipmentUrlOperatorsInput
}

input FilterFindManyBackgroundStarting_equipmentEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundStarting_equipmentInput {
  equipment: FilterFindManyAbilityScoreSkillsInput
  quantity: Float
}

input FilterFindManyBackgroundStarting_equipmentOperatorsInput {
  equipment: FilterFindManyBackgroundStarting_equipmentEquipmentOperatorsInput
  quantity: FilterFindManyBackgroundStarting_equipmentQuantityOperatorsInput
}

input FilterFindManyBackgroundStarting_equipmentQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyBackgroundStarting_proficienciesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundStarting_proficienciesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundStarting_proficienciesOperatorsInput {
  index: FilterFindManyBackgroundStarting_proficienciesIndexOperatorsInput
  name: FilterFindManyBackgroundStarting_proficienciesNameOperatorsInput
  url: FilterFindManyBackgroundStarting_proficienciesUrlOperatorsInput
}

input FilterFindManyBackgroundStarting_proficienciesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyBackgroundUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClass_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassClass_levelsOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassHit_dieOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyClassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassInput {
  _id: String
  class_levels: String
  hit_die: Float
  index: String
  name: String
  proficiencies: [FilterFindManyAbilityScoreSkillsInput]
  proficiency_choices: [FilterFindManyClassProficiency_choicesInput]
  saving_throws: [FilterFindManyAbilityScoreSkillsInput]
  spellcasting: FilterFindManyClassSpellcastingInput
  spells: String
  starting_equipment: [FilterFindManyClassStarting_equipmentInput]
  starting_equipment_options: [FilterFindManyClassStarting_equipment_optionsInput]
  subclasses: [FilterFindManyAbilityScoreSkillsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyClassOperatorsInput
  OR: [FilterFindManyClassInput!]
  AND: [FilterFindManyClassInput!]
}

input FilterFindManyClassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyClassOperatorsInput {
  _id: FilterFindManyClass_idOperatorsInput
  class_levels: FilterFindManyClassClass_levelsOperatorsInput
  hit_die: FilterFindManyClassHit_dieOperatorsInput
  index: FilterFindManyClassIndexOperatorsInput
  name: FilterFindManyClassNameOperatorsInput
  proficiencies: FilterFindManyClassProficienciesOperatorsInput
  proficiency_choices: FilterFindManyClassProficiency_choicesOperatorsInput
  saving_throws: FilterFindManyClassSaving_throwsOperatorsInput
  spellcasting: FilterFindManyClassSpellcastingOperatorsInput
  spells: FilterFindManyClassSpellsOperatorsInput
  starting_equipment: FilterFindManyClassStarting_equipmentOperatorsInput
  starting_equipment_options: FilterFindManyClassStarting_equipment_optionsOperatorsInput
  subclasses: FilterFindManyClassSubclassesOperatorsInput
  url: FilterFindManyClassUrlOperatorsInput
}

input FilterFindManyClassProficienciesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassProficienciesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassProficienciesOperatorsInput {
  index: FilterFindManyClassProficienciesIndexOperatorsInput
  name: FilterFindManyClassProficienciesNameOperatorsInput
  url: FilterFindManyClassProficienciesUrlOperatorsInput
}

input FilterFindManyClassProficienciesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassProficiency_choicesChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyClassProficiency_choicesFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassProficiency_choicesFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassProficiency_choicesFromOperatorsInput {
  index: FilterFindManyClassProficiency_choicesFromIndexOperatorsInput
  name: FilterFindManyClassProficiency_choicesFromNameOperatorsInput
  url: FilterFindManyClassProficiency_choicesFromUrlOperatorsInput
}

input FilterFindManyClassProficiency_choicesFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassProficiency_choicesInput {
  choose: Float
  from: [FilterFindManyAbilityScoreSkillsInput]
  type: String
}

input FilterFindManyClassProficiency_choicesOperatorsInput {
  choose: FilterFindManyClassProficiency_choicesChooseOperatorsInput
  from: FilterFindManyClassProficiency_choicesFromOperatorsInput
  type: FilterFindManyClassProficiency_choicesTypeOperatorsInput
}

input FilterFindManyClassProficiency_choicesTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassSaving_throwsIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassSaving_throwsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassSaving_throwsOperatorsInput {
  index: FilterFindManyClassSaving_throwsIndexOperatorsInput
  name: FilterFindManyClassSaving_throwsNameOperatorsInput
  url: FilterFindManyClassSaving_throwsUrlOperatorsInput
}

input FilterFindManyClassSaving_throwsUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassSpellcastingInfoDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassSpellcastingInfoInput {
  desc: [String]
  name: String
}

input FilterFindManyClassSpellcastingInfoNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassSpellcastingInfoOperatorsInput {
  desc: FilterFindManyClassSpellcastingInfoDescOperatorsInput
  name: FilterFindManyClassSpellcastingInfoNameOperatorsInput
}

input FilterFindManyClassSpellcastingInput {
  info: [FilterFindManyClassSpellcastingInfoInput]
  level: Float
  spellcasting_ability: FilterFindManyAbilityScoreSkillsInput
}

input FilterFindManyClassSpellcastingLevelOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyClassSpellcastingOperatorsInput {
  info: FilterFindManyClassSpellcastingInfoOperatorsInput
  level: FilterFindManyClassSpellcastingLevelOperatorsInput
  spellcasting_ability: FilterFindManyClassSpellcastingSpellcasting_abilityOperatorsInput
}

input FilterFindManyClassSpellcastingSpellcasting_abilityIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassSpellcastingSpellcasting_abilityNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassSpellcastingSpellcasting_abilityOperatorsInput {
  index: FilterFindManyClassSpellcastingSpellcasting_abilityIndexOperatorsInput
  name: FilterFindManyClassSpellcastingSpellcasting_abilityNameOperatorsInput
  url: FilterFindManyClassSpellcastingSpellcasting_abilityUrlOperatorsInput
}

input FilterFindManyClassSpellcastingSpellcasting_abilityUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassSpellsOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassStarting_equipment_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyClassStarting_equipment_optionsFromEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassStarting_equipment_optionsFromEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassStarting_equipment_optionsFromEquipmentOperatorsInput {
  index: FilterFindManyClassStarting_equipment_optionsFromEquipmentIndexOperatorsInput
  name: FilterFindManyClassStarting_equipment_optionsFromEquipmentNameOperatorsInput
  url: FilterFindManyClassStarting_equipment_optionsFromEquipmentUrlOperatorsInput
}

input FilterFindManyClassStarting_equipment_optionsFromEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassStarting_equipment_optionsFromInput {
  equipment: FilterFindManyAbilityScoreSkillsInput
  quantity: Float
}

input FilterFindManyClassStarting_equipment_optionsFromOperatorsInput {
  equipment: FilterFindManyClassStarting_equipment_optionsFromEquipmentOperatorsInput
  quantity: FilterFindManyClassStarting_equipment_optionsFromQuantityOperatorsInput
}

input FilterFindManyClassStarting_equipment_optionsFromQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyClassStarting_equipment_optionsInput {
  choose: Float
  from: [FilterFindManyClassStarting_equipment_optionsFromInput]
  type: String
}

input FilterFindManyClassStarting_equipment_optionsOperatorsInput {
  choose: FilterFindManyClassStarting_equipment_optionsChooseOperatorsInput
  from: FilterFindManyClassStarting_equipment_optionsFromOperatorsInput
  type: FilterFindManyClassStarting_equipment_optionsTypeOperatorsInput
}

input FilterFindManyClassStarting_equipment_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassStarting_equipmentEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassStarting_equipmentEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassStarting_equipmentEquipmentOperatorsInput {
  index: FilterFindManyClassStarting_equipmentEquipmentIndexOperatorsInput
  name: FilterFindManyClassStarting_equipmentEquipmentNameOperatorsInput
  url: FilterFindManyClassStarting_equipmentEquipmentUrlOperatorsInput
}

input FilterFindManyClassStarting_equipmentEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassStarting_equipmentInput {
  equipment: FilterFindManyAbilityScoreSkillsInput
  quantity: Float
}

input FilterFindManyClassStarting_equipmentOperatorsInput {
  equipment: FilterFindManyClassStarting_equipmentEquipmentOperatorsInput
  quantity: FilterFindManyClassStarting_equipmentQuantityOperatorsInput
}

input FilterFindManyClassStarting_equipmentQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyClassSubclassesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassSubclassesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassSubclassesOperatorsInput {
  index: FilterFindManyClassSubclassesIndexOperatorsInput
  name: FilterFindManyClassSubclassesNameOperatorsInput
  url: FilterFindManyClassSubclassesUrlOperatorsInput
}

input FilterFindManyClassSubclassesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyClassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyCondition_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyConditionDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyConditionIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyConditionInput {
  _id: String
  desc: [String]
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyConditionOperatorsInput
  OR: [FilterFindManyConditionInput!]
  AND: [FilterFindManyConditionInput!]
}

input FilterFindManyConditionNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyConditionOperatorsInput {
  _id: FilterFindManyCondition_idOperatorsInput
  desc: FilterFindManyConditionDescOperatorsInput
  index: FilterFindManyConditionIndexOperatorsInput
  name: FilterFindManyConditionNameOperatorsInput
  url: FilterFindManyConditionUrlOperatorsInput
}

input FilterFindManyConditionUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyDamageType_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyDamageTypeDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyDamageTypeIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyDamageTypeInput {
  _id: String
  desc: [String]
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyDamageTypeOperatorsInput
  OR: [FilterFindManyDamageTypeInput!]
  AND: [FilterFindManyDamageTypeInput!]
}

input FilterFindManyDamageTypeNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyDamageTypeOperatorsInput {
  _id: FilterFindManyDamageType_idOperatorsInput
  desc: FilterFindManyDamageTypeDescOperatorsInput
  index: FilterFindManyDamageTypeIndexOperatorsInput
  name: FilterFindManyDamageTypeNameOperatorsInput
  url: FilterFindManyDamageTypeUrlOperatorsInput
}

input FilterFindManyDamageTypeUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipment_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentArmor_categoryOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentArmor_classBaseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyEquipmentArmor_classDex_bonusOperatorsInput {
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
  exists: Boolean
}

input FilterFindManyEquipmentArmor_classInput {
  base: Float
  dex_bonus: Boolean
  max_bonus: Float
}

input FilterFindManyEquipmentArmor_classMax_bonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyEquipmentArmor_classOperatorsInput {
  base: FilterFindManyEquipmentArmor_classBaseOperatorsInput
  dex_bonus: FilterFindManyEquipmentArmor_classDex_bonusOperatorsInput
  max_bonus: FilterFindManyEquipmentArmor_classMax_bonusOperatorsInput
}

input FilterFindManyEquipmentCapacityOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentCategory_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentCategory_rangeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentCategoryEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentCategoryEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentCategoryEquipmentOperatorsInput {
  index: FilterFindManyEquipmentCategoryEquipmentIndexOperatorsInput
  name: FilterFindManyEquipmentCategoryEquipmentNameOperatorsInput
  url: FilterFindManyEquipmentCategoryEquipmentUrlOperatorsInput
}

input FilterFindManyEquipmentCategoryEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentCategoryIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentCategoryInput {
  _id: String
  equipment: [FilterFindManyAbilityScoreSkillsInput]
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyEquipmentCategoryOperatorsInput
  OR: [FilterFindManyEquipmentCategoryInput!]
  AND: [FilterFindManyEquipmentCategoryInput!]
}

input FilterFindManyEquipmentCategoryNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyEquipmentCategoryOperatorsInput {
  _id: FilterFindManyEquipmentCategory_idOperatorsInput
  equipment: FilterFindManyEquipmentCategoryEquipmentOperatorsInput
  index: FilterFindManyEquipmentCategoryIndexOperatorsInput
  name: FilterFindManyEquipmentCategoryNameOperatorsInput
  url: FilterFindManyEquipmentCategoryUrlOperatorsInput
}

input FilterFindManyEquipmentCategoryUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentContentsInput {
  item: FilterFindManyAbilityScoreSkillsInput
  quantity: Float
}

input FilterFindManyEquipmentContentsItemIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentContentsItemNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentContentsItemOperatorsInput {
  index: FilterFindManyEquipmentContentsItemIndexOperatorsInput
  name: FilterFindManyEquipmentContentsItemNameOperatorsInput
  url: FilterFindManyEquipmentContentsItemUrlOperatorsInput
}

input FilterFindManyEquipmentContentsItemUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentContentsOperatorsInput {
  item: FilterFindManyEquipmentContentsItemOperatorsInput
  quantity: FilterFindManyEquipmentContentsQuantityOperatorsInput
}

input FilterFindManyEquipmentContentsQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyEquipmentCostInput {
  quantity: Float
  unit: String
}

input FilterFindManyEquipmentCostOperatorsInput {
  quantity: FilterFindManyEquipmentCostQuantityOperatorsInput
  unit: FilterFindManyEquipmentCostUnitOperatorsInput
}

input FilterFindManyEquipmentCostQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyEquipmentCostUnitOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentDamageDamage_diceOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentDamageDamage_typeIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentDamageDamage_typeNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentDamageDamage_typeOperatorsInput {
  index: FilterFindManyEquipmentDamageDamage_typeIndexOperatorsInput
  name: FilterFindManyEquipmentDamageDamage_typeNameOperatorsInput
  url: FilterFindManyEquipmentDamageDamage_typeUrlOperatorsInput
}

input FilterFindManyEquipmentDamageDamage_typeUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentDamageInput {
  damage_dice: String
  damage_type: FilterFindManyAbilityScoreSkillsInput
}

input FilterFindManyEquipmentDamageOperatorsInput {
  damage_dice: FilterFindManyEquipmentDamageDamage_diceOperatorsInput
  damage_type: FilterFindManyEquipmentDamageDamage_typeOperatorsInput
}

input FilterFindManyEquipmentDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentEquipment_categoryIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentEquipment_categoryNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentEquipment_categoryOperatorsInput {
  index: FilterFindManyEquipmentEquipment_categoryIndexOperatorsInput
  name: FilterFindManyEquipmentEquipment_categoryNameOperatorsInput
  url: FilterFindManyEquipmentEquipment_categoryUrlOperatorsInput
}

input FilterFindManyEquipmentEquipment_categoryUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentGear_categoryIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentGear_categoryNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentGear_categoryOperatorsInput {
  index: FilterFindManyEquipmentGear_categoryIndexOperatorsInput
  name: FilterFindManyEquipmentGear_categoryNameOperatorsInput
  url: FilterFindManyEquipmentGear_categoryUrlOperatorsInput
}

input FilterFindManyEquipmentGear_categoryUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentInput {
  _id: String
  armor_category: String
  armor_class: FilterFindManyEquipmentArmor_classInput
  capacity: String
  category_range: String
  contents: [FilterFindManyEquipmentContentsInput]
  cost: FilterFindManyEquipmentCostInput
  damage: FilterFindManyEquipmentDamageInput
  desc: [String]
  equipment_category: FilterFindManyAbilityScoreSkillsInput
  gear_category: FilterFindManyAbilityScoreSkillsInput
  index: String
  name: String
  properties: [FilterFindManyAbilityScoreSkillsInput]
  quantity: Float
  range: FilterFindManyEquipmentRangeInput
  special: [String]
  speed: FilterFindManyEquipmentSpeedInput
  stealth_disadvantage: Boolean
  str_minimum: Float
  throw_range: FilterFindManyEquipmentThrow_rangeInput
  tool_category: String
  two_handed_damage: FilterFindManyEquipmentTwo_handed_damageInput
  url: String
  vehicle_category: String
  weapon_category: String
  weapon_range: String
  weight: Float

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyEquipmentOperatorsInput
  OR: [FilterFindManyEquipmentInput!]
  AND: [FilterFindManyEquipmentInput!]
}

input FilterFindManyEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyEquipmentOperatorsInput {
  _id: FilterFindManyEquipment_idOperatorsInput
  armor_category: FilterFindManyEquipmentArmor_categoryOperatorsInput
  armor_class: FilterFindManyEquipmentArmor_classOperatorsInput
  capacity: FilterFindManyEquipmentCapacityOperatorsInput
  category_range: FilterFindManyEquipmentCategory_rangeOperatorsInput
  contents: FilterFindManyEquipmentContentsOperatorsInput
  cost: FilterFindManyEquipmentCostOperatorsInput
  damage: FilterFindManyEquipmentDamageOperatorsInput
  desc: FilterFindManyEquipmentDescOperatorsInput
  equipment_category: FilterFindManyEquipmentEquipment_categoryOperatorsInput
  gear_category: FilterFindManyEquipmentGear_categoryOperatorsInput
  index: FilterFindManyEquipmentIndexOperatorsInput
  name: FilterFindManyEquipmentNameOperatorsInput
  properties: FilterFindManyEquipmentPropertiesOperatorsInput
  quantity: FilterFindManyEquipmentQuantityOperatorsInput
  range: FilterFindManyEquipmentRangeOperatorsInput
  special: FilterFindManyEquipmentSpecialOperatorsInput
  speed: FilterFindManyEquipmentSpeedOperatorsInput
  stealth_disadvantage: FilterFindManyEquipmentStealth_disadvantageOperatorsInput
  str_minimum: FilterFindManyEquipmentStr_minimumOperatorsInput
  throw_range: FilterFindManyEquipmentThrow_rangeOperatorsInput
  tool_category: FilterFindManyEquipmentTool_categoryOperatorsInput
  two_handed_damage: FilterFindManyEquipmentTwo_handed_damageOperatorsInput
  url: FilterFindManyEquipmentUrlOperatorsInput
  vehicle_category: FilterFindManyEquipmentVehicle_categoryOperatorsInput
  weapon_category: FilterFindManyEquipmentWeapon_categoryOperatorsInput
  weapon_range: FilterFindManyEquipmentWeapon_rangeOperatorsInput
  weight: FilterFindManyEquipmentWeightOperatorsInput
}

input FilterFindManyEquipmentPropertiesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentPropertiesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentPropertiesOperatorsInput {
  index: FilterFindManyEquipmentPropertiesIndexOperatorsInput
  name: FilterFindManyEquipmentPropertiesNameOperatorsInput
  url: FilterFindManyEquipmentPropertiesUrlOperatorsInput
}

input FilterFindManyEquipmentPropertiesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyEquipmentRangeInput {
  long: Float
  normal: Float
}

input FilterFindManyEquipmentRangeLongOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyEquipmentRangeNormalOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyEquipmentRangeOperatorsInput {
  long: FilterFindManyEquipmentRangeLongOperatorsInput
  normal: FilterFindManyEquipmentRangeNormalOperatorsInput
}

input FilterFindManyEquipmentSpecialOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentSpeedInput {
  quantity: Float
  unit: String
}

input FilterFindManyEquipmentSpeedOperatorsInput {
  quantity: FilterFindManyEquipmentSpeedQuantityOperatorsInput
  unit: FilterFindManyEquipmentSpeedUnitOperatorsInput
}

input FilterFindManyEquipmentSpeedQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyEquipmentSpeedUnitOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentStealth_disadvantageOperatorsInput {
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
  exists: Boolean
}

input FilterFindManyEquipmentStr_minimumOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyEquipmentThrow_rangeInput {
  long: Float
  normal: Float
}

input FilterFindManyEquipmentThrow_rangeLongOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyEquipmentThrow_rangeNormalOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyEquipmentThrow_rangeOperatorsInput {
  long: FilterFindManyEquipmentThrow_rangeLongOperatorsInput
  normal: FilterFindManyEquipmentThrow_rangeNormalOperatorsInput
}

input FilterFindManyEquipmentTool_categoryOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentTwo_handed_damageDamage_diceOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentTwo_handed_damageDamage_typeIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentTwo_handed_damageDamage_typeNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentTwo_handed_damageDamage_typeOperatorsInput {
  index: FilterFindManyEquipmentTwo_handed_damageDamage_typeIndexOperatorsInput
  name: FilterFindManyEquipmentTwo_handed_damageDamage_typeNameOperatorsInput
  url: FilterFindManyEquipmentTwo_handed_damageDamage_typeUrlOperatorsInput
}

input FilterFindManyEquipmentTwo_handed_damageDamage_typeUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentTwo_handed_damageInput {
  damage_dice: String
  damage_type: FilterFindManyAbilityScoreSkillsInput
}

input FilterFindManyEquipmentTwo_handed_damageOperatorsInput {
  damage_dice: FilterFindManyEquipmentTwo_handed_damageDamage_diceOperatorsInput
  damage_type: FilterFindManyEquipmentTwo_handed_damageDamage_typeOperatorsInput
}

input FilterFindManyEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentVehicle_categoryOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentWeapon_categoryOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentWeapon_rangeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyEquipmentWeightOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyFeature_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureChoiceChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyFeatureChoiceFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureChoiceFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureChoiceFromOperatorsInput {
  index: FilterFindManyFeatureChoiceFromIndexOperatorsInput
  name: FilterFindManyFeatureChoiceFromNameOperatorsInput
  url: FilterFindManyFeatureChoiceFromUrlOperatorsInput
}

input FilterFindManyFeatureChoiceFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureChoiceInput {
  choose: Float
  from: [FilterFindManyAbilityScoreSkillsInput]
  type: String
}

input FilterFindManyFeatureChoiceOperatorsInput {
  choose: FilterFindManyFeatureChoiceChooseOperatorsInput
  from: FilterFindManyFeatureChoiceFromOperatorsInput
  type: FilterFindManyFeatureChoiceTypeOperatorsInput
}

input FilterFindManyFeatureChoiceTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureClassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureClassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureClassOperatorsInput {
  index: FilterFindManyFeatureClassIndexOperatorsInput
  name: FilterFindManyFeatureClassNameOperatorsInput
  url: FilterFindManyFeatureClassUrlOperatorsInput
}

input FilterFindManyFeatureClassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureGroupOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureInput {
  _id: String
  choice: FilterFindManyFeatureChoiceInput
  class: FilterFindManyAbilityScoreSkillsInput
  desc: [String]
  group: String
  index: String
  level: Float
  name: String
  prerequisites: [FilterFindManyFeaturePrerequisitesInput]
  reference: String
  subclass: FilterFindManyAbilityScoreSkillsInput
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyFeatureOperatorsInput
  OR: [FilterFindManyFeatureInput!]
  AND: [FilterFindManyFeatureInput!]
}

input FilterFindManyFeatureLevelOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyFeatureNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyFeatureOperatorsInput {
  _id: FilterFindManyFeature_idOperatorsInput
  choice: FilterFindManyFeatureChoiceOperatorsInput
  class: FilterFindManyFeatureClassOperatorsInput
  desc: FilterFindManyFeatureDescOperatorsInput
  group: FilterFindManyFeatureGroupOperatorsInput
  index: FilterFindManyFeatureIndexOperatorsInput
  level: FilterFindManyFeatureLevelOperatorsInput
  name: FilterFindManyFeatureNameOperatorsInput
  prerequisites: FilterFindManyFeaturePrerequisitesOperatorsInput
  reference: FilterFindManyFeatureReferenceOperatorsInput
  subclass: FilterFindManyFeatureSubclassOperatorsInput
  url: FilterFindManyFeatureUrlOperatorsInput
}

input FilterFindManyFeaturePrerequisitesInput {
  level: Float
  type: String
}

input FilterFindManyFeaturePrerequisitesLevelOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyFeaturePrerequisitesOperatorsInput {
  level: FilterFindManyFeaturePrerequisitesLevelOperatorsInput
  type: FilterFindManyFeaturePrerequisitesTypeOperatorsInput
}

input FilterFindManyFeaturePrerequisitesTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureReferenceOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureSubclassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureSubclassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureSubclassOperatorsInput {
  index: FilterFindManyFeatureSubclassIndexOperatorsInput
  name: FilterFindManyFeatureSubclassNameOperatorsInput
  url: FilterFindManyFeatureSubclassUrlOperatorsInput
}

input FilterFindManyFeatureSubclassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyFeatureUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLanguage_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLanguageDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLanguageIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLanguageInput {
  _id: String
  desc: String
  index: String
  name: String
  script: String
  type: String
  typical_speakers: [String]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyLanguageOperatorsInput
  OR: [FilterFindManyLanguageInput!]
  AND: [FilterFindManyLanguageInput!]
}

input FilterFindManyLanguageNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyLanguageOperatorsInput {
  _id: FilterFindManyLanguage_idOperatorsInput
  desc: FilterFindManyLanguageDescOperatorsInput
  index: FilterFindManyLanguageIndexOperatorsInput
  name: FilterFindManyLanguageNameOperatorsInput
  script: FilterFindManyLanguageScriptOperatorsInput
  type: FilterFindManyLanguageTypeOperatorsInput
  typical_speakers: FilterFindManyLanguageTypical_speakersOperatorsInput
  url: FilterFindManyLanguageUrlOperatorsInput
}

input FilterFindManyLanguageScriptOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLanguageTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLanguageTypical_speakersOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLanguageUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevel_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevelAbility_score_bonusesOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificAction_surgesOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificArcane_recovery_levelsOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificAura_rangeOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificBardic_inspiration_dieOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificBrutal_critical_diceOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificChannel_divinity_chargesOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificCreating_spell_slotsInput {
  sorcery_point_cost: Float
  spell_slot_level: Float
}

input FilterFindManyLevelClass_specificCreating_spell_slotsOperatorsInput {
  sorcery_point_cost: FilterFindManyLevelClass_specificCreating_spell_slotsSorcery_point_costOperatorsInput
  spell_slot_level: FilterFindManyLevelClass_specificCreating_spell_slotsSpell_slot_levelOperatorsInput
}

input FilterFindManyLevelClass_specificCreating_spell_slotsSorcery_point_costOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificCreating_spell_slotsSpell_slot_levelOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificDestroy_undead_crOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificExtra_attacksOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificFavored_enemiesOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificFavored_terrainOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificIndomitable_usesOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificInput {
  action_surges: Float
  arcane_recovery_levels: Float
  aura_range: Float
  bardic_inspiration_die: Float
  brutal_critical_dice: Float
  channel_divinity_charges: Float
  creating_spell_slots: [FilterFindManyLevelClass_specificCreating_spell_slotsInput]
  destroy_undead_cr: Float
  extra_attacks: Float
  favored_enemies: Float
  favored_terrain: Float
  indomitable_uses: Float
  invocations_known: Float
  ki_points: Float
  magical_secrets_max_5: Float
  magical_secrets_max_7: Float
  magical_secrets_max_9: Float
  martial_arts: FilterFindManyLevelClass_specificMartial_artsInput
  metamagic_known: Float
  mystic_arcanum_level_6: Float
  mystic_arcanum_level_7: Float
  mystic_arcanum_level_8: Float
  mystic_arcanum_level_9: Float
  rage_count: Float
  rage_damage_bonus: Float
  sneak_attack: FilterFindManyLevelClass_specificSneak_attackInput
  song_of_rest_die: Float
  sorcery_points: Float
  unarmored_movement: Float
  wild_shape_fly: Boolean
  wild_shape_max_cr: Float
  wild_shape_swim: Boolean
}

input FilterFindManyLevelClass_specificInvocations_knownOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificKi_pointsOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificMagical_secrets_max_5OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificMagical_secrets_max_7OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificMagical_secrets_max_9OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificMartial_artsDice_countOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificMartial_artsDice_valueOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificMartial_artsInput {
  dice_count: Float
  dice_value: Float
}

input FilterFindManyLevelClass_specificMartial_artsOperatorsInput {
  dice_count: FilterFindManyLevelClass_specificMartial_artsDice_countOperatorsInput
  dice_value: FilterFindManyLevelClass_specificMartial_artsDice_valueOperatorsInput
}

input FilterFindManyLevelClass_specificMetamagic_knownOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificMystic_arcanum_level_6OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificMystic_arcanum_level_7OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificMystic_arcanum_level_8OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificMystic_arcanum_level_9OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificOperatorsInput {
  action_surges: FilterFindManyLevelClass_specificAction_surgesOperatorsInput
  arcane_recovery_levels: FilterFindManyLevelClass_specificArcane_recovery_levelsOperatorsInput
  aura_range: FilterFindManyLevelClass_specificAura_rangeOperatorsInput
  bardic_inspiration_die: FilterFindManyLevelClass_specificBardic_inspiration_dieOperatorsInput
  brutal_critical_dice: FilterFindManyLevelClass_specificBrutal_critical_diceOperatorsInput
  channel_divinity_charges: FilterFindManyLevelClass_specificChannel_divinity_chargesOperatorsInput
  creating_spell_slots: FilterFindManyLevelClass_specificCreating_spell_slotsOperatorsInput
  destroy_undead_cr: FilterFindManyLevelClass_specificDestroy_undead_crOperatorsInput
  extra_attacks: FilterFindManyLevelClass_specificExtra_attacksOperatorsInput
  favored_enemies: FilterFindManyLevelClass_specificFavored_enemiesOperatorsInput
  favored_terrain: FilterFindManyLevelClass_specificFavored_terrainOperatorsInput
  indomitable_uses: FilterFindManyLevelClass_specificIndomitable_usesOperatorsInput
  invocations_known: FilterFindManyLevelClass_specificInvocations_knownOperatorsInput
  ki_points: FilterFindManyLevelClass_specificKi_pointsOperatorsInput
  magical_secrets_max_5: FilterFindManyLevelClass_specificMagical_secrets_max_5OperatorsInput
  magical_secrets_max_7: FilterFindManyLevelClass_specificMagical_secrets_max_7OperatorsInput
  magical_secrets_max_9: FilterFindManyLevelClass_specificMagical_secrets_max_9OperatorsInput
  martial_arts: FilterFindManyLevelClass_specificMartial_artsOperatorsInput
  metamagic_known: FilterFindManyLevelClass_specificMetamagic_knownOperatorsInput
  mystic_arcanum_level_6: FilterFindManyLevelClass_specificMystic_arcanum_level_6OperatorsInput
  mystic_arcanum_level_7: FilterFindManyLevelClass_specificMystic_arcanum_level_7OperatorsInput
  mystic_arcanum_level_8: FilterFindManyLevelClass_specificMystic_arcanum_level_8OperatorsInput
  mystic_arcanum_level_9: FilterFindManyLevelClass_specificMystic_arcanum_level_9OperatorsInput
  rage_count: FilterFindManyLevelClass_specificRage_countOperatorsInput
  rage_damage_bonus: FilterFindManyLevelClass_specificRage_damage_bonusOperatorsInput
  sneak_attack: FilterFindManyLevelClass_specificSneak_attackOperatorsInput
  song_of_rest_die: FilterFindManyLevelClass_specificSong_of_rest_dieOperatorsInput
  sorcery_points: FilterFindManyLevelClass_specificSorcery_pointsOperatorsInput
  unarmored_movement: FilterFindManyLevelClass_specificUnarmored_movementOperatorsInput
  wild_shape_fly: FilterFindManyLevelClass_specificWild_shape_flyOperatorsInput
  wild_shape_max_cr: FilterFindManyLevelClass_specificWild_shape_max_crOperatorsInput
  wild_shape_swim: FilterFindManyLevelClass_specificWild_shape_swimOperatorsInput
}

input FilterFindManyLevelClass_specificRage_countOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificRage_damage_bonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificSneak_attackDice_countOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificSneak_attackDice_valueOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificSneak_attackInput {
  dice_count: Float
  dice_value: Float
}

input FilterFindManyLevelClass_specificSneak_attackOperatorsInput {
  dice_count: FilterFindManyLevelClass_specificSneak_attackDice_countOperatorsInput
  dice_value: FilterFindManyLevelClass_specificSneak_attackDice_valueOperatorsInput
}

input FilterFindManyLevelClass_specificSong_of_rest_dieOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificSorcery_pointsOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificUnarmored_movementOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificWild_shape_flyOperatorsInput {
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
  exists: Boolean
}

input FilterFindManyLevelClass_specificWild_shape_max_crOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelClass_specificWild_shape_swimOperatorsInput {
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
  exists: Boolean
}

input FilterFindManyLevelClassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevelClassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevelClassOperatorsInput {
  index: FilterFindManyLevelClassIndexOperatorsInput
  name: FilterFindManyLevelClassNameOperatorsInput
  url: FilterFindManyLevelClassUrlOperatorsInput
}

input FilterFindManyLevelClassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevelFeature_choicesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevelFeature_choicesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevelFeature_choicesOperatorsInput {
  index: FilterFindManyLevelFeature_choicesIndexOperatorsInput
  name: FilterFindManyLevelFeature_choicesNameOperatorsInput
  url: FilterFindManyLevelFeature_choicesUrlOperatorsInput
}

input FilterFindManyLevelFeature_choicesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevelFeaturesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevelFeaturesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevelFeaturesOperatorsInput {
  index: FilterFindManyLevelFeaturesIndexOperatorsInput
  name: FilterFindManyLevelFeaturesNameOperatorsInput
  url: FilterFindManyLevelFeaturesUrlOperatorsInput
}

input FilterFindManyLevelFeaturesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevelIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevelInput {
  _id: String
  ability_score_bonuses: Float
  class: FilterFindManyAbilityScoreSkillsInput
  class_specific: FilterFindManyLevelClass_specificInput
  feature_choices: [FilterFindManyAbilityScoreSkillsInput]
  features: [FilterFindManyAbilityScoreSkillsInput]
  index: String
  level: Float
  prof_bonus: Float
  spellcasting: FilterFindManyLevelSpellcastingInput
  subclass: FilterFindManyAbilityScoreSkillsInput
  subclass_specific: FilterFindManyLevelSubclass_specificInput
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyLevelOperatorsInput
  OR: [FilterFindManyLevelInput!]
  AND: [FilterFindManyLevelInput!]
}

input FilterFindManyLevelLevelOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyLevelOperatorsInput {
  _id: FilterFindManyLevel_idOperatorsInput
  ability_score_bonuses: FilterFindManyLevelAbility_score_bonusesOperatorsInput
  class: FilterFindManyLevelClassOperatorsInput
  class_specific: FilterFindManyLevelClass_specificOperatorsInput
  feature_choices: FilterFindManyLevelFeature_choicesOperatorsInput
  features: FilterFindManyLevelFeaturesOperatorsInput
  index: FilterFindManyLevelIndexOperatorsInput
  level: FilterFindManyLevelLevelOperatorsInput
  prof_bonus: FilterFindManyLevelProf_bonusOperatorsInput
  spellcasting: FilterFindManyLevelSpellcastingOperatorsInput
  subclass: FilterFindManyLevelSubclassOperatorsInput
  subclass_specific: FilterFindManyLevelSubclass_specificOperatorsInput
  url: FilterFindManyLevelUrlOperatorsInput
}

input FilterFindManyLevelProf_bonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelSpellcastingCantrips_knownOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelSpellcastingInput {
  cantrips_known: Float
  spell_slots_level_1: Float
  spell_slots_level_2: Float
  spell_slots_level_3: Float
  spell_slots_level_4: Float
  spell_slots_level_5: Float
  spell_slots_level_6: Float
  spell_slots_level_7: Float
  spell_slots_level_8: Float
  spell_slots_level_9: Float
  spells_known: Float
}

input FilterFindManyLevelSpellcastingOperatorsInput {
  cantrips_known: FilterFindManyLevelSpellcastingCantrips_knownOperatorsInput
  spell_slots_level_1: FilterFindManyLevelSpellcastingSpell_slots_level_1OperatorsInput
  spell_slots_level_2: FilterFindManyLevelSpellcastingSpell_slots_level_2OperatorsInput
  spell_slots_level_3: FilterFindManyLevelSpellcastingSpell_slots_level_3OperatorsInput
  spell_slots_level_4: FilterFindManyLevelSpellcastingSpell_slots_level_4OperatorsInput
  spell_slots_level_5: FilterFindManyLevelSpellcastingSpell_slots_level_5OperatorsInput
  spell_slots_level_6: FilterFindManyLevelSpellcastingSpell_slots_level_6OperatorsInput
  spell_slots_level_7: FilterFindManyLevelSpellcastingSpell_slots_level_7OperatorsInput
  spell_slots_level_8: FilterFindManyLevelSpellcastingSpell_slots_level_8OperatorsInput
  spell_slots_level_9: FilterFindManyLevelSpellcastingSpell_slots_level_9OperatorsInput
  spells_known: FilterFindManyLevelSpellcastingSpells_knownOperatorsInput
}

input FilterFindManyLevelSpellcastingSpell_slots_level_1OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelSpellcastingSpell_slots_level_2OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelSpellcastingSpell_slots_level_3OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelSpellcastingSpell_slots_level_4OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelSpellcastingSpell_slots_level_5OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelSpellcastingSpell_slots_level_6OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelSpellcastingSpell_slots_level_7OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelSpellcastingSpell_slots_level_8OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelSpellcastingSpell_slots_level_9OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelSpellcastingSpells_knownOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelSubclass_specificAdditional_magical_secrets_max_lvlOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelSubclass_specificAura_rangeOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyLevelSubclass_specificInput {
  additional_magical_secrets_max_lvl: Float
  aura_range: Float
}

input FilterFindManyLevelSubclass_specificOperatorsInput {
  additional_magical_secrets_max_lvl: FilterFindManyLevelSubclass_specificAdditional_magical_secrets_max_lvlOperatorsInput
  aura_range: FilterFindManyLevelSubclass_specificAura_rangeOperatorsInput
}

input FilterFindManyLevelSubclassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevelSubclassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevelSubclassOperatorsInput {
  index: FilterFindManyLevelSubclassIndexOperatorsInput
  name: FilterFindManyLevelSubclassNameOperatorsInput
  url: FilterFindManyLevelSubclassUrlOperatorsInput
}

input FilterFindManyLevelSubclassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyLevelUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMagicItem_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMagicItemDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMagicItemEquipment_categoryIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMagicItemEquipment_categoryNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMagicItemEquipment_categoryOperatorsInput {
  index: FilterFindManyMagicItemEquipment_categoryIndexOperatorsInput
  name: FilterFindManyMagicItemEquipment_categoryNameOperatorsInput
  url: FilterFindManyMagicItemEquipment_categoryUrlOperatorsInput
}

input FilterFindManyMagicItemEquipment_categoryUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMagicItemIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMagicItemInput {
  _id: String
  desc: [String]
  equipment_category: FilterFindManyAbilityScoreSkillsInput
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyMagicItemOperatorsInput
  OR: [FilterFindManyMagicItemInput!]
  AND: [FilterFindManyMagicItemInput!]
}

input FilterFindManyMagicItemNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyMagicItemOperatorsInput {
  _id: FilterFindManyMagicItem_idOperatorsInput
  desc: FilterFindManyMagicItemDescOperatorsInput
  equipment_category: FilterFindManyMagicItemEquipment_categoryOperatorsInput
  index: FilterFindManyMagicItemIndexOperatorsInput
  name: FilterFindManyMagicItemNameOperatorsInput
  url: FilterFindManyMagicItemUrlOperatorsInput
}

input FilterFindManyMagicItemUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMagicSchool_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMagicSchoolDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMagicSchoolIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMagicSchoolInput {
  _id: String
  desc: String
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyMagicSchoolOperatorsInput
  OR: [FilterFindManyMagicSchoolInput!]
  AND: [FilterFindManyMagicSchoolInput!]
}

input FilterFindManyMagicSchoolNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyMagicSchoolOperatorsInput {
  _id: FilterFindManyMagicSchool_idOperatorsInput
  desc: FilterFindManyMagicSchoolDescOperatorsInput
  index: FilterFindManyMagicSchoolIndexOperatorsInput
  name: FilterFindManyMagicSchoolNameOperatorsInput
  url: FilterFindManyMagicSchoolUrlOperatorsInput
}

input FilterFindManyMagicSchoolUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonster_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterActionsAttack_bonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyMonsterActionsDamageDamage_diceOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterActionsDamageDamage_typeIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterActionsDamageDamage_typeNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterActionsDamageDamage_typeOperatorsInput {
  index: FilterFindManyMonsterActionsDamageDamage_typeIndexOperatorsInput
  name: FilterFindManyMonsterActionsDamageDamage_typeNameOperatorsInput
  url: FilterFindManyMonsterActionsDamageDamage_typeUrlOperatorsInput
}

input FilterFindManyMonsterActionsDamageDamage_typeUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterActionsDamageInput {
  damage_dice: String
  damage_type: FilterFindManyAbilityScoreSkillsInput
}

input FilterFindManyMonsterActionsDamageOperatorsInput {
  damage_dice: FilterFindManyMonsterActionsDamageDamage_diceOperatorsInput
  damage_type: FilterFindManyMonsterActionsDamageDamage_typeOperatorsInput
}

input FilterFindManyMonsterActionsDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterActionsInput {
  attack_bonus: Float
  damage: [FilterFindManyMonsterActionsDamageInput]
  desc: String
  name: String
}

input FilterFindManyMonsterActionsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterActionsOperatorsInput {
  attack_bonus: FilterFindManyMonsterActionsAttack_bonusOperatorsInput
  damage: FilterFindManyMonsterActionsDamageOperatorsInput
  desc: FilterFindManyMonsterActionsDescOperatorsInput
  name: FilterFindManyMonsterActionsNameOperatorsInput
}

input FilterFindManyMonsterAlignmentOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterArmor_classOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyMonsterChallenge_ratingOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyMonsterCharismaOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyMonsterCondition_immunitiesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterCondition_immunitiesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterCondition_immunitiesOperatorsInput {
  index: FilterFindManyMonsterCondition_immunitiesIndexOperatorsInput
  name: FilterFindManyMonsterCondition_immunitiesNameOperatorsInput
  url: FilterFindManyMonsterCondition_immunitiesUrlOperatorsInput
}

input FilterFindManyMonsterCondition_immunitiesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterConstitutionOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyMonsterDamage_immunitiesOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterDamage_resistancesOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterDamage_vulnerabilitiesOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterDexterityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyMonsterFormsIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterFormsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterFormsOperatorsInput {
  index: FilterFindManyMonsterFormsIndexOperatorsInput
  name: FilterFindManyMonsterFormsNameOperatorsInput
  url: FilterFindManyMonsterFormsUrlOperatorsInput
}

input FilterFindManyMonsterFormsUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterHit_diceOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterHit_pointsOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyMonsterIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterInput {
  _id: String
  actions: [FilterFindManyMonsterActionsInput]
  alignment: String
  armor_class: Float
  challenge_rating: Float
  charisma: Float
  condition_immunities: [FilterFindManyAbilityScoreSkillsInput]
  constitution: Float
  damage_immunities: [String]
  damage_resistances: [String]
  damage_vulnerabilities: [String]
  dexterity: Float
  forms: [FilterFindManyAbilityScoreSkillsInput]
  hit_dice: String
  hit_points: Float
  index: String
  intelligence: Float
  languages: String
  legendary_actions: [FilterFindManyMonsterLegendary_actionsInput]
  name: String
  proficiencies: [FilterFindManyMonsterProficienciesInput]
  reactions: [FilterFindManyMonsterReactionsInput]
  senses: FilterFindManyMonsterSensesInput
  size: String
  special_abilities: [FilterFindManyMonsterSpecial_abilitiesInput]
  speed: FilterFindManyMonsterSpeedInput
  strength: Float
  subtype: String
  type: String
  url: String
  wisdom: Float
  xp: Float

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyMonsterOperatorsInput
  OR: [FilterFindManyMonsterInput!]
  AND: [FilterFindManyMonsterInput!]
}

input FilterFindManyMonsterIntelligenceOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyMonsterLanguagesOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterLegendary_actionsAttack_bonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyMonsterLegendary_actionsDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterLegendary_actionsInput {
  attack_bonus: Float
  desc: String
  name: String
}

input FilterFindManyMonsterLegendary_actionsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterLegendary_actionsOperatorsInput {
  attack_bonus: FilterFindManyMonsterLegendary_actionsAttack_bonusOperatorsInput
  desc: FilterFindManyMonsterLegendary_actionsDescOperatorsInput
  name: FilterFindManyMonsterLegendary_actionsNameOperatorsInput
}

input FilterFindManyMonsterNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyMonsterOperatorsInput {
  _id: FilterFindManyMonster_idOperatorsInput
  actions: FilterFindManyMonsterActionsOperatorsInput
  alignment: FilterFindManyMonsterAlignmentOperatorsInput
  armor_class: FilterFindManyMonsterArmor_classOperatorsInput
  challenge_rating: FilterFindManyMonsterChallenge_ratingOperatorsInput
  charisma: FilterFindManyMonsterCharismaOperatorsInput
  condition_immunities: FilterFindManyMonsterCondition_immunitiesOperatorsInput
  constitution: FilterFindManyMonsterConstitutionOperatorsInput
  damage_immunities: FilterFindManyMonsterDamage_immunitiesOperatorsInput
  damage_resistances: FilterFindManyMonsterDamage_resistancesOperatorsInput
  damage_vulnerabilities: FilterFindManyMonsterDamage_vulnerabilitiesOperatorsInput
  dexterity: FilterFindManyMonsterDexterityOperatorsInput
  forms: FilterFindManyMonsterFormsOperatorsInput
  hit_dice: FilterFindManyMonsterHit_diceOperatorsInput
  hit_points: FilterFindManyMonsterHit_pointsOperatorsInput
  index: FilterFindManyMonsterIndexOperatorsInput
  intelligence: FilterFindManyMonsterIntelligenceOperatorsInput
  languages: FilterFindManyMonsterLanguagesOperatorsInput
  legendary_actions: FilterFindManyMonsterLegendary_actionsOperatorsInput
  name: FilterFindManyMonsterNameOperatorsInput
  proficiencies: FilterFindManyMonsterProficienciesOperatorsInput
  reactions: FilterFindManyMonsterReactionsOperatorsInput
  senses: FilterFindManyMonsterSensesOperatorsInput
  size: FilterFindManyMonsterSizeOperatorsInput
  special_abilities: FilterFindManyMonsterSpecial_abilitiesOperatorsInput
  speed: FilterFindManyMonsterSpeedOperatorsInput
  strength: FilterFindManyMonsterStrengthOperatorsInput
  subtype: FilterFindManyMonsterSubtypeOperatorsInput
  type: FilterFindManyMonsterTypeOperatorsInput
  url: FilterFindManyMonsterUrlOperatorsInput
  wisdom: FilterFindManyMonsterWisdomOperatorsInput
  xp: FilterFindManyMonsterXpOperatorsInput
}

input FilterFindManyMonsterProficienciesInput {
  proficiency: FilterFindManyAbilityScoreSkillsInput
  value: Float
}

input FilterFindManyMonsterProficienciesOperatorsInput {
  proficiency: FilterFindManyMonsterProficienciesProficiencyOperatorsInput
  value: FilterFindManyMonsterProficienciesValueOperatorsInput
}

input FilterFindManyMonsterProficienciesProficiencyIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterProficienciesProficiencyNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterProficienciesProficiencyOperatorsInput {
  index: FilterFindManyMonsterProficienciesProficiencyIndexOperatorsInput
  name: FilterFindManyMonsterProficienciesProficiencyNameOperatorsInput
  url: FilterFindManyMonsterProficienciesProficiencyUrlOperatorsInput
}

input FilterFindManyMonsterProficienciesProficiencyUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterProficienciesValueOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyMonsterReactionsDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterReactionsInput {
  desc: String
  name: String
}

input FilterFindManyMonsterReactionsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterReactionsOperatorsInput {
  desc: FilterFindManyMonsterReactionsDescOperatorsInput
  name: FilterFindManyMonsterReactionsNameOperatorsInput
}

input FilterFindManyMonsterSensesBlindsightOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterSensesDarkvisionOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterSensesInput {
  blindsight: String
  darkvision: String
  passive_perception: Float
  tremorsense: String
  truesight: String
}

input FilterFindManyMonsterSensesOperatorsInput {
  blindsight: FilterFindManyMonsterSensesBlindsightOperatorsInput
  darkvision: FilterFindManyMonsterSensesDarkvisionOperatorsInput
  passive_perception: FilterFindManyMonsterSensesPassive_perceptionOperatorsInput
  tremorsense: FilterFindManyMonsterSensesTremorsenseOperatorsInput
  truesight: FilterFindManyMonsterSensesTruesightOperatorsInput
}

input FilterFindManyMonsterSensesPassive_perceptionOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyMonsterSensesTremorsenseOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterSensesTruesightOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterSizeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterSpecial_abilitiesDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterSpecial_abilitiesInput {
  desc: String
  name: String
}

input FilterFindManyMonsterSpecial_abilitiesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterSpecial_abilitiesOperatorsInput {
  desc: FilterFindManyMonsterSpecial_abilitiesDescOperatorsInput
  name: FilterFindManyMonsterSpecial_abilitiesNameOperatorsInput
}

input FilterFindManyMonsterSpeedBurrowOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterSpeedClimbOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterSpeedFlyOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterSpeedHoverOperatorsInput {
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
  exists: Boolean
}

input FilterFindManyMonsterSpeedInput {
  burrow: String
  climb: String
  fly: String
  hover: Boolean
  swim: String
  walk: String
}

input FilterFindManyMonsterSpeedOperatorsInput {
  burrow: FilterFindManyMonsterSpeedBurrowOperatorsInput
  climb: FilterFindManyMonsterSpeedClimbOperatorsInput
  fly: FilterFindManyMonsterSpeedFlyOperatorsInput
  hover: FilterFindManyMonsterSpeedHoverOperatorsInput
  swim: FilterFindManyMonsterSpeedSwimOperatorsInput
  walk: FilterFindManyMonsterSpeedWalkOperatorsInput
}

input FilterFindManyMonsterSpeedSwimOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterSpeedWalkOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterStrengthOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyMonsterSubtypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyMonsterWisdomOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyMonsterXpOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyProficiency_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyProficiencyClassesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyProficiencyClassesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyProficiencyClassesOperatorsInput {
  index: FilterFindManyProficiencyClassesIndexOperatorsInput
  name: FilterFindManyProficiencyClassesNameOperatorsInput
  url: FilterFindManyProficiencyClassesUrlOperatorsInput
}

input FilterFindManyProficiencyClassesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyProficiencyIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyProficiencyInput {
  _id: String
  classes: [FilterFindManyAbilityScoreSkillsInput]
  index: String
  name: String
  races: [FilterFindManyAbilityScoreSkillsInput]
  references: [FilterFindManyProficiencyReferencesInput]
  type: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyProficiencyOperatorsInput
  OR: [FilterFindManyProficiencyInput!]
  AND: [FilterFindManyProficiencyInput!]
}

input FilterFindManyProficiencyNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyProficiencyOperatorsInput {
  _id: FilterFindManyProficiency_idOperatorsInput
  classes: FilterFindManyProficiencyClassesOperatorsInput
  index: FilterFindManyProficiencyIndexOperatorsInput
  name: FilterFindManyProficiencyNameOperatorsInput
  races: FilterFindManyProficiencyRacesOperatorsInput
  references: FilterFindManyProficiencyReferencesOperatorsInput
  type: FilterFindManyProficiencyTypeOperatorsInput
  url: FilterFindManyProficiencyUrlOperatorsInput
}

input FilterFindManyProficiencyRacesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyProficiencyRacesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyProficiencyRacesOperatorsInput {
  index: FilterFindManyProficiencyRacesIndexOperatorsInput
  name: FilterFindManyProficiencyRacesNameOperatorsInput
  url: FilterFindManyProficiencyRacesUrlOperatorsInput
}

input FilterFindManyProficiencyRacesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyProficiencyReferencesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyProficiencyReferencesInput {
  index: String
  name: String
  type: String
  url: String
}

input FilterFindManyProficiencyReferencesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyProficiencyReferencesOperatorsInput {
  index: FilterFindManyProficiencyReferencesIndexOperatorsInput
  name: FilterFindManyProficiencyReferencesNameOperatorsInput
  type: FilterFindManyProficiencyReferencesTypeOperatorsInput
  url: FilterFindManyProficiencyReferencesUrlOperatorsInput
}

input FilterFindManyProficiencyReferencesTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyProficiencyReferencesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyProficiencyTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyProficiencyUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRace_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceAbility_bonus_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyRaceAbility_bonus_optionsFromAbility_scoreIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceAbility_bonus_optionsFromAbility_scoreNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceAbility_bonus_optionsFromAbility_scoreOperatorsInput {
  index: FilterFindManyRaceAbility_bonus_optionsFromAbility_scoreIndexOperatorsInput
  name: FilterFindManyRaceAbility_bonus_optionsFromAbility_scoreNameOperatorsInput
  url: FilterFindManyRaceAbility_bonus_optionsFromAbility_scoreUrlOperatorsInput
}

input FilterFindManyRaceAbility_bonus_optionsFromAbility_scoreUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceAbility_bonus_optionsFromBonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyRaceAbility_bonus_optionsFromInput {
  ability_score: FilterFindManyAbilityScoreSkillsInput
  bonus: Float
}

input FilterFindManyRaceAbility_bonus_optionsFromOperatorsInput {
  ability_score: FilterFindManyRaceAbility_bonus_optionsFromAbility_scoreOperatorsInput
  bonus: FilterFindManyRaceAbility_bonus_optionsFromBonusOperatorsInput
}

input FilterFindManyRaceAbility_bonus_optionsInput {
  choose: Float
  from: [FilterFindManyRaceAbility_bonus_optionsFromInput]
  type: String
}

input FilterFindManyRaceAbility_bonus_optionsOperatorsInput {
  choose: FilterFindManyRaceAbility_bonus_optionsChooseOperatorsInput
  from: FilterFindManyRaceAbility_bonus_optionsFromOperatorsInput
  type: FilterFindManyRaceAbility_bonus_optionsTypeOperatorsInput
}

input FilterFindManyRaceAbility_bonus_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceAbility_bonusesAbility_scoreIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceAbility_bonusesAbility_scoreNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceAbility_bonusesAbility_scoreOperatorsInput {
  index: FilterFindManyRaceAbility_bonusesAbility_scoreIndexOperatorsInput
  name: FilterFindManyRaceAbility_bonusesAbility_scoreNameOperatorsInput
  url: FilterFindManyRaceAbility_bonusesAbility_scoreUrlOperatorsInput
}

input FilterFindManyRaceAbility_bonusesAbility_scoreUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceAbility_bonusesBonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyRaceAbility_bonusesInput {
  ability_score: FilterFindManyAbilityScoreSkillsInput
  bonus: Float
}

input FilterFindManyRaceAbility_bonusesOperatorsInput {
  ability_score: FilterFindManyRaceAbility_bonusesAbility_scoreOperatorsInput
  bonus: FilterFindManyRaceAbility_bonusesBonusOperatorsInput
}

input FilterFindManyRaceAgeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceAlignmentOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceInput {
  _id: String
  ability_bonus_options: FilterFindManyRaceAbility_bonus_optionsInput
  ability_bonuses: [FilterFindManyRaceAbility_bonusesInput]
  age: String
  alignment: String
  index: String
  language_desc: String
  language_options: FilterFindManyRaceLanguage_optionsInput
  languages: [FilterFindManyAbilityScoreSkillsInput]
  name: String
  size: String
  size_description: String
  speed: Float
  starting_proficiencies: [FilterFindManyAbilityScoreSkillsInput]
  starting_proficiency_options: FilterFindManyRaceStarting_proficiency_optionsInput
  subraces: [FilterFindManyAbilityScoreSkillsInput]
  trait_options: FilterFindManyRaceTrait_optionsInput
  traits: [FilterFindManyAbilityScoreSkillsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyRaceOperatorsInput
  OR: [FilterFindManyRaceInput!]
  AND: [FilterFindManyRaceInput!]
}

input FilterFindManyRaceLanguage_descOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceLanguage_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyRaceLanguage_optionsFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceLanguage_optionsFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceLanguage_optionsFromOperatorsInput {
  index: FilterFindManyRaceLanguage_optionsFromIndexOperatorsInput
  name: FilterFindManyRaceLanguage_optionsFromNameOperatorsInput
  url: FilterFindManyRaceLanguage_optionsFromUrlOperatorsInput
}

input FilterFindManyRaceLanguage_optionsFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceLanguage_optionsInput {
  choose: Float
  from: [FilterFindManyAbilityScoreSkillsInput]
  type: String
}

input FilterFindManyRaceLanguage_optionsOperatorsInput {
  choose: FilterFindManyRaceLanguage_optionsChooseOperatorsInput
  from: FilterFindManyRaceLanguage_optionsFromOperatorsInput
  type: FilterFindManyRaceLanguage_optionsTypeOperatorsInput
}

input FilterFindManyRaceLanguage_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceLanguagesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceLanguagesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceLanguagesOperatorsInput {
  index: FilterFindManyRaceLanguagesIndexOperatorsInput
  name: FilterFindManyRaceLanguagesNameOperatorsInput
  url: FilterFindManyRaceLanguagesUrlOperatorsInput
}

input FilterFindManyRaceLanguagesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyRaceOperatorsInput {
  _id: FilterFindManyRace_idOperatorsInput
  ability_bonus_options: FilterFindManyRaceAbility_bonus_optionsOperatorsInput
  ability_bonuses: FilterFindManyRaceAbility_bonusesOperatorsInput
  age: FilterFindManyRaceAgeOperatorsInput
  alignment: FilterFindManyRaceAlignmentOperatorsInput
  index: FilterFindManyRaceIndexOperatorsInput
  language_desc: FilterFindManyRaceLanguage_descOperatorsInput
  language_options: FilterFindManyRaceLanguage_optionsOperatorsInput
  languages: FilterFindManyRaceLanguagesOperatorsInput
  name: FilterFindManyRaceNameOperatorsInput
  size: FilterFindManyRaceSizeOperatorsInput
  size_description: FilterFindManyRaceSize_descriptionOperatorsInput
  speed: FilterFindManyRaceSpeedOperatorsInput
  starting_proficiencies: FilterFindManyRaceStarting_proficienciesOperatorsInput
  starting_proficiency_options: FilterFindManyRaceStarting_proficiency_optionsOperatorsInput
  subraces: FilterFindManyRaceSubracesOperatorsInput
  trait_options: FilterFindManyRaceTrait_optionsOperatorsInput
  traits: FilterFindManyRaceTraitsOperatorsInput
  url: FilterFindManyRaceUrlOperatorsInput
}

input FilterFindManyRaceSize_descriptionOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceSizeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceSpeedOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyRaceStarting_proficienciesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceStarting_proficienciesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceStarting_proficienciesOperatorsInput {
  index: FilterFindManyRaceStarting_proficienciesIndexOperatorsInput
  name: FilterFindManyRaceStarting_proficienciesNameOperatorsInput
  url: FilterFindManyRaceStarting_proficienciesUrlOperatorsInput
}

input FilterFindManyRaceStarting_proficienciesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceStarting_proficiency_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyRaceStarting_proficiency_optionsFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceStarting_proficiency_optionsFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceStarting_proficiency_optionsFromOperatorsInput {
  index: FilterFindManyRaceStarting_proficiency_optionsFromIndexOperatorsInput
  name: FilterFindManyRaceStarting_proficiency_optionsFromNameOperatorsInput
  url: FilterFindManyRaceStarting_proficiency_optionsFromUrlOperatorsInput
}

input FilterFindManyRaceStarting_proficiency_optionsFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceStarting_proficiency_optionsInput {
  choose: Float
  from: [FilterFindManyAbilityScoreSkillsInput]
  type: String
}

input FilterFindManyRaceStarting_proficiency_optionsOperatorsInput {
  choose: FilterFindManyRaceStarting_proficiency_optionsChooseOperatorsInput
  from: FilterFindManyRaceStarting_proficiency_optionsFromOperatorsInput
  type: FilterFindManyRaceStarting_proficiency_optionsTypeOperatorsInput
}

input FilterFindManyRaceStarting_proficiency_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceSubracesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceSubracesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceSubracesOperatorsInput {
  index: FilterFindManyRaceSubracesIndexOperatorsInput
  name: FilterFindManyRaceSubracesNameOperatorsInput
  url: FilterFindManyRaceSubracesUrlOperatorsInput
}

input FilterFindManyRaceSubracesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceTrait_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyRaceTrait_optionsFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceTrait_optionsFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceTrait_optionsFromOperatorsInput {
  index: FilterFindManyRaceTrait_optionsFromIndexOperatorsInput
  name: FilterFindManyRaceTrait_optionsFromNameOperatorsInput
  url: FilterFindManyRaceTrait_optionsFromUrlOperatorsInput
}

input FilterFindManyRaceTrait_optionsFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceTrait_optionsInput {
  choose: Float
  from: [FilterFindManyAbilityScoreSkillsInput]
  type: String
}

input FilterFindManyRaceTrait_optionsOperatorsInput {
  choose: FilterFindManyRaceTrait_optionsChooseOperatorsInput
  from: FilterFindManyRaceTrait_optionsFromOperatorsInput
  type: FilterFindManyRaceTrait_optionsTypeOperatorsInput
}

input FilterFindManyRaceTrait_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceTraitsIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceTraitsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceTraitsOperatorsInput {
  index: FilterFindManyRaceTraitsIndexOperatorsInput
  name: FilterFindManyRaceTraitsNameOperatorsInput
  url: FilterFindManyRaceTraitsUrlOperatorsInput
}

input FilterFindManyRaceTraitsUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRaceUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRule_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRuleDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRuleIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRuleInput {
  _id: String
  desc: String
  index: String
  name: String
  subsections: [FilterFindManyAbilityScoreSkillsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyRuleOperatorsInput
  OR: [FilterFindManyRuleInput!]
  AND: [FilterFindManyRuleInput!]
}

input FilterFindManyRuleNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyRuleOperatorsInput {
  _id: FilterFindManyRule_idOperatorsInput
  desc: FilterFindManyRuleDescOperatorsInput
  index: FilterFindManyRuleIndexOperatorsInput
  name: FilterFindManyRuleNameOperatorsInput
  subsections: FilterFindManyRuleSubsectionsOperatorsInput
  url: FilterFindManyRuleUrlOperatorsInput
}

input FilterFindManyRuleSection_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRuleSectionDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRuleSectionIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRuleSectionInput {
  _id: String
  desc: String
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyRuleSectionOperatorsInput
  OR: [FilterFindManyRuleSectionInput!]
  AND: [FilterFindManyRuleSectionInput!]
}

input FilterFindManyRuleSectionNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyRuleSectionOperatorsInput {
  _id: FilterFindManyRuleSection_idOperatorsInput
  desc: FilterFindManyRuleSectionDescOperatorsInput
  index: FilterFindManyRuleSectionIndexOperatorsInput
  name: FilterFindManyRuleSectionNameOperatorsInput
  url: FilterFindManyRuleSectionUrlOperatorsInput
}

input FilterFindManyRuleSectionUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRuleSubsectionsIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRuleSubsectionsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRuleSubsectionsOperatorsInput {
  index: FilterFindManyRuleSubsectionsIndexOperatorsInput
  name: FilterFindManyRuleSubsectionsNameOperatorsInput
  url: FilterFindManyRuleSubsectionsUrlOperatorsInput
}

input FilterFindManyRuleSubsectionsUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyRuleUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpell_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellArea_of_effectInput {
  size: Float
  type: String
}

input FilterFindManySpellArea_of_effectOperatorsInput {
  size: FilterFindManySpellArea_of_effectSizeOperatorsInput
  type: FilterFindManySpellArea_of_effectTypeOperatorsInput
}

input FilterFindManySpellArea_of_effectSizeOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManySpellArea_of_effectTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellAttack_typeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellCasting_timeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellClassesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellClassesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellClassesOperatorsInput {
  index: FilterFindManySpellClassesIndexOperatorsInput
  name: FilterFindManySpellClassesNameOperatorsInput
  url: FilterFindManySpellClassesUrlOperatorsInput
}

input FilterFindManySpellClassesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellComponentsOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellConcentrationOperatorsInput {
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
  exists: Boolean
}

input FilterFindManySpellDamageDamage_at_character_levelOperatorsInput {
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  exists: Boolean
}

input FilterFindManySpellDamageDamage_at_slot_levelOperatorsInput {
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  exists: Boolean
}

input FilterFindManySpellDamageDamage_typeIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellDamageDamage_typeNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellDamageDamage_typeOperatorsInput {
  index: FilterFindManySpellDamageDamage_typeIndexOperatorsInput
  name: FilterFindManySpellDamageDamage_typeNameOperatorsInput
  url: FilterFindManySpellDamageDamage_typeUrlOperatorsInput
}

input FilterFindManySpellDamageDamage_typeUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellDamageInput {
  damage_at_slot_level: JSON
  damage_at_character_level: JSON
  damage_type: FilterFindManyAbilityScoreSkillsInput
}

input FilterFindManySpellDamageOperatorsInput {
  damage_at_slot_level: FilterFindManySpellDamageDamage_at_slot_levelOperatorsInput
  damage_at_character_level: FilterFindManySpellDamageDamage_at_character_levelOperatorsInput
  damage_type: FilterFindManySpellDamageDamage_typeOperatorsInput
}

input FilterFindManySpellDcDc_successOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellDcDc_typeIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellDcDc_typeNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellDcDc_typeOperatorsInput {
  index: FilterFindManySpellDcDc_typeIndexOperatorsInput
  name: FilterFindManySpellDcDc_typeNameOperatorsInput
  url: FilterFindManySpellDcDc_typeUrlOperatorsInput
}

input FilterFindManySpellDcDc_typeUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellDcDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellDcInput {
  dc_success: String
  dc_type: FilterFindManyAbilityScoreSkillsInput
  desc: String
}

input FilterFindManySpellDcOperatorsInput {
  dc_success: FilterFindManySpellDcDc_successOperatorsInput
  dc_type: FilterFindManySpellDcDc_typeOperatorsInput
  desc: FilterFindManySpellDcDescOperatorsInput
}

input FilterFindManySpellDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellDurationOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellHeal_at_slot_levelOperatorsInput {
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  exists: Boolean
}

input FilterFindManySpellHigher_levelOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellInput {
  _id: String
  area_of_effect: FilterFindManySpellArea_of_effectInput
  attack_type: String
  casting_time: String
  classes: [FilterFindManyAbilityScoreSkillsInput]
  components: [String]
  concentration: Boolean
  damage: FilterFindManySpellDamageInput
  dc: FilterFindManySpellDcInput
  desc: [String]
  duration: String
  heal_at_slot_level: JSON
  higher_level: [String]
  index: String
  level: Float
  material: String
  name: String
  range: String
  ritual: Boolean
  school: FilterFindManyAbilityScoreSkillsInput
  subclasses: [FilterFindManyAbilityScoreSkillsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManySpellOperatorsInput
  OR: [FilterFindManySpellInput!]
  AND: [FilterFindManySpellInput!]
}

input FilterFindManySpellLevelOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManySpellMaterialOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManySpellOperatorsInput {
  _id: FilterFindManySpell_idOperatorsInput
  area_of_effect: FilterFindManySpellArea_of_effectOperatorsInput
  attack_type: FilterFindManySpellAttack_typeOperatorsInput
  casting_time: FilterFindManySpellCasting_timeOperatorsInput
  classes: FilterFindManySpellClassesOperatorsInput
  components: FilterFindManySpellComponentsOperatorsInput
  concentration: FilterFindManySpellConcentrationOperatorsInput
  damage: FilterFindManySpellDamageOperatorsInput
  dc: FilterFindManySpellDcOperatorsInput
  desc: FilterFindManySpellDescOperatorsInput
  duration: FilterFindManySpellDurationOperatorsInput
  heal_at_slot_level: FilterFindManySpellHeal_at_slot_levelOperatorsInput
  higher_level: FilterFindManySpellHigher_levelOperatorsInput
  index: FilterFindManySpellIndexOperatorsInput
  level: FilterFindManySpellLevelOperatorsInput
  material: FilterFindManySpellMaterialOperatorsInput
  name: FilterFindManySpellNameOperatorsInput
  range: FilterFindManySpellRangeOperatorsInput
  ritual: FilterFindManySpellRitualOperatorsInput
  school: FilterFindManySpellSchoolOperatorsInput
  subclasses: FilterFindManySpellSubclassesOperatorsInput
  url: FilterFindManySpellUrlOperatorsInput
}

input FilterFindManySpellRangeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellRitualOperatorsInput {
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
  exists: Boolean
}

input FilterFindManySpellSchoolIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellSchoolNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellSchoolOperatorsInput {
  index: FilterFindManySpellSchoolIndexOperatorsInput
  name: FilterFindManySpellSchoolNameOperatorsInput
  url: FilterFindManySpellSchoolUrlOperatorsInput
}

input FilterFindManySpellSchoolUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellSubclassesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellSubclassesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellSubclassesOperatorsInput {
  index: FilterFindManySpellSubclassesIndexOperatorsInput
  name: FilterFindManySpellSubclassesNameOperatorsInput
  url: FilterFindManySpellSubclassesUrlOperatorsInput
}

input FilterFindManySpellSubclassesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySpellUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyStartingEquipment_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyStartingEquipmentClassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyStartingEquipmentClassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyStartingEquipmentClassOperatorsInput {
  index: FilterFindManyStartingEquipmentClassIndexOperatorsInput
  name: FilterFindManyStartingEquipmentClassNameOperatorsInput
  url: FilterFindManyStartingEquipmentClassUrlOperatorsInput
}

input FilterFindManyStartingEquipmentClassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyStartingEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyStartingEquipmentInput {
  _id: String
  class: FilterFindManyAbilityScoreSkillsInput
  index: String
  starting_equipment: [FilterFindManyStartingEquipmentStarting_equipmentInput]
  starting_equipment_options: [FilterFindManyStartingEquipmentStarting_equipment_optionsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyStartingEquipmentOperatorsInput
  OR: [FilterFindManyStartingEquipmentInput!]
  AND: [FilterFindManyStartingEquipmentInput!]
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyStartingEquipmentOperatorsInput {
  _id: FilterFindManyStartingEquipment_idOperatorsInput
  class: FilterFindManyStartingEquipmentClassOperatorsInput
  index: FilterFindManyStartingEquipmentIndexOperatorsInput
  starting_equipment: FilterFindManyStartingEquipmentStarting_equipmentOperatorsInput
  starting_equipment_options: FilterFindManyStartingEquipmentStarting_equipment_optionsOperatorsInput
  url: FilterFindManyStartingEquipmentUrlOperatorsInput
}

input FilterFindManyStartingEquipmentStarting_equipment_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyStartingEquipmentStarting_equipment_optionsFromEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyStartingEquipmentStarting_equipment_optionsFromEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyStartingEquipmentStarting_equipment_optionsFromEquipmentOperatorsInput {
  index: FilterFindManyStartingEquipmentStarting_equipment_optionsFromEquipmentIndexOperatorsInput
  name: FilterFindManyStartingEquipmentStarting_equipment_optionsFromEquipmentNameOperatorsInput
  url: FilterFindManyStartingEquipmentStarting_equipment_optionsFromEquipmentUrlOperatorsInput
}

input FilterFindManyStartingEquipmentStarting_equipment_optionsFromEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyStartingEquipmentStarting_equipment_optionsFromInput {
  equipment: FilterFindManyAbilityScoreSkillsInput
  quantity: Float
}

input FilterFindManyStartingEquipmentStarting_equipment_optionsFromOperatorsInput {
  equipment: FilterFindManyStartingEquipmentStarting_equipment_optionsFromEquipmentOperatorsInput
  quantity: FilterFindManyStartingEquipmentStarting_equipment_optionsFromQuantityOperatorsInput
}

input FilterFindManyStartingEquipmentStarting_equipment_optionsFromQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyStartingEquipmentStarting_equipment_optionsInput {
  choose: Float
  from: [FilterFindManyStartingEquipmentStarting_equipment_optionsFromInput]
  type: String
}

input FilterFindManyStartingEquipmentStarting_equipment_optionsOperatorsInput {
  choose: FilterFindManyStartingEquipmentStarting_equipment_optionsChooseOperatorsInput
  from: FilterFindManyStartingEquipmentStarting_equipment_optionsFromOperatorsInput
  type: FilterFindManyStartingEquipmentStarting_equipment_optionsTypeOperatorsInput
}

input FilterFindManyStartingEquipmentStarting_equipment_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyStartingEquipmentStarting_equipmentEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyStartingEquipmentStarting_equipmentEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyStartingEquipmentStarting_equipmentEquipmentOperatorsInput {
  index: FilterFindManyStartingEquipmentStarting_equipmentEquipmentIndexOperatorsInput
  name: FilterFindManyStartingEquipmentStarting_equipmentEquipmentNameOperatorsInput
  url: FilterFindManyStartingEquipmentStarting_equipmentEquipmentUrlOperatorsInput
}

input FilterFindManyStartingEquipmentStarting_equipmentEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyStartingEquipmentStarting_equipmentInput {
  equipment: FilterFindManyAbilityScoreSkillsInput
  quantity: Float
}

input FilterFindManyStartingEquipmentStarting_equipmentOperatorsInput {
  equipment: FilterFindManyStartingEquipmentStarting_equipmentEquipmentOperatorsInput
  quantity: FilterFindManyStartingEquipmentStarting_equipmentQuantityOperatorsInput
}

input FilterFindManyStartingEquipmentStarting_equipmentQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyStartingEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclass_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassClassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassClassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassClassOperatorsInput {
  index: FilterFindManySubclassClassIndexOperatorsInput
  name: FilterFindManySubclassClassNameOperatorsInput
  url: FilterFindManySubclassClassUrlOperatorsInput
}

input FilterFindManySubclassClassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassInput {
  _id: String
  class: FilterFindManyAbilityScoreSkillsInput
  desc: [String]
  index: String
  name: String
  spells: [FilterFindManySubclassSpellsInput]
  subclass_flavor: String
  subclass_levels: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManySubclassOperatorsInput
  OR: [FilterFindManySubclassInput!]
  AND: [FilterFindManySubclassInput!]
}

input FilterFindManySubclassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManySubclassOperatorsInput {
  _id: FilterFindManySubclass_idOperatorsInput
  class: FilterFindManySubclassClassOperatorsInput
  desc: FilterFindManySubclassDescOperatorsInput
  index: FilterFindManySubclassIndexOperatorsInput
  name: FilterFindManySubclassNameOperatorsInput
  spells: FilterFindManySubclassSpellsOperatorsInput
  subclass_flavor: FilterFindManySubclassSubclass_flavorOperatorsInput
  subclass_levels: FilterFindManySubclassSubclass_levelsOperatorsInput
  url: FilterFindManySubclassUrlOperatorsInput
}

input FilterFindManySubclassSpellsInput {
  prerequisites: [FilterFindManySubclassSpellsPrerequisitesInput]
  spell: FilterFindManyAbilityScoreSkillsInput
}

input FilterFindManySubclassSpellsOperatorsInput {
  prerequisites: FilterFindManySubclassSpellsPrerequisitesOperatorsInput
  spell: FilterFindManySubclassSpellsSpellOperatorsInput
}

input FilterFindManySubclassSpellsPrerequisitesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassSpellsPrerequisitesInput {
  index: String
  name: String
  type: String
  url: String
}

input FilterFindManySubclassSpellsPrerequisitesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassSpellsPrerequisitesOperatorsInput {
  index: FilterFindManySubclassSpellsPrerequisitesIndexOperatorsInput
  name: FilterFindManySubclassSpellsPrerequisitesNameOperatorsInput
  type: FilterFindManySubclassSpellsPrerequisitesTypeOperatorsInput
  url: FilterFindManySubclassSpellsPrerequisitesUrlOperatorsInput
}

input FilterFindManySubclassSpellsPrerequisitesTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassSpellsPrerequisitesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassSpellsSpellIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassSpellsSpellNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassSpellsSpellOperatorsInput {
  index: FilterFindManySubclassSpellsSpellIndexOperatorsInput
  name: FilterFindManySubclassSpellsSpellNameOperatorsInput
  url: FilterFindManySubclassSpellsSpellUrlOperatorsInput
}

input FilterFindManySubclassSpellsSpellUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassSubclass_flavorOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassSubclass_levelsOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubclassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubrace_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceAbility_bonusesAbility_scoreIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceAbility_bonusesAbility_scoreNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceAbility_bonusesAbility_scoreOperatorsInput {
  index: FilterFindManySubraceAbility_bonusesAbility_scoreIndexOperatorsInput
  name: FilterFindManySubraceAbility_bonusesAbility_scoreNameOperatorsInput
  url: FilterFindManySubraceAbility_bonusesAbility_scoreUrlOperatorsInput
}

input FilterFindManySubraceAbility_bonusesAbility_scoreUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceAbility_bonusesBonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManySubraceAbility_bonusesInput {
  ability_score: FilterFindManyAbilityScoreSkillsInput
  bonus: Float
}

input FilterFindManySubraceAbility_bonusesOperatorsInput {
  ability_score: FilterFindManySubraceAbility_bonusesAbility_scoreOperatorsInput
  bonus: FilterFindManySubraceAbility_bonusesBonusOperatorsInput
}

input FilterFindManySubraceDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceInput {
  _id: String
  ability_bonuses: [FilterFindManySubraceAbility_bonusesInput]
  desc: String
  index: String
  language_options: FilterFindManySubraceLanguage_optionsInput
  name: String
  race: FilterFindManyAbilityScoreSkillsInput
  racial_trait_options: FilterFindManySubraceRacial_trait_optionsInput
  racial_traits: [FilterFindManyAbilityScoreSkillsInput]
  starting_proficiencies: [FilterFindManyAbilityScoreSkillsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManySubraceOperatorsInput
  OR: [FilterFindManySubraceInput!]
  AND: [FilterFindManySubraceInput!]
}

input FilterFindManySubraceLanguage_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManySubraceLanguage_optionsFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceLanguage_optionsFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceLanguage_optionsFromOperatorsInput {
  index: FilterFindManySubraceLanguage_optionsFromIndexOperatorsInput
  name: FilterFindManySubraceLanguage_optionsFromNameOperatorsInput
  url: FilterFindManySubraceLanguage_optionsFromUrlOperatorsInput
}

input FilterFindManySubraceLanguage_optionsFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceLanguage_optionsInput {
  choose: Float
  from: [FilterFindManyAbilityScoreSkillsInput]
  type: String
}

input FilterFindManySubraceLanguage_optionsOperatorsInput {
  choose: FilterFindManySubraceLanguage_optionsChooseOperatorsInput
  from: FilterFindManySubraceLanguage_optionsFromOperatorsInput
  type: FilterFindManySubraceLanguage_optionsTypeOperatorsInput
}

input FilterFindManySubraceLanguage_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManySubraceOperatorsInput {
  _id: FilterFindManySubrace_idOperatorsInput
  ability_bonuses: FilterFindManySubraceAbility_bonusesOperatorsInput
  desc: FilterFindManySubraceDescOperatorsInput
  index: FilterFindManySubraceIndexOperatorsInput
  language_options: FilterFindManySubraceLanguage_optionsOperatorsInput
  name: FilterFindManySubraceNameOperatorsInput
  race: FilterFindManySubraceRaceOperatorsInput
  racial_trait_options: FilterFindManySubraceRacial_trait_optionsOperatorsInput
  racial_traits: FilterFindManySubraceRacial_traitsOperatorsInput
  starting_proficiencies: FilterFindManySubraceStarting_proficienciesOperatorsInput
  url: FilterFindManySubraceUrlOperatorsInput
}

input FilterFindManySubraceRaceIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceRaceNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceRaceOperatorsInput {
  index: FilterFindManySubraceRaceIndexOperatorsInput
  name: FilterFindManySubraceRaceNameOperatorsInput
  url: FilterFindManySubraceRaceUrlOperatorsInput
}

input FilterFindManySubraceRaceUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceRacial_trait_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManySubraceRacial_trait_optionsFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceRacial_trait_optionsFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceRacial_trait_optionsFromOperatorsInput {
  index: FilterFindManySubraceRacial_trait_optionsFromIndexOperatorsInput
  name: FilterFindManySubraceRacial_trait_optionsFromNameOperatorsInput
  url: FilterFindManySubraceRacial_trait_optionsFromUrlOperatorsInput
}

input FilterFindManySubraceRacial_trait_optionsFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceRacial_trait_optionsInput {
  choose: Float
  from: [FilterFindManyAbilityScoreSkillsInput]
  type: String
}

input FilterFindManySubraceRacial_trait_optionsOperatorsInput {
  choose: FilterFindManySubraceRacial_trait_optionsChooseOperatorsInput
  from: FilterFindManySubraceRacial_trait_optionsFromOperatorsInput
  type: FilterFindManySubraceRacial_trait_optionsTypeOperatorsInput
}

input FilterFindManySubraceRacial_trait_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceRacial_traitsIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceRacial_traitsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceRacial_traitsOperatorsInput {
  index: FilterFindManySubraceRacial_traitsIndexOperatorsInput
  name: FilterFindManySubraceRacial_traitsNameOperatorsInput
  url: FilterFindManySubraceRacial_traitsUrlOperatorsInput
}

input FilterFindManySubraceRacial_traitsUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceStarting_proficienciesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceStarting_proficienciesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceStarting_proficienciesOperatorsInput {
  index: FilterFindManySubraceStarting_proficienciesIndexOperatorsInput
  name: FilterFindManySubraceStarting_proficienciesNameOperatorsInput
  url: FilterFindManySubraceStarting_proficienciesUrlOperatorsInput
}

input FilterFindManySubraceStarting_proficienciesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManySubraceUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTrait_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitInput {
  _id: String
  desc: [String]
  index: String
  name: String
  proficiencies: [FilterFindManyTraitProficienciesInput]
  proficiency_choices: FilterFindManyTraitProficiency_choicesInput
  races: [FilterFindManyAbilityScoreSkillsInput]
  subraces: [FilterFindManyAbilityScoreSkillsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyTraitOperatorsInput
  OR: [FilterFindManyTraitInput!]
  AND: [FilterFindManyTraitInput!]
}

input FilterFindManyTraitNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyTraitOperatorsInput {
  _id: FilterFindManyTrait_idOperatorsInput
  desc: FilterFindManyTraitDescOperatorsInput
  index: FilterFindManyTraitIndexOperatorsInput
  name: FilterFindManyTraitNameOperatorsInput
  proficiencies: FilterFindManyTraitProficienciesOperatorsInput
  proficiency_choices: FilterFindManyTraitProficiency_choicesOperatorsInput
  races: FilterFindManyTraitRacesOperatorsInput
  subraces: FilterFindManyTraitSubracesOperatorsInput
  url: FilterFindManyTraitUrlOperatorsInput
}

input FilterFindManyTraitProficienciesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitProficienciesInput {
  index: String
  name: String
  url: String
}

input FilterFindManyTraitProficienciesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitProficienciesOperatorsInput {
  index: FilterFindManyTraitProficienciesIndexOperatorsInput
  name: FilterFindManyTraitProficienciesNameOperatorsInput
  url: FilterFindManyTraitProficienciesUrlOperatorsInput
}

input FilterFindManyTraitProficienciesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitProficiency_choicesChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyTraitProficiency_choicesFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitProficiency_choicesFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitProficiency_choicesFromOperatorsInput {
  index: FilterFindManyTraitProficiency_choicesFromIndexOperatorsInput
  name: FilterFindManyTraitProficiency_choicesFromNameOperatorsInput
  url: FilterFindManyTraitProficiency_choicesFromUrlOperatorsInput
}

input FilterFindManyTraitProficiency_choicesFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitProficiency_choicesInput {
  choose: Float
  from: [FilterFindManyAbilityScoreSkillsInput]
  type: String
}

input FilterFindManyTraitProficiency_choicesOperatorsInput {
  choose: FilterFindManyTraitProficiency_choicesChooseOperatorsInput
  from: FilterFindManyTraitProficiency_choicesFromOperatorsInput
  type: FilterFindManyTraitProficiency_choicesTypeOperatorsInput
}

input FilterFindManyTraitProficiency_choicesTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitRacesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitRacesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitRacesOperatorsInput {
  index: FilterFindManyTraitRacesIndexOperatorsInput
  name: FilterFindManyTraitRacesNameOperatorsInput
  url: FilterFindManyTraitRacesUrlOperatorsInput
}

input FilterFindManyTraitRacesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitSubracesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitSubracesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitSubracesOperatorsInput {
  index: FilterFindManyTraitSubracesIndexOperatorsInput
  name: FilterFindManyTraitSubracesNameOperatorsInput
  url: FilterFindManyTraitSubracesUrlOperatorsInput
}

input FilterFindManyTraitSubracesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyTraitUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyWeaponProperty_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyWeaponPropertyDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyWeaponPropertyIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindManyWeaponPropertyInput {
  _id: String
  desc: [String]
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyWeaponPropertyOperatorsInput
  OR: [FilterFindManyWeaponPropertyInput!]
  AND: [FilterFindManyWeaponPropertyInput!]
}

input FilterFindManyWeaponPropertyNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyWeaponPropertyOperatorsInput {
  _id: FilterFindManyWeaponProperty_idOperatorsInput
  desc: FilterFindManyWeaponPropertyDescOperatorsInput
  index: FilterFindManyWeaponPropertyIndexOperatorsInput
  name: FilterFindManyWeaponPropertyNameOperatorsInput
  url: FilterFindManyWeaponPropertyUrlOperatorsInput
}

input FilterFindManyWeaponPropertyUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneAbilityScore_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneAbilityScoreDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneAbilityScoreFull_nameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneAbilityScoreIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneAbilityScoreInput {
  _id: String
  desc: [String]
  full_name: String
  index: String
  name: String
  skills: [FilterFindOneAbilityScoreSkillsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneAbilityScoreOperatorsInput
  OR: [FilterFindOneAbilityScoreInput!]
  AND: [FilterFindOneAbilityScoreInput!]
}

input FilterFindOneAbilityScoreNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneAbilityScoreOperatorsInput {
  _id: FilterFindOneAbilityScore_idOperatorsInput
  desc: FilterFindOneAbilityScoreDescOperatorsInput
  full_name: FilterFindOneAbilityScoreFull_nameOperatorsInput
  index: FilterFindOneAbilityScoreIndexOperatorsInput
  name: FilterFindOneAbilityScoreNameOperatorsInput
  skills: FilterFindOneAbilityScoreSkillsOperatorsInput
  url: FilterFindOneAbilityScoreUrlOperatorsInput
}

input FilterFindOneAbilityScoreSkillsIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneAbilityScoreSkillsInput {
  index: String
  name: String
  url: String
}

input FilterFindOneAbilityScoreSkillsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneAbilityScoreSkillsOperatorsInput {
  index: FilterFindOneAbilityScoreSkillsIndexOperatorsInput
  name: FilterFindOneAbilityScoreSkillsNameOperatorsInput
  url: FilterFindOneAbilityScoreSkillsUrlOperatorsInput
}

input FilterFindOneAbilityScoreSkillsUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneAbilityScoreUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneAlignment_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneAlignmentAbbreviationOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneAlignmentDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneAlignmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneAlignmentInput {
  _id: String
  desc: String
  abbreviation: String
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneAlignmentOperatorsInput
  OR: [FilterFindOneAlignmentInput!]
  AND: [FilterFindOneAlignmentInput!]
}

input FilterFindOneAlignmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneAlignmentOperatorsInput {
  _id: FilterFindOneAlignment_idOperatorsInput
  desc: FilterFindOneAlignmentDescOperatorsInput
  abbreviation: FilterFindOneAlignmentAbbreviationOperatorsInput
  index: FilterFindOneAlignmentIndexOperatorsInput
  name: FilterFindOneAlignmentNameOperatorsInput
  url: FilterFindOneAlignmentUrlOperatorsInput
}

input FilterFindOneAlignmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackground_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundBondsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneBackgroundBondsFromOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundBondsOperatorsInput {
  choose: FilterFindOneBackgroundBondsChooseOperatorsInput
  from: FilterFindOneBackgroundBondsFromOperatorsInput
  type: FilterFindOneBackgroundBondsTypeOperatorsInput
}

input FilterFindOneBackgroundBondsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundFeatureDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundFeatureInput {
  name: String
  desc: [String]
}

input FilterFindOneBackgroundFeatureNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundFeatureOperatorsInput {
  name: FilterFindOneBackgroundFeatureNameOperatorsInput
  desc: FilterFindOneBackgroundFeatureDescOperatorsInput
}

input FilterFindOneBackgroundFlawsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneBackgroundFlawsFromOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundFlawsOperatorsInput {
  choose: FilterFindOneBackgroundFlawsChooseOperatorsInput
  from: FilterFindOneBackgroundFlawsFromOperatorsInput
  type: FilterFindOneBackgroundFlawsTypeOperatorsInput
}

input FilterFindOneBackgroundFlawsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundIdealsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneBackgroundIdealsFromAlignmentsIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundIdealsFromAlignmentsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundIdealsFromAlignmentsOperatorsInput {
  index: FilterFindOneBackgroundIdealsFromAlignmentsIndexOperatorsInput
  name: FilterFindOneBackgroundIdealsFromAlignmentsNameOperatorsInput
  url: FilterFindOneBackgroundIdealsFromAlignmentsUrlOperatorsInput
}

input FilterFindOneBackgroundIdealsFromAlignmentsUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundIdealsFromDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundIdealsFromInput {
  desc: String
  alignments: [FilterFindOneAbilityScoreSkillsInput]
}

input FilterFindOneBackgroundIdealsFromOperatorsInput {
  desc: FilterFindOneBackgroundIdealsFromDescOperatorsInput
  alignments: FilterFindOneBackgroundIdealsFromAlignmentsOperatorsInput
}

input FilterFindOneBackgroundIdealsInput {
  choose: Float
  from: [FilterFindOneBackgroundIdealsFromInput]
  type: String
}

input FilterFindOneBackgroundIdealsOperatorsInput {
  choose: FilterFindOneBackgroundIdealsChooseOperatorsInput
  from: FilterFindOneBackgroundIdealsFromOperatorsInput
  type: FilterFindOneBackgroundIdealsTypeOperatorsInput
}

input FilterFindOneBackgroundIdealsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundInput {
  _id: String
  index: String
  name: String
  starting_proficiencies: [FilterFindOneAbilityScoreSkillsInput]
  language_options: FilterFindOneBackgroundLanguage_optionsInput
  url: String
  starting_equipment: [FilterFindOneBackgroundStarting_equipmentInput]
  starting_equipment_options: [FilterFindOneBackgroundStarting_equipment_optionsInput]
  feature: FilterFindOneBackgroundFeatureInput
  personality_traits: FilterFindOneBackgroundPersonality_traitsInput
  ideals: FilterFindOneBackgroundIdealsInput
  bonds: FilterFindOneBackgroundPersonality_traitsInput
  flaws: FilterFindOneBackgroundPersonality_traitsInput

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneBackgroundOperatorsInput
  OR: [FilterFindOneBackgroundInput!]
  AND: [FilterFindOneBackgroundInput!]
}

input FilterFindOneBackgroundLanguage_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneBackgroundLanguage_optionsFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundLanguage_optionsFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundLanguage_optionsFromOperatorsInput {
  index: FilterFindOneBackgroundLanguage_optionsFromIndexOperatorsInput
  name: FilterFindOneBackgroundLanguage_optionsFromNameOperatorsInput
  url: FilterFindOneBackgroundLanguage_optionsFromUrlOperatorsInput
}

input FilterFindOneBackgroundLanguage_optionsFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundLanguage_optionsInput {
  choose: Float
  from: [FilterFindOneAbilityScoreSkillsInput]
  type: String
}

input FilterFindOneBackgroundLanguage_optionsOperatorsInput {
  choose: FilterFindOneBackgroundLanguage_optionsChooseOperatorsInput
  from: FilterFindOneBackgroundLanguage_optionsFromOperatorsInput
  type: FilterFindOneBackgroundLanguage_optionsTypeOperatorsInput
}

input FilterFindOneBackgroundLanguage_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneBackgroundOperatorsInput {
  _id: FilterFindOneBackground_idOperatorsInput
  index: FilterFindOneBackgroundIndexOperatorsInput
  name: FilterFindOneBackgroundNameOperatorsInput
  starting_proficiencies: FilterFindOneBackgroundStarting_proficienciesOperatorsInput
  language_options: FilterFindOneBackgroundLanguage_optionsOperatorsInput
  url: FilterFindOneBackgroundUrlOperatorsInput
  starting_equipment: FilterFindOneBackgroundStarting_equipmentOperatorsInput
  starting_equipment_options: FilterFindOneBackgroundStarting_equipment_optionsOperatorsInput
  feature: FilterFindOneBackgroundFeatureOperatorsInput
  personality_traits: FilterFindOneBackgroundPersonality_traitsOperatorsInput
  ideals: FilterFindOneBackgroundIdealsOperatorsInput
  bonds: FilterFindOneBackgroundBondsOperatorsInput
  flaws: FilterFindOneBackgroundFlawsOperatorsInput
}

input FilterFindOneBackgroundPersonality_traitsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneBackgroundPersonality_traitsFromOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundPersonality_traitsInput {
  choose: Float
  from: [String]
  type: String
}

input FilterFindOneBackgroundPersonality_traitsOperatorsInput {
  choose: FilterFindOneBackgroundPersonality_traitsChooseOperatorsInput
  from: FilterFindOneBackgroundPersonality_traitsFromOperatorsInput
  type: FilterFindOneBackgroundPersonality_traitsTypeOperatorsInput
}

input FilterFindOneBackgroundPersonality_traitsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundStarting_equipment_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneBackgroundStarting_equipment_optionsFromEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundStarting_equipment_optionsFromEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundStarting_equipment_optionsFromEquipmentOperatorsInput {
  index: FilterFindOneBackgroundStarting_equipment_optionsFromEquipmentIndexOperatorsInput
  name: FilterFindOneBackgroundStarting_equipment_optionsFromEquipmentNameOperatorsInput
  url: FilterFindOneBackgroundStarting_equipment_optionsFromEquipmentUrlOperatorsInput
}

input FilterFindOneBackgroundStarting_equipment_optionsFromEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundStarting_equipment_optionsFromInput {
  equipment: FilterFindOneAbilityScoreSkillsInput
  quantity: Float
}

input FilterFindOneBackgroundStarting_equipment_optionsFromOperatorsInput {
  equipment: FilterFindOneBackgroundStarting_equipment_optionsFromEquipmentOperatorsInput
  quantity: FilterFindOneBackgroundStarting_equipment_optionsFromQuantityOperatorsInput
}

input FilterFindOneBackgroundStarting_equipment_optionsFromQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneBackgroundStarting_equipment_optionsInput {
  choose: Float
  from: [FilterFindOneBackgroundStarting_equipment_optionsFromInput]
  type: String
}

input FilterFindOneBackgroundStarting_equipment_optionsOperatorsInput {
  choose: FilterFindOneBackgroundStarting_equipment_optionsChooseOperatorsInput
  from: FilterFindOneBackgroundStarting_equipment_optionsFromOperatorsInput
  type: FilterFindOneBackgroundStarting_equipment_optionsTypeOperatorsInput
}

input FilterFindOneBackgroundStarting_equipment_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundStarting_equipmentEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundStarting_equipmentEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundStarting_equipmentEquipmentOperatorsInput {
  index: FilterFindOneBackgroundStarting_equipmentEquipmentIndexOperatorsInput
  name: FilterFindOneBackgroundStarting_equipmentEquipmentNameOperatorsInput
  url: FilterFindOneBackgroundStarting_equipmentEquipmentUrlOperatorsInput
}

input FilterFindOneBackgroundStarting_equipmentEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundStarting_equipmentInput {
  equipment: FilterFindOneAbilityScoreSkillsInput
  quantity: Float
}

input FilterFindOneBackgroundStarting_equipmentOperatorsInput {
  equipment: FilterFindOneBackgroundStarting_equipmentEquipmentOperatorsInput
  quantity: FilterFindOneBackgroundStarting_equipmentQuantityOperatorsInput
}

input FilterFindOneBackgroundStarting_equipmentQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneBackgroundStarting_proficienciesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundStarting_proficienciesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundStarting_proficienciesOperatorsInput {
  index: FilterFindOneBackgroundStarting_proficienciesIndexOperatorsInput
  name: FilterFindOneBackgroundStarting_proficienciesNameOperatorsInput
  url: FilterFindOneBackgroundStarting_proficienciesUrlOperatorsInput
}

input FilterFindOneBackgroundStarting_proficienciesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneBackgroundUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClass_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassClass_levelsOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassHit_dieOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneClassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassInput {
  _id: String
  class_levels: String
  hit_die: Float
  index: String
  name: String
  proficiencies: [FilterFindOneAbilityScoreSkillsInput]
  proficiency_choices: [FilterFindOneClassProficiency_choicesInput]
  saving_throws: [FilterFindOneAbilityScoreSkillsInput]
  spellcasting: FilterFindOneClassSpellcastingInput
  spells: String
  starting_equipment: [FilterFindOneClassStarting_equipmentInput]
  starting_equipment_options: [FilterFindOneClassStarting_equipment_optionsInput]
  subclasses: [FilterFindOneAbilityScoreSkillsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneClassOperatorsInput
  OR: [FilterFindOneClassInput!]
  AND: [FilterFindOneClassInput!]
}

input FilterFindOneClassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneClassOperatorsInput {
  _id: FilterFindOneClass_idOperatorsInput
  class_levels: FilterFindOneClassClass_levelsOperatorsInput
  hit_die: FilterFindOneClassHit_dieOperatorsInput
  index: FilterFindOneClassIndexOperatorsInput
  name: FilterFindOneClassNameOperatorsInput
  proficiencies: FilterFindOneClassProficienciesOperatorsInput
  proficiency_choices: FilterFindOneClassProficiency_choicesOperatorsInput
  saving_throws: FilterFindOneClassSaving_throwsOperatorsInput
  spellcasting: FilterFindOneClassSpellcastingOperatorsInput
  spells: FilterFindOneClassSpellsOperatorsInput
  starting_equipment: FilterFindOneClassStarting_equipmentOperatorsInput
  starting_equipment_options: FilterFindOneClassStarting_equipment_optionsOperatorsInput
  subclasses: FilterFindOneClassSubclassesOperatorsInput
  url: FilterFindOneClassUrlOperatorsInput
}

input FilterFindOneClassProficienciesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassProficienciesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassProficienciesOperatorsInput {
  index: FilterFindOneClassProficienciesIndexOperatorsInput
  name: FilterFindOneClassProficienciesNameOperatorsInput
  url: FilterFindOneClassProficienciesUrlOperatorsInput
}

input FilterFindOneClassProficienciesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassProficiency_choicesChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneClassProficiency_choicesFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassProficiency_choicesFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassProficiency_choicesFromOperatorsInput {
  index: FilterFindOneClassProficiency_choicesFromIndexOperatorsInput
  name: FilterFindOneClassProficiency_choicesFromNameOperatorsInput
  url: FilterFindOneClassProficiency_choicesFromUrlOperatorsInput
}

input FilterFindOneClassProficiency_choicesFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassProficiency_choicesInput {
  choose: Float
  from: [FilterFindOneAbilityScoreSkillsInput]
  type: String
}

input FilterFindOneClassProficiency_choicesOperatorsInput {
  choose: FilterFindOneClassProficiency_choicesChooseOperatorsInput
  from: FilterFindOneClassProficiency_choicesFromOperatorsInput
  type: FilterFindOneClassProficiency_choicesTypeOperatorsInput
}

input FilterFindOneClassProficiency_choicesTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassSaving_throwsIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassSaving_throwsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassSaving_throwsOperatorsInput {
  index: FilterFindOneClassSaving_throwsIndexOperatorsInput
  name: FilterFindOneClassSaving_throwsNameOperatorsInput
  url: FilterFindOneClassSaving_throwsUrlOperatorsInput
}

input FilterFindOneClassSaving_throwsUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassSpellcastingInfoDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassSpellcastingInfoInput {
  desc: [String]
  name: String
}

input FilterFindOneClassSpellcastingInfoNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassSpellcastingInfoOperatorsInput {
  desc: FilterFindOneClassSpellcastingInfoDescOperatorsInput
  name: FilterFindOneClassSpellcastingInfoNameOperatorsInput
}

input FilterFindOneClassSpellcastingInput {
  info: [FilterFindOneClassSpellcastingInfoInput]
  level: Float
  spellcasting_ability: FilterFindOneAbilityScoreSkillsInput
}

input FilterFindOneClassSpellcastingLevelOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneClassSpellcastingOperatorsInput {
  info: FilterFindOneClassSpellcastingInfoOperatorsInput
  level: FilterFindOneClassSpellcastingLevelOperatorsInput
  spellcasting_ability: FilterFindOneClassSpellcastingSpellcasting_abilityOperatorsInput
}

input FilterFindOneClassSpellcastingSpellcasting_abilityIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassSpellcastingSpellcasting_abilityNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassSpellcastingSpellcasting_abilityOperatorsInput {
  index: FilterFindOneClassSpellcastingSpellcasting_abilityIndexOperatorsInput
  name: FilterFindOneClassSpellcastingSpellcasting_abilityNameOperatorsInput
  url: FilterFindOneClassSpellcastingSpellcasting_abilityUrlOperatorsInput
}

input FilterFindOneClassSpellcastingSpellcasting_abilityUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassSpellsOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassStarting_equipment_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneClassStarting_equipment_optionsFromEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassStarting_equipment_optionsFromEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassStarting_equipment_optionsFromEquipmentOperatorsInput {
  index: FilterFindOneClassStarting_equipment_optionsFromEquipmentIndexOperatorsInput
  name: FilterFindOneClassStarting_equipment_optionsFromEquipmentNameOperatorsInput
  url: FilterFindOneClassStarting_equipment_optionsFromEquipmentUrlOperatorsInput
}

input FilterFindOneClassStarting_equipment_optionsFromEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassStarting_equipment_optionsFromInput {
  equipment: FilterFindOneAbilityScoreSkillsInput
  quantity: Float
}

input FilterFindOneClassStarting_equipment_optionsFromOperatorsInput {
  equipment: FilterFindOneClassStarting_equipment_optionsFromEquipmentOperatorsInput
  quantity: FilterFindOneClassStarting_equipment_optionsFromQuantityOperatorsInput
}

input FilterFindOneClassStarting_equipment_optionsFromQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneClassStarting_equipment_optionsInput {
  choose: Float
  from: [FilterFindOneClassStarting_equipment_optionsFromInput]
  type: String
}

input FilterFindOneClassStarting_equipment_optionsOperatorsInput {
  choose: FilterFindOneClassStarting_equipment_optionsChooseOperatorsInput
  from: FilterFindOneClassStarting_equipment_optionsFromOperatorsInput
  type: FilterFindOneClassStarting_equipment_optionsTypeOperatorsInput
}

input FilterFindOneClassStarting_equipment_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassStarting_equipmentEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassStarting_equipmentEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassStarting_equipmentEquipmentOperatorsInput {
  index: FilterFindOneClassStarting_equipmentEquipmentIndexOperatorsInput
  name: FilterFindOneClassStarting_equipmentEquipmentNameOperatorsInput
  url: FilterFindOneClassStarting_equipmentEquipmentUrlOperatorsInput
}

input FilterFindOneClassStarting_equipmentEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassStarting_equipmentInput {
  equipment: FilterFindOneAbilityScoreSkillsInput
  quantity: Float
}

input FilterFindOneClassStarting_equipmentOperatorsInput {
  equipment: FilterFindOneClassStarting_equipmentEquipmentOperatorsInput
  quantity: FilterFindOneClassStarting_equipmentQuantityOperatorsInput
}

input FilterFindOneClassStarting_equipmentQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneClassSubclassesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassSubclassesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassSubclassesOperatorsInput {
  index: FilterFindOneClassSubclassesIndexOperatorsInput
  name: FilterFindOneClassSubclassesNameOperatorsInput
  url: FilterFindOneClassSubclassesUrlOperatorsInput
}

input FilterFindOneClassSubclassesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneClassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneCondition_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneConditionDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneConditionIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneConditionInput {
  _id: String
  desc: [String]
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneConditionOperatorsInput
  OR: [FilterFindOneConditionInput!]
  AND: [FilterFindOneConditionInput!]
}

input FilterFindOneConditionNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneConditionOperatorsInput {
  _id: FilterFindOneCondition_idOperatorsInput
  desc: FilterFindOneConditionDescOperatorsInput
  index: FilterFindOneConditionIndexOperatorsInput
  name: FilterFindOneConditionNameOperatorsInput
  url: FilterFindOneConditionUrlOperatorsInput
}

input FilterFindOneConditionUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneDamageType_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneDamageTypeDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneDamageTypeIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneDamageTypeInput {
  _id: String
  desc: [String]
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneDamageTypeOperatorsInput
  OR: [FilterFindOneDamageTypeInput!]
  AND: [FilterFindOneDamageTypeInput!]
}

input FilterFindOneDamageTypeNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneDamageTypeOperatorsInput {
  _id: FilterFindOneDamageType_idOperatorsInput
  desc: FilterFindOneDamageTypeDescOperatorsInput
  index: FilterFindOneDamageTypeIndexOperatorsInput
  name: FilterFindOneDamageTypeNameOperatorsInput
  url: FilterFindOneDamageTypeUrlOperatorsInput
}

input FilterFindOneDamageTypeUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipment_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentArmor_categoryOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentArmor_classBaseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneEquipmentArmor_classDex_bonusOperatorsInput {
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
  exists: Boolean
}

input FilterFindOneEquipmentArmor_classInput {
  base: Float
  dex_bonus: Boolean
  max_bonus: Float
}

input FilterFindOneEquipmentArmor_classMax_bonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneEquipmentArmor_classOperatorsInput {
  base: FilterFindOneEquipmentArmor_classBaseOperatorsInput
  dex_bonus: FilterFindOneEquipmentArmor_classDex_bonusOperatorsInput
  max_bonus: FilterFindOneEquipmentArmor_classMax_bonusOperatorsInput
}

input FilterFindOneEquipmentCapacityOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentCategory_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentCategory_rangeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentCategoryEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentCategoryEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentCategoryEquipmentOperatorsInput {
  index: FilterFindOneEquipmentCategoryEquipmentIndexOperatorsInput
  name: FilterFindOneEquipmentCategoryEquipmentNameOperatorsInput
  url: FilterFindOneEquipmentCategoryEquipmentUrlOperatorsInput
}

input FilterFindOneEquipmentCategoryEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentCategoryIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentCategoryInput {
  _id: String
  equipment: [FilterFindOneAbilityScoreSkillsInput]
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneEquipmentCategoryOperatorsInput
  OR: [FilterFindOneEquipmentCategoryInput!]
  AND: [FilterFindOneEquipmentCategoryInput!]
}

input FilterFindOneEquipmentCategoryNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneEquipmentCategoryOperatorsInput {
  _id: FilterFindOneEquipmentCategory_idOperatorsInput
  equipment: FilterFindOneEquipmentCategoryEquipmentOperatorsInput
  index: FilterFindOneEquipmentCategoryIndexOperatorsInput
  name: FilterFindOneEquipmentCategoryNameOperatorsInput
  url: FilterFindOneEquipmentCategoryUrlOperatorsInput
}

input FilterFindOneEquipmentCategoryUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentContentsInput {
  item: FilterFindOneAbilityScoreSkillsInput
  quantity: Float
}

input FilterFindOneEquipmentContentsItemIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentContentsItemNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentContentsItemOperatorsInput {
  index: FilterFindOneEquipmentContentsItemIndexOperatorsInput
  name: FilterFindOneEquipmentContentsItemNameOperatorsInput
  url: FilterFindOneEquipmentContentsItemUrlOperatorsInput
}

input FilterFindOneEquipmentContentsItemUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentContentsOperatorsInput {
  item: FilterFindOneEquipmentContentsItemOperatorsInput
  quantity: FilterFindOneEquipmentContentsQuantityOperatorsInput
}

input FilterFindOneEquipmentContentsQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneEquipmentCostInput {
  quantity: Float
  unit: String
}

input FilterFindOneEquipmentCostOperatorsInput {
  quantity: FilterFindOneEquipmentCostQuantityOperatorsInput
  unit: FilterFindOneEquipmentCostUnitOperatorsInput
}

input FilterFindOneEquipmentCostQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneEquipmentCostUnitOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentDamageDamage_diceOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentDamageDamage_typeIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentDamageDamage_typeNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentDamageDamage_typeOperatorsInput {
  index: FilterFindOneEquipmentDamageDamage_typeIndexOperatorsInput
  name: FilterFindOneEquipmentDamageDamage_typeNameOperatorsInput
  url: FilterFindOneEquipmentDamageDamage_typeUrlOperatorsInput
}

input FilterFindOneEquipmentDamageDamage_typeUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentDamageInput {
  damage_dice: String
  damage_type: FilterFindOneAbilityScoreSkillsInput
}

input FilterFindOneEquipmentDamageOperatorsInput {
  damage_dice: FilterFindOneEquipmentDamageDamage_diceOperatorsInput
  damage_type: FilterFindOneEquipmentDamageDamage_typeOperatorsInput
}

input FilterFindOneEquipmentDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentEquipment_categoryIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentEquipment_categoryNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentEquipment_categoryOperatorsInput {
  index: FilterFindOneEquipmentEquipment_categoryIndexOperatorsInput
  name: FilterFindOneEquipmentEquipment_categoryNameOperatorsInput
  url: FilterFindOneEquipmentEquipment_categoryUrlOperatorsInput
}

input FilterFindOneEquipmentEquipment_categoryUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentGear_categoryIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentGear_categoryNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentGear_categoryOperatorsInput {
  index: FilterFindOneEquipmentGear_categoryIndexOperatorsInput
  name: FilterFindOneEquipmentGear_categoryNameOperatorsInput
  url: FilterFindOneEquipmentGear_categoryUrlOperatorsInput
}

input FilterFindOneEquipmentGear_categoryUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentInput {
  _id: String
  armor_category: String
  armor_class: FilterFindOneEquipmentArmor_classInput
  capacity: String
  category_range: String
  contents: [FilterFindOneEquipmentContentsInput]
  cost: FilterFindOneEquipmentCostInput
  damage: FilterFindOneEquipmentDamageInput
  desc: [String]
  equipment_category: FilterFindOneAbilityScoreSkillsInput
  gear_category: FilterFindOneAbilityScoreSkillsInput
  index: String
  name: String
  properties: [FilterFindOneAbilityScoreSkillsInput]
  quantity: Float
  range: FilterFindOneEquipmentRangeInput
  special: [String]
  speed: FilterFindOneEquipmentSpeedInput
  stealth_disadvantage: Boolean
  str_minimum: Float
  throw_range: FilterFindOneEquipmentThrow_rangeInput
  tool_category: String
  two_handed_damage: FilterFindOneEquipmentTwo_handed_damageInput
  url: String
  vehicle_category: String
  weapon_category: String
  weapon_range: String
  weight: Float

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneEquipmentOperatorsInput
  OR: [FilterFindOneEquipmentInput!]
  AND: [FilterFindOneEquipmentInput!]
}

input FilterFindOneEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneEquipmentOperatorsInput {
  _id: FilterFindOneEquipment_idOperatorsInput
  armor_category: FilterFindOneEquipmentArmor_categoryOperatorsInput
  armor_class: FilterFindOneEquipmentArmor_classOperatorsInput
  capacity: FilterFindOneEquipmentCapacityOperatorsInput
  category_range: FilterFindOneEquipmentCategory_rangeOperatorsInput
  contents: FilterFindOneEquipmentContentsOperatorsInput
  cost: FilterFindOneEquipmentCostOperatorsInput
  damage: FilterFindOneEquipmentDamageOperatorsInput
  desc: FilterFindOneEquipmentDescOperatorsInput
  equipment_category: FilterFindOneEquipmentEquipment_categoryOperatorsInput
  gear_category: FilterFindOneEquipmentGear_categoryOperatorsInput
  index: FilterFindOneEquipmentIndexOperatorsInput
  name: FilterFindOneEquipmentNameOperatorsInput
  properties: FilterFindOneEquipmentPropertiesOperatorsInput
  quantity: FilterFindOneEquipmentQuantityOperatorsInput
  range: FilterFindOneEquipmentRangeOperatorsInput
  special: FilterFindOneEquipmentSpecialOperatorsInput
  speed: FilterFindOneEquipmentSpeedOperatorsInput
  stealth_disadvantage: FilterFindOneEquipmentStealth_disadvantageOperatorsInput
  str_minimum: FilterFindOneEquipmentStr_minimumOperatorsInput
  throw_range: FilterFindOneEquipmentThrow_rangeOperatorsInput
  tool_category: FilterFindOneEquipmentTool_categoryOperatorsInput
  two_handed_damage: FilterFindOneEquipmentTwo_handed_damageOperatorsInput
  url: FilterFindOneEquipmentUrlOperatorsInput
  vehicle_category: FilterFindOneEquipmentVehicle_categoryOperatorsInput
  weapon_category: FilterFindOneEquipmentWeapon_categoryOperatorsInput
  weapon_range: FilterFindOneEquipmentWeapon_rangeOperatorsInput
  weight: FilterFindOneEquipmentWeightOperatorsInput
}

input FilterFindOneEquipmentPropertiesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentPropertiesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentPropertiesOperatorsInput {
  index: FilterFindOneEquipmentPropertiesIndexOperatorsInput
  name: FilterFindOneEquipmentPropertiesNameOperatorsInput
  url: FilterFindOneEquipmentPropertiesUrlOperatorsInput
}

input FilterFindOneEquipmentPropertiesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneEquipmentRangeInput {
  long: Float
  normal: Float
}

input FilterFindOneEquipmentRangeLongOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneEquipmentRangeNormalOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneEquipmentRangeOperatorsInput {
  long: FilterFindOneEquipmentRangeLongOperatorsInput
  normal: FilterFindOneEquipmentRangeNormalOperatorsInput
}

input FilterFindOneEquipmentSpecialOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentSpeedInput {
  quantity: Float
  unit: String
}

input FilterFindOneEquipmentSpeedOperatorsInput {
  quantity: FilterFindOneEquipmentSpeedQuantityOperatorsInput
  unit: FilterFindOneEquipmentSpeedUnitOperatorsInput
}

input FilterFindOneEquipmentSpeedQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneEquipmentSpeedUnitOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentStealth_disadvantageOperatorsInput {
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
  exists: Boolean
}

input FilterFindOneEquipmentStr_minimumOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneEquipmentThrow_rangeInput {
  long: Float
  normal: Float
}

input FilterFindOneEquipmentThrow_rangeLongOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneEquipmentThrow_rangeNormalOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneEquipmentThrow_rangeOperatorsInput {
  long: FilterFindOneEquipmentThrow_rangeLongOperatorsInput
  normal: FilterFindOneEquipmentThrow_rangeNormalOperatorsInput
}

input FilterFindOneEquipmentTool_categoryOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentTwo_handed_damageDamage_diceOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentTwo_handed_damageDamage_typeIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentTwo_handed_damageDamage_typeNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentTwo_handed_damageDamage_typeOperatorsInput {
  index: FilterFindOneEquipmentTwo_handed_damageDamage_typeIndexOperatorsInput
  name: FilterFindOneEquipmentTwo_handed_damageDamage_typeNameOperatorsInput
  url: FilterFindOneEquipmentTwo_handed_damageDamage_typeUrlOperatorsInput
}

input FilterFindOneEquipmentTwo_handed_damageDamage_typeUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentTwo_handed_damageInput {
  damage_dice: String
  damage_type: FilterFindOneAbilityScoreSkillsInput
}

input FilterFindOneEquipmentTwo_handed_damageOperatorsInput {
  damage_dice: FilterFindOneEquipmentTwo_handed_damageDamage_diceOperatorsInput
  damage_type: FilterFindOneEquipmentTwo_handed_damageDamage_typeOperatorsInput
}

input FilterFindOneEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentVehicle_categoryOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentWeapon_categoryOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentWeapon_rangeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneEquipmentWeightOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneFeature_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureChoiceChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneFeatureChoiceFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureChoiceFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureChoiceFromOperatorsInput {
  index: FilterFindOneFeatureChoiceFromIndexOperatorsInput
  name: FilterFindOneFeatureChoiceFromNameOperatorsInput
  url: FilterFindOneFeatureChoiceFromUrlOperatorsInput
}

input FilterFindOneFeatureChoiceFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureChoiceInput {
  choose: Float
  from: [FilterFindOneAbilityScoreSkillsInput]
  type: String
}

input FilterFindOneFeatureChoiceOperatorsInput {
  choose: FilterFindOneFeatureChoiceChooseOperatorsInput
  from: FilterFindOneFeatureChoiceFromOperatorsInput
  type: FilterFindOneFeatureChoiceTypeOperatorsInput
}

input FilterFindOneFeatureChoiceTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureClassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureClassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureClassOperatorsInput {
  index: FilterFindOneFeatureClassIndexOperatorsInput
  name: FilterFindOneFeatureClassNameOperatorsInput
  url: FilterFindOneFeatureClassUrlOperatorsInput
}

input FilterFindOneFeatureClassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureGroupOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureInput {
  _id: String
  choice: FilterFindOneFeatureChoiceInput
  class: FilterFindOneAbilityScoreSkillsInput
  desc: [String]
  group: String
  index: String
  level: Float
  name: String
  prerequisites: [FilterFindOneFeaturePrerequisitesInput]
  reference: String
  subclass: FilterFindOneAbilityScoreSkillsInput
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneFeatureOperatorsInput
  OR: [FilterFindOneFeatureInput!]
  AND: [FilterFindOneFeatureInput!]
}

input FilterFindOneFeatureLevelOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneFeatureNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneFeatureOperatorsInput {
  _id: FilterFindOneFeature_idOperatorsInput
  choice: FilterFindOneFeatureChoiceOperatorsInput
  class: FilterFindOneFeatureClassOperatorsInput
  desc: FilterFindOneFeatureDescOperatorsInput
  group: FilterFindOneFeatureGroupOperatorsInput
  index: FilterFindOneFeatureIndexOperatorsInput
  level: FilterFindOneFeatureLevelOperatorsInput
  name: FilterFindOneFeatureNameOperatorsInput
  prerequisites: FilterFindOneFeaturePrerequisitesOperatorsInput
  reference: FilterFindOneFeatureReferenceOperatorsInput
  subclass: FilterFindOneFeatureSubclassOperatorsInput
  url: FilterFindOneFeatureUrlOperatorsInput
}

input FilterFindOneFeaturePrerequisitesInput {
  level: Float
  type: String
}

input FilterFindOneFeaturePrerequisitesLevelOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneFeaturePrerequisitesOperatorsInput {
  level: FilterFindOneFeaturePrerequisitesLevelOperatorsInput
  type: FilterFindOneFeaturePrerequisitesTypeOperatorsInput
}

input FilterFindOneFeaturePrerequisitesTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureReferenceOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureSubclassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureSubclassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureSubclassOperatorsInput {
  index: FilterFindOneFeatureSubclassIndexOperatorsInput
  name: FilterFindOneFeatureSubclassNameOperatorsInput
  url: FilterFindOneFeatureSubclassUrlOperatorsInput
}

input FilterFindOneFeatureSubclassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneFeatureUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLanguage_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLanguageDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLanguageIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLanguageInput {
  _id: String
  desc: String
  index: String
  name: String
  script: String
  type: String
  typical_speakers: [String]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneLanguageOperatorsInput
  OR: [FilterFindOneLanguageInput!]
  AND: [FilterFindOneLanguageInput!]
}

input FilterFindOneLanguageNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneLanguageOperatorsInput {
  _id: FilterFindOneLanguage_idOperatorsInput
  desc: FilterFindOneLanguageDescOperatorsInput
  index: FilterFindOneLanguageIndexOperatorsInput
  name: FilterFindOneLanguageNameOperatorsInput
  script: FilterFindOneLanguageScriptOperatorsInput
  type: FilterFindOneLanguageTypeOperatorsInput
  typical_speakers: FilterFindOneLanguageTypical_speakersOperatorsInput
  url: FilterFindOneLanguageUrlOperatorsInput
}

input FilterFindOneLanguageScriptOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLanguageTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLanguageTypical_speakersOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLanguageUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevel_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevelAbility_score_bonusesOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificAction_surgesOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificArcane_recovery_levelsOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificAura_rangeOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificBardic_inspiration_dieOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificBrutal_critical_diceOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificChannel_divinity_chargesOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificCreating_spell_slotsInput {
  sorcery_point_cost: Float
  spell_slot_level: Float
}

input FilterFindOneLevelClass_specificCreating_spell_slotsOperatorsInput {
  sorcery_point_cost: FilterFindOneLevelClass_specificCreating_spell_slotsSorcery_point_costOperatorsInput
  spell_slot_level: FilterFindOneLevelClass_specificCreating_spell_slotsSpell_slot_levelOperatorsInput
}

input FilterFindOneLevelClass_specificCreating_spell_slotsSorcery_point_costOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificCreating_spell_slotsSpell_slot_levelOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificDestroy_undead_crOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificExtra_attacksOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificFavored_enemiesOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificFavored_terrainOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificIndomitable_usesOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificInput {
  action_surges: Float
  arcane_recovery_levels: Float
  aura_range: Float
  bardic_inspiration_die: Float
  brutal_critical_dice: Float
  channel_divinity_charges: Float
  creating_spell_slots: [FilterFindOneLevelClass_specificCreating_spell_slotsInput]
  destroy_undead_cr: Float
  extra_attacks: Float
  favored_enemies: Float
  favored_terrain: Float
  indomitable_uses: Float
  invocations_known: Float
  ki_points: Float
  magical_secrets_max_5: Float
  magical_secrets_max_7: Float
  magical_secrets_max_9: Float
  martial_arts: FilterFindOneLevelClass_specificMartial_artsInput
  metamagic_known: Float
  mystic_arcanum_level_6: Float
  mystic_arcanum_level_7: Float
  mystic_arcanum_level_8: Float
  mystic_arcanum_level_9: Float
  rage_count: Float
  rage_damage_bonus: Float
  sneak_attack: FilterFindOneLevelClass_specificSneak_attackInput
  song_of_rest_die: Float
  sorcery_points: Float
  unarmored_movement: Float
  wild_shape_fly: Boolean
  wild_shape_max_cr: Float
  wild_shape_swim: Boolean
}

input FilterFindOneLevelClass_specificInvocations_knownOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificKi_pointsOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificMagical_secrets_max_5OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificMagical_secrets_max_7OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificMagical_secrets_max_9OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificMartial_artsDice_countOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificMartial_artsDice_valueOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificMartial_artsInput {
  dice_count: Float
  dice_value: Float
}

input FilterFindOneLevelClass_specificMartial_artsOperatorsInput {
  dice_count: FilterFindOneLevelClass_specificMartial_artsDice_countOperatorsInput
  dice_value: FilterFindOneLevelClass_specificMartial_artsDice_valueOperatorsInput
}

input FilterFindOneLevelClass_specificMetamagic_knownOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificMystic_arcanum_level_6OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificMystic_arcanum_level_7OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificMystic_arcanum_level_8OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificMystic_arcanum_level_9OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificOperatorsInput {
  action_surges: FilterFindOneLevelClass_specificAction_surgesOperatorsInput
  arcane_recovery_levels: FilterFindOneLevelClass_specificArcane_recovery_levelsOperatorsInput
  aura_range: FilterFindOneLevelClass_specificAura_rangeOperatorsInput
  bardic_inspiration_die: FilterFindOneLevelClass_specificBardic_inspiration_dieOperatorsInput
  brutal_critical_dice: FilterFindOneLevelClass_specificBrutal_critical_diceOperatorsInput
  channel_divinity_charges: FilterFindOneLevelClass_specificChannel_divinity_chargesOperatorsInput
  creating_spell_slots: FilterFindOneLevelClass_specificCreating_spell_slotsOperatorsInput
  destroy_undead_cr: FilterFindOneLevelClass_specificDestroy_undead_crOperatorsInput
  extra_attacks: FilterFindOneLevelClass_specificExtra_attacksOperatorsInput
  favored_enemies: FilterFindOneLevelClass_specificFavored_enemiesOperatorsInput
  favored_terrain: FilterFindOneLevelClass_specificFavored_terrainOperatorsInput
  indomitable_uses: FilterFindOneLevelClass_specificIndomitable_usesOperatorsInput
  invocations_known: FilterFindOneLevelClass_specificInvocations_knownOperatorsInput
  ki_points: FilterFindOneLevelClass_specificKi_pointsOperatorsInput
  magical_secrets_max_5: FilterFindOneLevelClass_specificMagical_secrets_max_5OperatorsInput
  magical_secrets_max_7: FilterFindOneLevelClass_specificMagical_secrets_max_7OperatorsInput
  magical_secrets_max_9: FilterFindOneLevelClass_specificMagical_secrets_max_9OperatorsInput
  martial_arts: FilterFindOneLevelClass_specificMartial_artsOperatorsInput
  metamagic_known: FilterFindOneLevelClass_specificMetamagic_knownOperatorsInput
  mystic_arcanum_level_6: FilterFindOneLevelClass_specificMystic_arcanum_level_6OperatorsInput
  mystic_arcanum_level_7: FilterFindOneLevelClass_specificMystic_arcanum_level_7OperatorsInput
  mystic_arcanum_level_8: FilterFindOneLevelClass_specificMystic_arcanum_level_8OperatorsInput
  mystic_arcanum_level_9: FilterFindOneLevelClass_specificMystic_arcanum_level_9OperatorsInput
  rage_count: FilterFindOneLevelClass_specificRage_countOperatorsInput
  rage_damage_bonus: FilterFindOneLevelClass_specificRage_damage_bonusOperatorsInput
  sneak_attack: FilterFindOneLevelClass_specificSneak_attackOperatorsInput
  song_of_rest_die: FilterFindOneLevelClass_specificSong_of_rest_dieOperatorsInput
  sorcery_points: FilterFindOneLevelClass_specificSorcery_pointsOperatorsInput
  unarmored_movement: FilterFindOneLevelClass_specificUnarmored_movementOperatorsInput
  wild_shape_fly: FilterFindOneLevelClass_specificWild_shape_flyOperatorsInput
  wild_shape_max_cr: FilterFindOneLevelClass_specificWild_shape_max_crOperatorsInput
  wild_shape_swim: FilterFindOneLevelClass_specificWild_shape_swimOperatorsInput
}

input FilterFindOneLevelClass_specificRage_countOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificRage_damage_bonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificSneak_attackDice_countOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificSneak_attackDice_valueOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificSneak_attackInput {
  dice_count: Float
  dice_value: Float
}

input FilterFindOneLevelClass_specificSneak_attackOperatorsInput {
  dice_count: FilterFindOneLevelClass_specificSneak_attackDice_countOperatorsInput
  dice_value: FilterFindOneLevelClass_specificSneak_attackDice_valueOperatorsInput
}

input FilterFindOneLevelClass_specificSong_of_rest_dieOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificSorcery_pointsOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificUnarmored_movementOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificWild_shape_flyOperatorsInput {
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
  exists: Boolean
}

input FilterFindOneLevelClass_specificWild_shape_max_crOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelClass_specificWild_shape_swimOperatorsInput {
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
  exists: Boolean
}

input FilterFindOneLevelClassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevelClassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevelClassOperatorsInput {
  index: FilterFindOneLevelClassIndexOperatorsInput
  name: FilterFindOneLevelClassNameOperatorsInput
  url: FilterFindOneLevelClassUrlOperatorsInput
}

input FilterFindOneLevelClassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevelFeature_choicesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevelFeature_choicesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevelFeature_choicesOperatorsInput {
  index: FilterFindOneLevelFeature_choicesIndexOperatorsInput
  name: FilterFindOneLevelFeature_choicesNameOperatorsInput
  url: FilterFindOneLevelFeature_choicesUrlOperatorsInput
}

input FilterFindOneLevelFeature_choicesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevelFeaturesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevelFeaturesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevelFeaturesOperatorsInput {
  index: FilterFindOneLevelFeaturesIndexOperatorsInput
  name: FilterFindOneLevelFeaturesNameOperatorsInput
  url: FilterFindOneLevelFeaturesUrlOperatorsInput
}

input FilterFindOneLevelFeaturesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevelIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevelInput {
  _id: String
  ability_score_bonuses: Float
  class: FilterFindOneAbilityScoreSkillsInput
  class_specific: FilterFindOneLevelClass_specificInput
  feature_choices: [FilterFindOneAbilityScoreSkillsInput]
  features: [FilterFindOneAbilityScoreSkillsInput]
  index: String
  level: Float
  prof_bonus: Float
  spellcasting: FilterFindOneLevelSpellcastingInput
  subclass: FilterFindOneAbilityScoreSkillsInput
  subclass_specific: FilterFindOneLevelSubclass_specificInput
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneLevelOperatorsInput
  OR: [FilterFindOneLevelInput!]
  AND: [FilterFindOneLevelInput!]
}

input FilterFindOneLevelLevelOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneLevelOperatorsInput {
  _id: FilterFindOneLevel_idOperatorsInput
  ability_score_bonuses: FilterFindOneLevelAbility_score_bonusesOperatorsInput
  class: FilterFindOneLevelClassOperatorsInput
  class_specific: FilterFindOneLevelClass_specificOperatorsInput
  feature_choices: FilterFindOneLevelFeature_choicesOperatorsInput
  features: FilterFindOneLevelFeaturesOperatorsInput
  index: FilterFindOneLevelIndexOperatorsInput
  level: FilterFindOneLevelLevelOperatorsInput
  prof_bonus: FilterFindOneLevelProf_bonusOperatorsInput
  spellcasting: FilterFindOneLevelSpellcastingOperatorsInput
  subclass: FilterFindOneLevelSubclassOperatorsInput
  subclass_specific: FilterFindOneLevelSubclass_specificOperatorsInput
  url: FilterFindOneLevelUrlOperatorsInput
}

input FilterFindOneLevelProf_bonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelSpellcastingCantrips_knownOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelSpellcastingInput {
  cantrips_known: Float
  spell_slots_level_1: Float
  spell_slots_level_2: Float
  spell_slots_level_3: Float
  spell_slots_level_4: Float
  spell_slots_level_5: Float
  spell_slots_level_6: Float
  spell_slots_level_7: Float
  spell_slots_level_8: Float
  spell_slots_level_9: Float
  spells_known: Float
}

input FilterFindOneLevelSpellcastingOperatorsInput {
  cantrips_known: FilterFindOneLevelSpellcastingCantrips_knownOperatorsInput
  spell_slots_level_1: FilterFindOneLevelSpellcastingSpell_slots_level_1OperatorsInput
  spell_slots_level_2: FilterFindOneLevelSpellcastingSpell_slots_level_2OperatorsInput
  spell_slots_level_3: FilterFindOneLevelSpellcastingSpell_slots_level_3OperatorsInput
  spell_slots_level_4: FilterFindOneLevelSpellcastingSpell_slots_level_4OperatorsInput
  spell_slots_level_5: FilterFindOneLevelSpellcastingSpell_slots_level_5OperatorsInput
  spell_slots_level_6: FilterFindOneLevelSpellcastingSpell_slots_level_6OperatorsInput
  spell_slots_level_7: FilterFindOneLevelSpellcastingSpell_slots_level_7OperatorsInput
  spell_slots_level_8: FilterFindOneLevelSpellcastingSpell_slots_level_8OperatorsInput
  spell_slots_level_9: FilterFindOneLevelSpellcastingSpell_slots_level_9OperatorsInput
  spells_known: FilterFindOneLevelSpellcastingSpells_knownOperatorsInput
}

input FilterFindOneLevelSpellcastingSpell_slots_level_1OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelSpellcastingSpell_slots_level_2OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelSpellcastingSpell_slots_level_3OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelSpellcastingSpell_slots_level_4OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelSpellcastingSpell_slots_level_5OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelSpellcastingSpell_slots_level_6OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelSpellcastingSpell_slots_level_7OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelSpellcastingSpell_slots_level_8OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelSpellcastingSpell_slots_level_9OperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelSpellcastingSpells_knownOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelSubclass_specificAdditional_magical_secrets_max_lvlOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelSubclass_specificAura_rangeOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneLevelSubclass_specificInput {
  additional_magical_secrets_max_lvl: Float
  aura_range: Float
}

input FilterFindOneLevelSubclass_specificOperatorsInput {
  additional_magical_secrets_max_lvl: FilterFindOneLevelSubclass_specificAdditional_magical_secrets_max_lvlOperatorsInput
  aura_range: FilterFindOneLevelSubclass_specificAura_rangeOperatorsInput
}

input FilterFindOneLevelSubclassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevelSubclassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevelSubclassOperatorsInput {
  index: FilterFindOneLevelSubclassIndexOperatorsInput
  name: FilterFindOneLevelSubclassNameOperatorsInput
  url: FilterFindOneLevelSubclassUrlOperatorsInput
}

input FilterFindOneLevelSubclassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneLevelUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMagicItem_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMagicItemDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMagicItemEquipment_categoryIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMagicItemEquipment_categoryNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMagicItemEquipment_categoryOperatorsInput {
  index: FilterFindOneMagicItemEquipment_categoryIndexOperatorsInput
  name: FilterFindOneMagicItemEquipment_categoryNameOperatorsInput
  url: FilterFindOneMagicItemEquipment_categoryUrlOperatorsInput
}

input FilterFindOneMagicItemEquipment_categoryUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMagicItemIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMagicItemInput {
  _id: String
  desc: [String]
  equipment_category: FilterFindOneAbilityScoreSkillsInput
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneMagicItemOperatorsInput
  OR: [FilterFindOneMagicItemInput!]
  AND: [FilterFindOneMagicItemInput!]
}

input FilterFindOneMagicItemNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneMagicItemOperatorsInput {
  _id: FilterFindOneMagicItem_idOperatorsInput
  desc: FilterFindOneMagicItemDescOperatorsInput
  equipment_category: FilterFindOneMagicItemEquipment_categoryOperatorsInput
  index: FilterFindOneMagicItemIndexOperatorsInput
  name: FilterFindOneMagicItemNameOperatorsInput
  url: FilterFindOneMagicItemUrlOperatorsInput
}

input FilterFindOneMagicItemUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMagicSchool_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMagicSchoolDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMagicSchoolIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMagicSchoolInput {
  _id: String
  desc: String
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneMagicSchoolOperatorsInput
  OR: [FilterFindOneMagicSchoolInput!]
  AND: [FilterFindOneMagicSchoolInput!]
}

input FilterFindOneMagicSchoolNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneMagicSchoolOperatorsInput {
  _id: FilterFindOneMagicSchool_idOperatorsInput
  desc: FilterFindOneMagicSchoolDescOperatorsInput
  index: FilterFindOneMagicSchoolIndexOperatorsInput
  name: FilterFindOneMagicSchoolNameOperatorsInput
  url: FilterFindOneMagicSchoolUrlOperatorsInput
}

input FilterFindOneMagicSchoolUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonster_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterActionsAttack_bonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneMonsterActionsDamageDamage_diceOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterActionsDamageDamage_typeIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterActionsDamageDamage_typeNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterActionsDamageDamage_typeOperatorsInput {
  index: FilterFindOneMonsterActionsDamageDamage_typeIndexOperatorsInput
  name: FilterFindOneMonsterActionsDamageDamage_typeNameOperatorsInput
  url: FilterFindOneMonsterActionsDamageDamage_typeUrlOperatorsInput
}

input FilterFindOneMonsterActionsDamageDamage_typeUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterActionsDamageInput {
  damage_dice: String
  damage_type: FilterFindOneAbilityScoreSkillsInput
}

input FilterFindOneMonsterActionsDamageOperatorsInput {
  damage_dice: FilterFindOneMonsterActionsDamageDamage_diceOperatorsInput
  damage_type: FilterFindOneMonsterActionsDamageDamage_typeOperatorsInput
}

input FilterFindOneMonsterActionsDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterActionsInput {
  attack_bonus: Float
  damage: [FilterFindOneMonsterActionsDamageInput]
  desc: String
  name: String
}

input FilterFindOneMonsterActionsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterActionsOperatorsInput {
  attack_bonus: FilterFindOneMonsterActionsAttack_bonusOperatorsInput
  damage: FilterFindOneMonsterActionsDamageOperatorsInput
  desc: FilterFindOneMonsterActionsDescOperatorsInput
  name: FilterFindOneMonsterActionsNameOperatorsInput
}

input FilterFindOneMonsterAlignmentOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterArmor_classOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneMonsterChallenge_ratingOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneMonsterCharismaOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneMonsterCondition_immunitiesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterCondition_immunitiesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterCondition_immunitiesOperatorsInput {
  index: FilterFindOneMonsterCondition_immunitiesIndexOperatorsInput
  name: FilterFindOneMonsterCondition_immunitiesNameOperatorsInput
  url: FilterFindOneMonsterCondition_immunitiesUrlOperatorsInput
}

input FilterFindOneMonsterCondition_immunitiesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterConstitutionOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneMonsterDamage_immunitiesOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterDamage_resistancesOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterDamage_vulnerabilitiesOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterDexterityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneMonsterFormsIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterFormsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterFormsOperatorsInput {
  index: FilterFindOneMonsterFormsIndexOperatorsInput
  name: FilterFindOneMonsterFormsNameOperatorsInput
  url: FilterFindOneMonsterFormsUrlOperatorsInput
}

input FilterFindOneMonsterFormsUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterHit_diceOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterHit_pointsOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneMonsterIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterInput {
  _id: String
  actions: [FilterFindOneMonsterActionsInput]
  alignment: String
  armor_class: Float
  challenge_rating: Float
  charisma: Float
  condition_immunities: [FilterFindOneAbilityScoreSkillsInput]
  constitution: Float
  damage_immunities: [String]
  damage_resistances: [String]
  damage_vulnerabilities: [String]
  dexterity: Float
  forms: [FilterFindOneAbilityScoreSkillsInput]
  hit_dice: String
  hit_points: Float
  index: String
  intelligence: Float
  languages: String
  legendary_actions: [FilterFindOneMonsterLegendary_actionsInput]
  name: String
  proficiencies: [FilterFindOneMonsterProficienciesInput]
  reactions: [FilterFindOneMonsterReactionsInput]
  senses: FilterFindOneMonsterSensesInput
  size: String
  special_abilities: [FilterFindOneMonsterSpecial_abilitiesInput]
  speed: FilterFindOneMonsterSpeedInput
  strength: Float
  subtype: String
  type: String
  url: String
  wisdom: Float
  xp: Float

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneMonsterOperatorsInput
  OR: [FilterFindOneMonsterInput!]
  AND: [FilterFindOneMonsterInput!]
}

input FilterFindOneMonsterIntelligenceOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneMonsterLanguagesOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterLegendary_actionsAttack_bonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneMonsterLegendary_actionsDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterLegendary_actionsInput {
  attack_bonus: Float
  desc: String
  name: String
}

input FilterFindOneMonsterLegendary_actionsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterLegendary_actionsOperatorsInput {
  attack_bonus: FilterFindOneMonsterLegendary_actionsAttack_bonusOperatorsInput
  desc: FilterFindOneMonsterLegendary_actionsDescOperatorsInput
  name: FilterFindOneMonsterLegendary_actionsNameOperatorsInput
}

input FilterFindOneMonsterNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneMonsterOperatorsInput {
  _id: FilterFindOneMonster_idOperatorsInput
  actions: FilterFindOneMonsterActionsOperatorsInput
  alignment: FilterFindOneMonsterAlignmentOperatorsInput
  armor_class: FilterFindOneMonsterArmor_classOperatorsInput
  challenge_rating: FilterFindOneMonsterChallenge_ratingOperatorsInput
  charisma: FilterFindOneMonsterCharismaOperatorsInput
  condition_immunities: FilterFindOneMonsterCondition_immunitiesOperatorsInput
  constitution: FilterFindOneMonsterConstitutionOperatorsInput
  damage_immunities: FilterFindOneMonsterDamage_immunitiesOperatorsInput
  damage_resistances: FilterFindOneMonsterDamage_resistancesOperatorsInput
  damage_vulnerabilities: FilterFindOneMonsterDamage_vulnerabilitiesOperatorsInput
  dexterity: FilterFindOneMonsterDexterityOperatorsInput
  forms: FilterFindOneMonsterFormsOperatorsInput
  hit_dice: FilterFindOneMonsterHit_diceOperatorsInput
  hit_points: FilterFindOneMonsterHit_pointsOperatorsInput
  index: FilterFindOneMonsterIndexOperatorsInput
  intelligence: FilterFindOneMonsterIntelligenceOperatorsInput
  languages: FilterFindOneMonsterLanguagesOperatorsInput
  legendary_actions: FilterFindOneMonsterLegendary_actionsOperatorsInput
  name: FilterFindOneMonsterNameOperatorsInput
  proficiencies: FilterFindOneMonsterProficienciesOperatorsInput
  reactions: FilterFindOneMonsterReactionsOperatorsInput
  senses: FilterFindOneMonsterSensesOperatorsInput
  size: FilterFindOneMonsterSizeOperatorsInput
  special_abilities: FilterFindOneMonsterSpecial_abilitiesOperatorsInput
  speed: FilterFindOneMonsterSpeedOperatorsInput
  strength: FilterFindOneMonsterStrengthOperatorsInput
  subtype: FilterFindOneMonsterSubtypeOperatorsInput
  type: FilterFindOneMonsterTypeOperatorsInput
  url: FilterFindOneMonsterUrlOperatorsInput
  wisdom: FilterFindOneMonsterWisdomOperatorsInput
  xp: FilterFindOneMonsterXpOperatorsInput
}

input FilterFindOneMonsterProficienciesInput {
  proficiency: FilterFindOneAbilityScoreSkillsInput
  value: Float
}

input FilterFindOneMonsterProficienciesOperatorsInput {
  proficiency: FilterFindOneMonsterProficienciesProficiencyOperatorsInput
  value: FilterFindOneMonsterProficienciesValueOperatorsInput
}

input FilterFindOneMonsterProficienciesProficiencyIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterProficienciesProficiencyNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterProficienciesProficiencyOperatorsInput {
  index: FilterFindOneMonsterProficienciesProficiencyIndexOperatorsInput
  name: FilterFindOneMonsterProficienciesProficiencyNameOperatorsInput
  url: FilterFindOneMonsterProficienciesProficiencyUrlOperatorsInput
}

input FilterFindOneMonsterProficienciesProficiencyUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterProficienciesValueOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneMonsterReactionsDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterReactionsInput {
  desc: String
  name: String
}

input FilterFindOneMonsterReactionsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterReactionsOperatorsInput {
  desc: FilterFindOneMonsterReactionsDescOperatorsInput
  name: FilterFindOneMonsterReactionsNameOperatorsInput
}

input FilterFindOneMonsterSensesBlindsightOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterSensesDarkvisionOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterSensesInput {
  blindsight: String
  darkvision: String
  passive_perception: Float
  tremorsense: String
  truesight: String
}

input FilterFindOneMonsterSensesOperatorsInput {
  blindsight: FilterFindOneMonsterSensesBlindsightOperatorsInput
  darkvision: FilterFindOneMonsterSensesDarkvisionOperatorsInput
  passive_perception: FilterFindOneMonsterSensesPassive_perceptionOperatorsInput
  tremorsense: FilterFindOneMonsterSensesTremorsenseOperatorsInput
  truesight: FilterFindOneMonsterSensesTruesightOperatorsInput
}

input FilterFindOneMonsterSensesPassive_perceptionOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneMonsterSensesTremorsenseOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterSensesTruesightOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterSizeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterSpecial_abilitiesDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterSpecial_abilitiesInput {
  desc: String
  name: String
}

input FilterFindOneMonsterSpecial_abilitiesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterSpecial_abilitiesOperatorsInput {
  desc: FilterFindOneMonsterSpecial_abilitiesDescOperatorsInput
  name: FilterFindOneMonsterSpecial_abilitiesNameOperatorsInput
}

input FilterFindOneMonsterSpeedBurrowOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterSpeedClimbOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterSpeedFlyOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterSpeedHoverOperatorsInput {
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
  exists: Boolean
}

input FilterFindOneMonsterSpeedInput {
  burrow: String
  climb: String
  fly: String
  hover: Boolean
  swim: String
  walk: String
}

input FilterFindOneMonsterSpeedOperatorsInput {
  burrow: FilterFindOneMonsterSpeedBurrowOperatorsInput
  climb: FilterFindOneMonsterSpeedClimbOperatorsInput
  fly: FilterFindOneMonsterSpeedFlyOperatorsInput
  hover: FilterFindOneMonsterSpeedHoverOperatorsInput
  swim: FilterFindOneMonsterSpeedSwimOperatorsInput
  walk: FilterFindOneMonsterSpeedWalkOperatorsInput
}

input FilterFindOneMonsterSpeedSwimOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterSpeedWalkOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterStrengthOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneMonsterSubtypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneMonsterWisdomOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneMonsterXpOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneProficiency_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneProficiencyClassesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneProficiencyClassesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneProficiencyClassesOperatorsInput {
  index: FilterFindOneProficiencyClassesIndexOperatorsInput
  name: FilterFindOneProficiencyClassesNameOperatorsInput
  url: FilterFindOneProficiencyClassesUrlOperatorsInput
}

input FilterFindOneProficiencyClassesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneProficiencyIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneProficiencyInput {
  _id: String
  classes: [FilterFindOneAbilityScoreSkillsInput]
  index: String
  name: String
  races: [FilterFindOneAbilityScoreSkillsInput]
  references: [FilterFindOneProficiencyReferencesInput]
  type: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneProficiencyOperatorsInput
  OR: [FilterFindOneProficiencyInput!]
  AND: [FilterFindOneProficiencyInput!]
}

input FilterFindOneProficiencyNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneProficiencyOperatorsInput {
  _id: FilterFindOneProficiency_idOperatorsInput
  classes: FilterFindOneProficiencyClassesOperatorsInput
  index: FilterFindOneProficiencyIndexOperatorsInput
  name: FilterFindOneProficiencyNameOperatorsInput
  races: FilterFindOneProficiencyRacesOperatorsInput
  references: FilterFindOneProficiencyReferencesOperatorsInput
  type: FilterFindOneProficiencyTypeOperatorsInput
  url: FilterFindOneProficiencyUrlOperatorsInput
}

input FilterFindOneProficiencyRacesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneProficiencyRacesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneProficiencyRacesOperatorsInput {
  index: FilterFindOneProficiencyRacesIndexOperatorsInput
  name: FilterFindOneProficiencyRacesNameOperatorsInput
  url: FilterFindOneProficiencyRacesUrlOperatorsInput
}

input FilterFindOneProficiencyRacesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneProficiencyReferencesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneProficiencyReferencesInput {
  index: String
  name: String
  type: String
  url: String
}

input FilterFindOneProficiencyReferencesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneProficiencyReferencesOperatorsInput {
  index: FilterFindOneProficiencyReferencesIndexOperatorsInput
  name: FilterFindOneProficiencyReferencesNameOperatorsInput
  type: FilterFindOneProficiencyReferencesTypeOperatorsInput
  url: FilterFindOneProficiencyReferencesUrlOperatorsInput
}

input FilterFindOneProficiencyReferencesTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneProficiencyReferencesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneProficiencyTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneProficiencyUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRace_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceAbility_bonus_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneRaceAbility_bonus_optionsFromAbility_scoreIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceAbility_bonus_optionsFromAbility_scoreNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceAbility_bonus_optionsFromAbility_scoreOperatorsInput {
  index: FilterFindOneRaceAbility_bonus_optionsFromAbility_scoreIndexOperatorsInput
  name: FilterFindOneRaceAbility_bonus_optionsFromAbility_scoreNameOperatorsInput
  url: FilterFindOneRaceAbility_bonus_optionsFromAbility_scoreUrlOperatorsInput
}

input FilterFindOneRaceAbility_bonus_optionsFromAbility_scoreUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceAbility_bonus_optionsFromBonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneRaceAbility_bonus_optionsFromInput {
  ability_score: FilterFindOneAbilityScoreSkillsInput
  bonus: Float
}

input FilterFindOneRaceAbility_bonus_optionsFromOperatorsInput {
  ability_score: FilterFindOneRaceAbility_bonus_optionsFromAbility_scoreOperatorsInput
  bonus: FilterFindOneRaceAbility_bonus_optionsFromBonusOperatorsInput
}

input FilterFindOneRaceAbility_bonus_optionsInput {
  choose: Float
  from: [FilterFindOneRaceAbility_bonus_optionsFromInput]
  type: String
}

input FilterFindOneRaceAbility_bonus_optionsOperatorsInput {
  choose: FilterFindOneRaceAbility_bonus_optionsChooseOperatorsInput
  from: FilterFindOneRaceAbility_bonus_optionsFromOperatorsInput
  type: FilterFindOneRaceAbility_bonus_optionsTypeOperatorsInput
}

input FilterFindOneRaceAbility_bonus_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceAbility_bonusesAbility_scoreIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceAbility_bonusesAbility_scoreNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceAbility_bonusesAbility_scoreOperatorsInput {
  index: FilterFindOneRaceAbility_bonusesAbility_scoreIndexOperatorsInput
  name: FilterFindOneRaceAbility_bonusesAbility_scoreNameOperatorsInput
  url: FilterFindOneRaceAbility_bonusesAbility_scoreUrlOperatorsInput
}

input FilterFindOneRaceAbility_bonusesAbility_scoreUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceAbility_bonusesBonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneRaceAbility_bonusesInput {
  ability_score: FilterFindOneAbilityScoreSkillsInput
  bonus: Float
}

input FilterFindOneRaceAbility_bonusesOperatorsInput {
  ability_score: FilterFindOneRaceAbility_bonusesAbility_scoreOperatorsInput
  bonus: FilterFindOneRaceAbility_bonusesBonusOperatorsInput
}

input FilterFindOneRaceAgeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceAlignmentOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceInput {
  _id: String
  ability_bonus_options: FilterFindOneRaceAbility_bonus_optionsInput
  ability_bonuses: [FilterFindOneRaceAbility_bonusesInput]
  age: String
  alignment: String
  index: String
  language_desc: String
  language_options: FilterFindOneRaceLanguage_optionsInput
  languages: [FilterFindOneAbilityScoreSkillsInput]
  name: String
  size: String
  size_description: String
  speed: Float
  starting_proficiencies: [FilterFindOneAbilityScoreSkillsInput]
  starting_proficiency_options: FilterFindOneRaceStarting_proficiency_optionsInput
  subraces: [FilterFindOneAbilityScoreSkillsInput]
  trait_options: FilterFindOneRaceTrait_optionsInput
  traits: [FilterFindOneAbilityScoreSkillsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneRaceOperatorsInput
  OR: [FilterFindOneRaceInput!]
  AND: [FilterFindOneRaceInput!]
}

input FilterFindOneRaceLanguage_descOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceLanguage_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneRaceLanguage_optionsFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceLanguage_optionsFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceLanguage_optionsFromOperatorsInput {
  index: FilterFindOneRaceLanguage_optionsFromIndexOperatorsInput
  name: FilterFindOneRaceLanguage_optionsFromNameOperatorsInput
  url: FilterFindOneRaceLanguage_optionsFromUrlOperatorsInput
}

input FilterFindOneRaceLanguage_optionsFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceLanguage_optionsInput {
  choose: Float
  from: [FilterFindOneAbilityScoreSkillsInput]
  type: String
}

input FilterFindOneRaceLanguage_optionsOperatorsInput {
  choose: FilterFindOneRaceLanguage_optionsChooseOperatorsInput
  from: FilterFindOneRaceLanguage_optionsFromOperatorsInput
  type: FilterFindOneRaceLanguage_optionsTypeOperatorsInput
}

input FilterFindOneRaceLanguage_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceLanguagesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceLanguagesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceLanguagesOperatorsInput {
  index: FilterFindOneRaceLanguagesIndexOperatorsInput
  name: FilterFindOneRaceLanguagesNameOperatorsInput
  url: FilterFindOneRaceLanguagesUrlOperatorsInput
}

input FilterFindOneRaceLanguagesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneRaceOperatorsInput {
  _id: FilterFindOneRace_idOperatorsInput
  ability_bonus_options: FilterFindOneRaceAbility_bonus_optionsOperatorsInput
  ability_bonuses: FilterFindOneRaceAbility_bonusesOperatorsInput
  age: FilterFindOneRaceAgeOperatorsInput
  alignment: FilterFindOneRaceAlignmentOperatorsInput
  index: FilterFindOneRaceIndexOperatorsInput
  language_desc: FilterFindOneRaceLanguage_descOperatorsInput
  language_options: FilterFindOneRaceLanguage_optionsOperatorsInput
  languages: FilterFindOneRaceLanguagesOperatorsInput
  name: FilterFindOneRaceNameOperatorsInput
  size: FilterFindOneRaceSizeOperatorsInput
  size_description: FilterFindOneRaceSize_descriptionOperatorsInput
  speed: FilterFindOneRaceSpeedOperatorsInput
  starting_proficiencies: FilterFindOneRaceStarting_proficienciesOperatorsInput
  starting_proficiency_options: FilterFindOneRaceStarting_proficiency_optionsOperatorsInput
  subraces: FilterFindOneRaceSubracesOperatorsInput
  trait_options: FilterFindOneRaceTrait_optionsOperatorsInput
  traits: FilterFindOneRaceTraitsOperatorsInput
  url: FilterFindOneRaceUrlOperatorsInput
}

input FilterFindOneRaceSize_descriptionOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceSizeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceSpeedOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneRaceStarting_proficienciesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceStarting_proficienciesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceStarting_proficienciesOperatorsInput {
  index: FilterFindOneRaceStarting_proficienciesIndexOperatorsInput
  name: FilterFindOneRaceStarting_proficienciesNameOperatorsInput
  url: FilterFindOneRaceStarting_proficienciesUrlOperatorsInput
}

input FilterFindOneRaceStarting_proficienciesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceStarting_proficiency_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneRaceStarting_proficiency_optionsFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceStarting_proficiency_optionsFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceStarting_proficiency_optionsFromOperatorsInput {
  index: FilterFindOneRaceStarting_proficiency_optionsFromIndexOperatorsInput
  name: FilterFindOneRaceStarting_proficiency_optionsFromNameOperatorsInput
  url: FilterFindOneRaceStarting_proficiency_optionsFromUrlOperatorsInput
}

input FilterFindOneRaceStarting_proficiency_optionsFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceStarting_proficiency_optionsInput {
  choose: Float
  from: [FilterFindOneAbilityScoreSkillsInput]
  type: String
}

input FilterFindOneRaceStarting_proficiency_optionsOperatorsInput {
  choose: FilterFindOneRaceStarting_proficiency_optionsChooseOperatorsInput
  from: FilterFindOneRaceStarting_proficiency_optionsFromOperatorsInput
  type: FilterFindOneRaceStarting_proficiency_optionsTypeOperatorsInput
}

input FilterFindOneRaceStarting_proficiency_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceSubracesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceSubracesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceSubracesOperatorsInput {
  index: FilterFindOneRaceSubracesIndexOperatorsInput
  name: FilterFindOneRaceSubracesNameOperatorsInput
  url: FilterFindOneRaceSubracesUrlOperatorsInput
}

input FilterFindOneRaceSubracesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceTrait_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneRaceTrait_optionsFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceTrait_optionsFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceTrait_optionsFromOperatorsInput {
  index: FilterFindOneRaceTrait_optionsFromIndexOperatorsInput
  name: FilterFindOneRaceTrait_optionsFromNameOperatorsInput
  url: FilterFindOneRaceTrait_optionsFromUrlOperatorsInput
}

input FilterFindOneRaceTrait_optionsFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceTrait_optionsInput {
  choose: Float
  from: [FilterFindOneAbilityScoreSkillsInput]
  type: String
}

input FilterFindOneRaceTrait_optionsOperatorsInput {
  choose: FilterFindOneRaceTrait_optionsChooseOperatorsInput
  from: FilterFindOneRaceTrait_optionsFromOperatorsInput
  type: FilterFindOneRaceTrait_optionsTypeOperatorsInput
}

input FilterFindOneRaceTrait_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceTraitsIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceTraitsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceTraitsOperatorsInput {
  index: FilterFindOneRaceTraitsIndexOperatorsInput
  name: FilterFindOneRaceTraitsNameOperatorsInput
  url: FilterFindOneRaceTraitsUrlOperatorsInput
}

input FilterFindOneRaceTraitsUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRaceUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRule_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRuleDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRuleIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRuleInput {
  _id: String
  desc: String
  index: String
  name: String
  subsections: [FilterFindOneAbilityScoreSkillsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneRuleOperatorsInput
  OR: [FilterFindOneRuleInput!]
  AND: [FilterFindOneRuleInput!]
}

input FilterFindOneRuleNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneRuleOperatorsInput {
  _id: FilterFindOneRule_idOperatorsInput
  desc: FilterFindOneRuleDescOperatorsInput
  index: FilterFindOneRuleIndexOperatorsInput
  name: FilterFindOneRuleNameOperatorsInput
  subsections: FilterFindOneRuleSubsectionsOperatorsInput
  url: FilterFindOneRuleUrlOperatorsInput
}

input FilterFindOneRuleSection_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRuleSectionDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRuleSectionIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRuleSectionInput {
  _id: String
  desc: String
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneRuleSectionOperatorsInput
  OR: [FilterFindOneRuleSectionInput!]
  AND: [FilterFindOneRuleSectionInput!]
}

input FilterFindOneRuleSectionNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneRuleSectionOperatorsInput {
  _id: FilterFindOneRuleSection_idOperatorsInput
  desc: FilterFindOneRuleSectionDescOperatorsInput
  index: FilterFindOneRuleSectionIndexOperatorsInput
  name: FilterFindOneRuleSectionNameOperatorsInput
  url: FilterFindOneRuleSectionUrlOperatorsInput
}

input FilterFindOneRuleSectionUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRuleSubsectionsIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRuleSubsectionsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRuleSubsectionsOperatorsInput {
  index: FilterFindOneRuleSubsectionsIndexOperatorsInput
  name: FilterFindOneRuleSubsectionsNameOperatorsInput
  url: FilterFindOneRuleSubsectionsUrlOperatorsInput
}

input FilterFindOneRuleSubsectionsUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneRuleUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpell_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellArea_of_effectInput {
  size: Float
  type: String
}

input FilterFindOneSpellArea_of_effectOperatorsInput {
  size: FilterFindOneSpellArea_of_effectSizeOperatorsInput
  type: FilterFindOneSpellArea_of_effectTypeOperatorsInput
}

input FilterFindOneSpellArea_of_effectSizeOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneSpellArea_of_effectTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellAttack_typeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellCasting_timeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellClassesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellClassesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellClassesOperatorsInput {
  index: FilterFindOneSpellClassesIndexOperatorsInput
  name: FilterFindOneSpellClassesNameOperatorsInput
  url: FilterFindOneSpellClassesUrlOperatorsInput
}

input FilterFindOneSpellClassesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellComponentsOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellConcentrationOperatorsInput {
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
  exists: Boolean
}

input FilterFindOneSpellDamageDamage_at_character_levelOperatorsInput {
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  exists: Boolean
}

input FilterFindOneSpellDamageDamage_at_slot_levelOperatorsInput {
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  exists: Boolean
}

input FilterFindOneSpellDamageDamage_typeIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellDamageDamage_typeNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellDamageDamage_typeOperatorsInput {
  index: FilterFindOneSpellDamageDamage_typeIndexOperatorsInput
  name: FilterFindOneSpellDamageDamage_typeNameOperatorsInput
  url: FilterFindOneSpellDamageDamage_typeUrlOperatorsInput
}

input FilterFindOneSpellDamageDamage_typeUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellDamageInput {
  damage_at_slot_level: JSON
  damage_at_character_level: JSON
  damage_type: FilterFindOneAbilityScoreSkillsInput
}

input FilterFindOneSpellDamageOperatorsInput {
  damage_at_slot_level: FilterFindOneSpellDamageDamage_at_slot_levelOperatorsInput
  damage_at_character_level: FilterFindOneSpellDamageDamage_at_character_levelOperatorsInput
  damage_type: FilterFindOneSpellDamageDamage_typeOperatorsInput
}

input FilterFindOneSpellDcDc_successOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellDcDc_typeIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellDcDc_typeNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellDcDc_typeOperatorsInput {
  index: FilterFindOneSpellDcDc_typeIndexOperatorsInput
  name: FilterFindOneSpellDcDc_typeNameOperatorsInput
  url: FilterFindOneSpellDcDc_typeUrlOperatorsInput
}

input FilterFindOneSpellDcDc_typeUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellDcDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellDcInput {
  dc_success: String
  dc_type: FilterFindOneAbilityScoreSkillsInput
  desc: String
}

input FilterFindOneSpellDcOperatorsInput {
  dc_success: FilterFindOneSpellDcDc_successOperatorsInput
  dc_type: FilterFindOneSpellDcDc_typeOperatorsInput
  desc: FilterFindOneSpellDcDescOperatorsInput
}

input FilterFindOneSpellDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellDurationOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellHeal_at_slot_levelOperatorsInput {
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  exists: Boolean
}

input FilterFindOneSpellHigher_levelOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellInput {
  _id: String
  area_of_effect: FilterFindOneSpellArea_of_effectInput
  attack_type: String
  casting_time: String
  classes: [FilterFindOneAbilityScoreSkillsInput]
  components: [String]
  concentration: Boolean
  damage: FilterFindOneSpellDamageInput
  dc: FilterFindOneSpellDcInput
  desc: [String]
  duration: String
  heal_at_slot_level: JSON
  higher_level: [String]
  index: String
  level: Float
  material: String
  name: String
  range: String
  ritual: Boolean
  school: FilterFindOneAbilityScoreSkillsInput
  subclasses: [FilterFindOneAbilityScoreSkillsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneSpellOperatorsInput
  OR: [FilterFindOneSpellInput!]
  AND: [FilterFindOneSpellInput!]
}

input FilterFindOneSpellLevelOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneSpellMaterialOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneSpellOperatorsInput {
  _id: FilterFindOneSpell_idOperatorsInput
  area_of_effect: FilterFindOneSpellArea_of_effectOperatorsInput
  attack_type: FilterFindOneSpellAttack_typeOperatorsInput
  casting_time: FilterFindOneSpellCasting_timeOperatorsInput
  classes: FilterFindOneSpellClassesOperatorsInput
  components: FilterFindOneSpellComponentsOperatorsInput
  concentration: FilterFindOneSpellConcentrationOperatorsInput
  damage: FilterFindOneSpellDamageOperatorsInput
  dc: FilterFindOneSpellDcOperatorsInput
  desc: FilterFindOneSpellDescOperatorsInput
  duration: FilterFindOneSpellDurationOperatorsInput
  heal_at_slot_level: FilterFindOneSpellHeal_at_slot_levelOperatorsInput
  higher_level: FilterFindOneSpellHigher_levelOperatorsInput
  index: FilterFindOneSpellIndexOperatorsInput
  level: FilterFindOneSpellLevelOperatorsInput
  material: FilterFindOneSpellMaterialOperatorsInput
  name: FilterFindOneSpellNameOperatorsInput
  range: FilterFindOneSpellRangeOperatorsInput
  ritual: FilterFindOneSpellRitualOperatorsInput
  school: FilterFindOneSpellSchoolOperatorsInput
  subclasses: FilterFindOneSpellSubclassesOperatorsInput
  url: FilterFindOneSpellUrlOperatorsInput
}

input FilterFindOneSpellRangeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellRitualOperatorsInput {
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
  exists: Boolean
}

input FilterFindOneSpellSchoolIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellSchoolNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellSchoolOperatorsInput {
  index: FilterFindOneSpellSchoolIndexOperatorsInput
  name: FilterFindOneSpellSchoolNameOperatorsInput
  url: FilterFindOneSpellSchoolUrlOperatorsInput
}

input FilterFindOneSpellSchoolUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellSubclassesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellSubclassesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellSubclassesOperatorsInput {
  index: FilterFindOneSpellSubclassesIndexOperatorsInput
  name: FilterFindOneSpellSubclassesNameOperatorsInput
  url: FilterFindOneSpellSubclassesUrlOperatorsInput
}

input FilterFindOneSpellSubclassesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSpellUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneStartingEquipment_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneStartingEquipmentClassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneStartingEquipmentClassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneStartingEquipmentClassOperatorsInput {
  index: FilterFindOneStartingEquipmentClassIndexOperatorsInput
  name: FilterFindOneStartingEquipmentClassNameOperatorsInput
  url: FilterFindOneStartingEquipmentClassUrlOperatorsInput
}

input FilterFindOneStartingEquipmentClassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneStartingEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneStartingEquipmentInput {
  _id: String
  class: FilterFindOneAbilityScoreSkillsInput
  index: String
  starting_equipment: [FilterFindOneStartingEquipmentStarting_equipmentInput]
  starting_equipment_options: [FilterFindOneStartingEquipmentStarting_equipment_optionsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneStartingEquipmentOperatorsInput
  OR: [FilterFindOneStartingEquipmentInput!]
  AND: [FilterFindOneStartingEquipmentInput!]
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneStartingEquipmentOperatorsInput {
  _id: FilterFindOneStartingEquipment_idOperatorsInput
  class: FilterFindOneStartingEquipmentClassOperatorsInput
  index: FilterFindOneStartingEquipmentIndexOperatorsInput
  starting_equipment: FilterFindOneStartingEquipmentStarting_equipmentOperatorsInput
  starting_equipment_options: FilterFindOneStartingEquipmentStarting_equipment_optionsOperatorsInput
  url: FilterFindOneStartingEquipmentUrlOperatorsInput
}

input FilterFindOneStartingEquipmentStarting_equipment_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneStartingEquipmentStarting_equipment_optionsFromEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneStartingEquipmentStarting_equipment_optionsFromEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneStartingEquipmentStarting_equipment_optionsFromEquipmentOperatorsInput {
  index: FilterFindOneStartingEquipmentStarting_equipment_optionsFromEquipmentIndexOperatorsInput
  name: FilterFindOneStartingEquipmentStarting_equipment_optionsFromEquipmentNameOperatorsInput
  url: FilterFindOneStartingEquipmentStarting_equipment_optionsFromEquipmentUrlOperatorsInput
}

input FilterFindOneStartingEquipmentStarting_equipment_optionsFromEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneStartingEquipmentStarting_equipment_optionsFromInput {
  equipment: FilterFindOneAbilityScoreSkillsInput
  quantity: Float
}

input FilterFindOneStartingEquipmentStarting_equipment_optionsFromOperatorsInput {
  equipment: FilterFindOneStartingEquipmentStarting_equipment_optionsFromEquipmentOperatorsInput
  quantity: FilterFindOneStartingEquipmentStarting_equipment_optionsFromQuantityOperatorsInput
}

input FilterFindOneStartingEquipmentStarting_equipment_optionsFromQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneStartingEquipmentStarting_equipment_optionsInput {
  choose: Float
  from: [FilterFindOneStartingEquipmentStarting_equipment_optionsFromInput]
  type: String
}

input FilterFindOneStartingEquipmentStarting_equipment_optionsOperatorsInput {
  choose: FilterFindOneStartingEquipmentStarting_equipment_optionsChooseOperatorsInput
  from: FilterFindOneStartingEquipmentStarting_equipment_optionsFromOperatorsInput
  type: FilterFindOneStartingEquipmentStarting_equipment_optionsTypeOperatorsInput
}

input FilterFindOneStartingEquipmentStarting_equipment_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneStartingEquipmentStarting_equipmentEquipmentIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneStartingEquipmentStarting_equipmentEquipmentNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneStartingEquipmentStarting_equipmentEquipmentOperatorsInput {
  index: FilterFindOneStartingEquipmentStarting_equipmentEquipmentIndexOperatorsInput
  name: FilterFindOneStartingEquipmentStarting_equipmentEquipmentNameOperatorsInput
  url: FilterFindOneStartingEquipmentStarting_equipmentEquipmentUrlOperatorsInput
}

input FilterFindOneStartingEquipmentStarting_equipmentEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneStartingEquipmentStarting_equipmentInput {
  equipment: FilterFindOneAbilityScoreSkillsInput
  quantity: Float
}

input FilterFindOneStartingEquipmentStarting_equipmentOperatorsInput {
  equipment: FilterFindOneStartingEquipmentStarting_equipmentEquipmentOperatorsInput
  quantity: FilterFindOneStartingEquipmentStarting_equipmentQuantityOperatorsInput
}

input FilterFindOneStartingEquipmentStarting_equipmentQuantityOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneStartingEquipmentUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclass_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassClassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassClassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassClassOperatorsInput {
  index: FilterFindOneSubclassClassIndexOperatorsInput
  name: FilterFindOneSubclassClassNameOperatorsInput
  url: FilterFindOneSubclassClassUrlOperatorsInput
}

input FilterFindOneSubclassClassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassInput {
  _id: String
  class: FilterFindOneAbilityScoreSkillsInput
  desc: [String]
  index: String
  name: String
  spells: [FilterFindOneSubclassSpellsInput]
  subclass_flavor: String
  subclass_levels: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneSubclassOperatorsInput
  OR: [FilterFindOneSubclassInput!]
  AND: [FilterFindOneSubclassInput!]
}

input FilterFindOneSubclassNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneSubclassOperatorsInput {
  _id: FilterFindOneSubclass_idOperatorsInput
  class: FilterFindOneSubclassClassOperatorsInput
  desc: FilterFindOneSubclassDescOperatorsInput
  index: FilterFindOneSubclassIndexOperatorsInput
  name: FilterFindOneSubclassNameOperatorsInput
  spells: FilterFindOneSubclassSpellsOperatorsInput
  subclass_flavor: FilterFindOneSubclassSubclass_flavorOperatorsInput
  subclass_levels: FilterFindOneSubclassSubclass_levelsOperatorsInput
  url: FilterFindOneSubclassUrlOperatorsInput
}

input FilterFindOneSubclassSpellsInput {
  prerequisites: [FilterFindOneSubclassSpellsPrerequisitesInput]
  spell: FilterFindOneAbilityScoreSkillsInput
}

input FilterFindOneSubclassSpellsOperatorsInput {
  prerequisites: FilterFindOneSubclassSpellsPrerequisitesOperatorsInput
  spell: FilterFindOneSubclassSpellsSpellOperatorsInput
}

input FilterFindOneSubclassSpellsPrerequisitesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassSpellsPrerequisitesInput {
  index: String
  name: String
  type: String
  url: String
}

input FilterFindOneSubclassSpellsPrerequisitesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassSpellsPrerequisitesOperatorsInput {
  index: FilterFindOneSubclassSpellsPrerequisitesIndexOperatorsInput
  name: FilterFindOneSubclassSpellsPrerequisitesNameOperatorsInput
  type: FilterFindOneSubclassSpellsPrerequisitesTypeOperatorsInput
  url: FilterFindOneSubclassSpellsPrerequisitesUrlOperatorsInput
}

input FilterFindOneSubclassSpellsPrerequisitesTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassSpellsPrerequisitesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassSpellsSpellIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassSpellsSpellNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassSpellsSpellOperatorsInput {
  index: FilterFindOneSubclassSpellsSpellIndexOperatorsInput
  name: FilterFindOneSubclassSpellsSpellNameOperatorsInput
  url: FilterFindOneSubclassSpellsSpellUrlOperatorsInput
}

input FilterFindOneSubclassSpellsSpellUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassSubclass_flavorOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassSubclass_levelsOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubclassUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubrace_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceAbility_bonusesAbility_scoreIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceAbility_bonusesAbility_scoreNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceAbility_bonusesAbility_scoreOperatorsInput {
  index: FilterFindOneSubraceAbility_bonusesAbility_scoreIndexOperatorsInput
  name: FilterFindOneSubraceAbility_bonusesAbility_scoreNameOperatorsInput
  url: FilterFindOneSubraceAbility_bonusesAbility_scoreUrlOperatorsInput
}

input FilterFindOneSubraceAbility_bonusesAbility_scoreUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceAbility_bonusesBonusOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneSubraceAbility_bonusesInput {
  ability_score: FilterFindOneAbilityScoreSkillsInput
  bonus: Float
}

input FilterFindOneSubraceAbility_bonusesOperatorsInput {
  ability_score: FilterFindOneSubraceAbility_bonusesAbility_scoreOperatorsInput
  bonus: FilterFindOneSubraceAbility_bonusesBonusOperatorsInput
}

input FilterFindOneSubraceDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceInput {
  _id: String
  ability_bonuses: [FilterFindOneSubraceAbility_bonusesInput]
  desc: String
  index: String
  language_options: FilterFindOneSubraceLanguage_optionsInput
  name: String
  race: FilterFindOneAbilityScoreSkillsInput
  racial_trait_options: FilterFindOneSubraceRacial_trait_optionsInput
  racial_traits: [FilterFindOneAbilityScoreSkillsInput]
  starting_proficiencies: [FilterFindOneAbilityScoreSkillsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneSubraceOperatorsInput
  OR: [FilterFindOneSubraceInput!]
  AND: [FilterFindOneSubraceInput!]
}

input FilterFindOneSubraceLanguage_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneSubraceLanguage_optionsFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceLanguage_optionsFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceLanguage_optionsFromOperatorsInput {
  index: FilterFindOneSubraceLanguage_optionsFromIndexOperatorsInput
  name: FilterFindOneSubraceLanguage_optionsFromNameOperatorsInput
  url: FilterFindOneSubraceLanguage_optionsFromUrlOperatorsInput
}

input FilterFindOneSubraceLanguage_optionsFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceLanguage_optionsInput {
  choose: Float
  from: [FilterFindOneAbilityScoreSkillsInput]
  type: String
}

input FilterFindOneSubraceLanguage_optionsOperatorsInput {
  choose: FilterFindOneSubraceLanguage_optionsChooseOperatorsInput
  from: FilterFindOneSubraceLanguage_optionsFromOperatorsInput
  type: FilterFindOneSubraceLanguage_optionsTypeOperatorsInput
}

input FilterFindOneSubraceLanguage_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneSubraceOperatorsInput {
  _id: FilterFindOneSubrace_idOperatorsInput
  ability_bonuses: FilterFindOneSubraceAbility_bonusesOperatorsInput
  desc: FilterFindOneSubraceDescOperatorsInput
  index: FilterFindOneSubraceIndexOperatorsInput
  language_options: FilterFindOneSubraceLanguage_optionsOperatorsInput
  name: FilterFindOneSubraceNameOperatorsInput
  race: FilterFindOneSubraceRaceOperatorsInput
  racial_trait_options: FilterFindOneSubraceRacial_trait_optionsOperatorsInput
  racial_traits: FilterFindOneSubraceRacial_traitsOperatorsInput
  starting_proficiencies: FilterFindOneSubraceStarting_proficienciesOperatorsInput
  url: FilterFindOneSubraceUrlOperatorsInput
}

input FilterFindOneSubraceRaceIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceRaceNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceRaceOperatorsInput {
  index: FilterFindOneSubraceRaceIndexOperatorsInput
  name: FilterFindOneSubraceRaceNameOperatorsInput
  url: FilterFindOneSubraceRaceUrlOperatorsInput
}

input FilterFindOneSubraceRaceUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceRacial_trait_optionsChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneSubraceRacial_trait_optionsFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceRacial_trait_optionsFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceRacial_trait_optionsFromOperatorsInput {
  index: FilterFindOneSubraceRacial_trait_optionsFromIndexOperatorsInput
  name: FilterFindOneSubraceRacial_trait_optionsFromNameOperatorsInput
  url: FilterFindOneSubraceRacial_trait_optionsFromUrlOperatorsInput
}

input FilterFindOneSubraceRacial_trait_optionsFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceRacial_trait_optionsInput {
  choose: Float
  from: [FilterFindOneAbilityScoreSkillsInput]
  type: String
}

input FilterFindOneSubraceRacial_trait_optionsOperatorsInput {
  choose: FilterFindOneSubraceRacial_trait_optionsChooseOperatorsInput
  from: FilterFindOneSubraceRacial_trait_optionsFromOperatorsInput
  type: FilterFindOneSubraceRacial_trait_optionsTypeOperatorsInput
}

input FilterFindOneSubraceRacial_trait_optionsTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceRacial_traitsIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceRacial_traitsNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceRacial_traitsOperatorsInput {
  index: FilterFindOneSubraceRacial_traitsIndexOperatorsInput
  name: FilterFindOneSubraceRacial_traitsNameOperatorsInput
  url: FilterFindOneSubraceRacial_traitsUrlOperatorsInput
}

input FilterFindOneSubraceRacial_traitsUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceStarting_proficienciesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceStarting_proficienciesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceStarting_proficienciesOperatorsInput {
  index: FilterFindOneSubraceStarting_proficienciesIndexOperatorsInput
  name: FilterFindOneSubraceStarting_proficienciesNameOperatorsInput
  url: FilterFindOneSubraceStarting_proficienciesUrlOperatorsInput
}

input FilterFindOneSubraceStarting_proficienciesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneSubraceUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTrait_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitInput {
  _id: String
  desc: [String]
  index: String
  name: String
  proficiencies: [FilterFindOneTraitProficienciesInput]
  proficiency_choices: FilterFindOneTraitProficiency_choicesInput
  races: [FilterFindOneAbilityScoreSkillsInput]
  subraces: [FilterFindOneAbilityScoreSkillsInput]
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneTraitOperatorsInput
  OR: [FilterFindOneTraitInput!]
  AND: [FilterFindOneTraitInput!]
}

input FilterFindOneTraitNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneTraitOperatorsInput {
  _id: FilterFindOneTrait_idOperatorsInput
  desc: FilterFindOneTraitDescOperatorsInput
  index: FilterFindOneTraitIndexOperatorsInput
  name: FilterFindOneTraitNameOperatorsInput
  proficiencies: FilterFindOneTraitProficienciesOperatorsInput
  proficiency_choices: FilterFindOneTraitProficiency_choicesOperatorsInput
  races: FilterFindOneTraitRacesOperatorsInput
  subraces: FilterFindOneTraitSubracesOperatorsInput
  url: FilterFindOneTraitUrlOperatorsInput
}

input FilterFindOneTraitProficienciesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitProficienciesInput {
  index: String
  name: String
  url: String
}

input FilterFindOneTraitProficienciesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitProficienciesOperatorsInput {
  index: FilterFindOneTraitProficienciesIndexOperatorsInput
  name: FilterFindOneTraitProficienciesNameOperatorsInput
  url: FilterFindOneTraitProficienciesUrlOperatorsInput
}

input FilterFindOneTraitProficienciesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitProficiency_choicesChooseOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindOneTraitProficiency_choicesFromIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitProficiency_choicesFromNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitProficiency_choicesFromOperatorsInput {
  index: FilterFindOneTraitProficiency_choicesFromIndexOperatorsInput
  name: FilterFindOneTraitProficiency_choicesFromNameOperatorsInput
  url: FilterFindOneTraitProficiency_choicesFromUrlOperatorsInput
}

input FilterFindOneTraitProficiency_choicesFromUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitProficiency_choicesInput {
  choose: Float
  from: [FilterFindOneAbilityScoreSkillsInput]
  type: String
}

input FilterFindOneTraitProficiency_choicesOperatorsInput {
  choose: FilterFindOneTraitProficiency_choicesChooseOperatorsInput
  from: FilterFindOneTraitProficiency_choicesFromOperatorsInput
  type: FilterFindOneTraitProficiency_choicesTypeOperatorsInput
}

input FilterFindOneTraitProficiency_choicesTypeOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitRacesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitRacesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitRacesOperatorsInput {
  index: FilterFindOneTraitRacesIndexOperatorsInput
  name: FilterFindOneTraitRacesNameOperatorsInput
  url: FilterFindOneTraitRacesUrlOperatorsInput
}

input FilterFindOneTraitRacesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitSubracesIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitSubracesNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitSubracesOperatorsInput {
  index: FilterFindOneTraitSubracesIndexOperatorsInput
  name: FilterFindOneTraitSubracesNameOperatorsInput
  url: FilterFindOneTraitSubracesUrlOperatorsInput
}

input FilterFindOneTraitSubracesUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneTraitUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneWeaponProperty_idOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneWeaponPropertyDescOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneWeaponPropertyIndexOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

input FilterFindOneWeaponPropertyInput {
  _id: String
  desc: [String]
  index: String
  name: String
  url: String

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOneWeaponPropertyOperatorsInput
  OR: [FilterFindOneWeaponPropertyInput!]
  AND: [FilterFindOneWeaponPropertyInput!]
}

input FilterFindOneWeaponPropertyNameOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOneWeaponPropertyOperatorsInput {
  _id: FilterFindOneWeaponProperty_idOperatorsInput
  desc: FilterFindOneWeaponPropertyDescOperatorsInput
  index: FilterFindOneWeaponPropertyIndexOperatorsInput
  name: FilterFindOneWeaponPropertyNameOperatorsInput
  url: FilterFindOneWeaponPropertyUrlOperatorsInput
}

input FilterFindOneWeaponPropertyUrlOperatorsInput {
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
  in: [String]
  nin: [String]
  regex: RegExpAsString
  exists: Boolean
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Language {
  _id: String!
  desc: String
  index: String
  name: String
  script: String
  type: String
  typical_speakers: [String]
  url: String
}

type Level {
  _id: String!
  ability_score_bonuses: Float
  class: AbilityScoreSkills
  class_specific: LevelClass_specific
  feature_choices: [AbilityScoreSkills]
  features: [AbilityScoreSkills]
  index: String
  level: Float
  prof_bonus: Float
  spellcasting: LevelSpellcasting
  subclass: AbilityScoreSkills
  subclass_specific: LevelSubclass_specific
  url: String
}

type LevelClass_specific {
  action_surges: Float
  arcane_recovery_levels: Float
  aura_range: Float
  bardic_inspiration_die: Float
  brutal_critical_dice: Float
  channel_divinity_charges: Float
  creating_spell_slots: [LevelClass_specificCreating_spell_slots]
  destroy_undead_cr: Float
  extra_attacks: Float
  favored_enemies: Float
  favored_terrain: Float
  indomitable_uses: Float
  invocations_known: Float
  ki_points: Float
  magical_secrets_max_5: Float
  magical_secrets_max_7: Float
  magical_secrets_max_9: Float
  martial_arts: LevelClass_specificMartial_arts
  metamagic_known: Float
  mystic_arcanum_level_6: Float
  mystic_arcanum_level_7: Float
  mystic_arcanum_level_8: Float
  mystic_arcanum_level_9: Float
  rage_count: Float
  rage_damage_bonus: Float
  sneak_attack: LevelClass_specificSneak_attack
  song_of_rest_die: Float
  sorcery_points: Float
  unarmored_movement: Float
  wild_shape_fly: Boolean
  wild_shape_max_cr: Float
  wild_shape_swim: Boolean
}

type LevelClass_specificCreating_spell_slots {
  sorcery_point_cost: Float
  spell_slot_level: Float
}

type LevelClass_specificMartial_arts {
  dice_count: Float
  dice_value: Float
}

type LevelClass_specificSneak_attack {
  dice_count: Float
  dice_value: Float
}

type LevelSpellcasting {
  cantrips_known: Float
  spell_slots_level_1: Float
  spell_slots_level_2: Float
  spell_slots_level_3: Float
  spell_slots_level_4: Float
  spell_slots_level_5: Float
  spell_slots_level_6: Float
  spell_slots_level_7: Float
  spell_slots_level_8: Float
  spell_slots_level_9: Float
  spells_known: Float
}

type LevelSubclass_specific {
  additional_magical_secrets_max_lvl: Float
  aura_range: Float
}

type MagicItem {
  _id: String!
  desc: [String]
  equipment_category: AbilityScoreSkills
  index: String
  name: String
  url: String
}

type MagicSchool {
  _id: String!
  desc: String
  index: String
  name: String
  url: String
}

type Monster {
  _id: String!
  actions: [MonsterActions]
  alignment: String
  armor_class: Float
  challenge_rating: Float
  charisma: Float
  condition_immunities: [AbilityScoreSkills]
  constitution: Float
  damage_immunities: [String]
  damage_resistances: [String]
  damage_vulnerabilities: [String]
  dexterity: Float
  forms: [AbilityScoreSkills]
  hit_dice: String
  hit_points: Float
  index: String
  intelligence: Float
  languages: String
  legendary_actions: [MonsterLegendary_actions]
  name: String
  proficiencies: [MonsterProficiencies]
  reactions: [MonsterReactions]
  senses: MonsterSenses
  size: String
  special_abilities: [MonsterSpecial_abilities]
  speed: MonsterSpeed
  strength: Float
  subtype: String
  type: String
  url: String
  wisdom: Float
  xp: Float
}

type MonsterActions {
  attack_bonus: Float
  damage: [MonsterActionsDamage]
  desc: String
  name: String
}

type MonsterActionsDamage {
  damage_dice: String
  damage_type: AbilityScoreSkills
}

type MonsterLegendary_actions {
  attack_bonus: Float
  desc: String
  name: String
}

type MonsterProficiencies {
  proficiency: AbilityScoreSkills
  value: Float
}

type MonsterReactions {
  desc: String
  name: String
}

type MonsterSenses {
  blindsight: String
  darkvision: String
  passive_perception: Float
  tremorsense: String
  truesight: String
}

type MonsterSpecial_abilities {
  desc: String
  name: String
}

type MonsterSpeed {
  burrow: String
  climb: String
  fly: String
  hover: Boolean
  swim: String
  walk: String
}

type Proficiency {
  _id: String!
  classes: [AbilityScoreSkills]
  index: String
  name: String
  races: [AbilityScoreSkills]
  references: [ProficiencyReferences]
  type: String
  url: String
}

type ProficiencyReferences {
  index: String
  name: String
  type: String
  url: String
}

type Query {
  abilityScore(
    """Filter by fields"""
    filter: FilterFindOneAbilityScoreInput
    skip: Int
    sort: SortFindOneAbilityScoreInput
  ): AbilityScore
  abilityScores(
    """Filter by fields"""
    filter: FilterFindManyAbilityScoreInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyAbilityScoreInput
  ): [AbilityScore!]!
  alignment(
    """Filter by fields"""
    filter: FilterFindOneAlignmentInput
    skip: Int
    sort: SortFindOneAlignmentInput
  ): Alignment
  alignments(
    """Filter by fields"""
    filter: FilterFindManyAlignmentInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyAlignmentInput
  ): [Alignment!]!
  background(
    """Filter by fields"""
    filter: FilterFindOneBackgroundInput
    skip: Int
    sort: SortFindOneBackgroundInput
  ): Background
  backgrounds(
    """Filter by fields"""
    filter: FilterFindManyBackgroundInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyBackgroundInput
  ): [Background!]!
  condition(
    """Filter by fields"""
    filter: FilterFindOneConditionInput
    skip: Int
    sort: SortFindOneConditionInput
  ): Condition
  conditions(
    """Filter by fields"""
    filter: FilterFindManyConditionInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyConditionInput
  ): [Condition!]!
  class(
    """Filter by fields"""
    filter: FilterFindOneClassInput
    skip: Int
    sort: SortFindOneClassInput
  ): Class
  classes(
    """Filter by fields"""
    filter: FilterFindManyClassInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyClassInput
  ): [Class!]!
  damageType(
    """Filter by fields"""
    filter: FilterFindOneDamageTypeInput
    skip: Int
    sort: SortFindOneDamageTypeInput
  ): DamageType
  damageTypes(
    """Filter by fields"""
    filter: FilterFindManyDamageTypeInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyDamageTypeInput
  ): [DamageType!]!
  equipment(
    """Filter by fields"""
    filter: FilterFindOneEquipmentInput
    skip: Int
    sort: SortFindOneEquipmentInput
  ): Equipment
  equipments(
    """Filter by fields"""
    filter: FilterFindManyEquipmentInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyEquipmentInput
  ): [Equipment!]!
  equipmentCategory(
    """Filter by fields"""
    filter: FilterFindOneEquipmentCategoryInput
    skip: Int
    sort: SortFindOneEquipmentCategoryInput
  ): EquipmentCategory
  equipmentCategories(
    """Filter by fields"""
    filter: FilterFindManyEquipmentCategoryInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyEquipmentCategoryInput
  ): [EquipmentCategory!]!
  feature(
    """Filter by fields"""
    filter: FilterFindOneFeatureInput
    skip: Int
    sort: SortFindOneFeatureInput
  ): Feature
  features(
    """Filter by fields"""
    filter: FilterFindManyFeatureInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyFeatureInput
  ): [Feature!]!
  language(
    """Filter by fields"""
    filter: FilterFindOneLanguageInput
    skip: Int
    sort: SortFindOneLanguageInput
  ): Language
  languages(
    """Filter by fields"""
    filter: FilterFindManyLanguageInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyLanguageInput
  ): [Language!]!
  level(
    """Filter by fields"""
    filter: FilterFindOneLevelInput
    skip: Int
    sort: SortFindOneLevelInput
  ): Level
  levels(
    """Filter by fields"""
    filter: FilterFindManyLevelInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyLevelInput
  ): [Level!]!
  magicItem(
    """Filter by fields"""
    filter: FilterFindOneMagicItemInput
    skip: Int
    sort: SortFindOneMagicItemInput
  ): MagicItem
  magicItems(
    """Filter by fields"""
    filter: FilterFindManyMagicItemInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyMagicItemInput
  ): [MagicItem!]!
  magicSchool(
    """Filter by fields"""
    filter: FilterFindOneMagicSchoolInput
    skip: Int
    sort: SortFindOneMagicSchoolInput
  ): MagicSchool
  magicSchools(
    """Filter by fields"""
    filter: FilterFindManyMagicSchoolInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyMagicSchoolInput
  ): [MagicSchool!]!
  monster(
    """Filter by fields"""
    filter: FilterFindOneMonsterInput
    skip: Int
    sort: SortFindOneMonsterInput
  ): Monster
  monsters(
    """Filter by fields"""
    filter: FilterFindManyMonsterInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyMonsterInput
  ): [Monster!]!
  proficiency(
    """Filter by fields"""
    filter: FilterFindOneProficiencyInput
    skip: Int
    sort: SortFindOneProficiencyInput
  ): Proficiency
  proficiencies(
    """Filter by fields"""
    filter: FilterFindManyProficiencyInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyProficiencyInput
  ): [Proficiency!]!
  race(
    """Filter by fields"""
    filter: FilterFindOneRaceInput
    skip: Int
    sort: SortFindOneRaceInput
  ): Race
  races(
    """Filter by fields"""
    filter: FilterFindManyRaceInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyRaceInput
  ): [Race!]!
  rule(
    """Filter by fields"""
    filter: FilterFindOneRuleInput
    skip: Int
    sort: SortFindOneRuleInput
  ): Rule
  rules(
    """Filter by fields"""
    filter: FilterFindManyRuleInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyRuleInput
  ): [Rule!]!
  ruleSection(
    """Filter by fields"""
    filter: FilterFindOneRuleSectionInput
    skip: Int
    sort: SortFindOneRuleSectionInput
  ): RuleSection
  ruleSections(
    """Filter by fields"""
    filter: FilterFindManyRuleSectionInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyRuleSectionInput
  ): [RuleSection!]!
  spell(
    """Filter by fields"""
    filter: FilterFindOneSpellInput
    skip: Int
    sort: SortFindOneSpellInput
  ): Spell
  spells(
    """Filter by fields"""
    filter: FilterFindManySpellInput
    skip: Int
    limit: Int = 100
    sort: SortFindManySpellInput
  ): [Spell!]!
  startingequipment(
    """Filter by fields"""
    filter: FilterFindOneStartingEquipmentInput
    skip: Int
    sort: SortFindOneStartingEquipmentInput
  ): StartingEquipment
  startingequipments(
    """Filter by fields"""
    filter: FilterFindManyStartingEquipmentInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyStartingEquipmentInput
  ): [StartingEquipment!]!
  subclass(
    """Filter by fields"""
    filter: FilterFindOneSubclassInput
    skip: Int
    sort: SortFindOneSubclassInput
  ): Subclass
  subclasses(
    """Filter by fields"""
    filter: FilterFindManySubclassInput
    skip: Int
    limit: Int = 100
    sort: SortFindManySubclassInput
  ): [Subclass!]!
  subrace(
    """Filter by fields"""
    filter: FilterFindOneSubraceInput
    skip: Int
    sort: SortFindOneSubraceInput
  ): Subrace
  subraces(
    """Filter by fields"""
    filter: FilterFindManySubraceInput
    skip: Int
    limit: Int = 100
    sort: SortFindManySubraceInput
  ): [Subrace!]!
  trait(
    """Filter by fields"""
    filter: FilterFindOneTraitInput
    skip: Int
    sort: SortFindOneTraitInput
  ): Trait
  traits(
    """Filter by fields"""
    filter: FilterFindManyTraitInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyTraitInput
  ): [Trait!]!
  weaponProperty(
    """Filter by fields"""
    filter: FilterFindOneWeaponPropertyInput
    skip: Int
    sort: SortFindOneWeaponPropertyInput
  ): WeaponProperty
  weaponProperties(
    """Filter by fields"""
    filter: FilterFindManyWeaponPropertyInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyWeaponPropertyInput
  ): [WeaponProperty!]!
}

type Race {
  _id: String!
  ability_bonus_options: RaceAbility_bonus_options
  ability_bonuses: [RaceAbility_bonuses]
  age: String
  alignment: String
  index: String
  language_desc: String
  language_options: RaceLanguage_options
  languages: [AbilityScoreSkills]
  name: String
  size: String
  size_description: String
  speed: Float
  starting_proficiencies: [AbilityScoreSkills]
  starting_proficiency_options: RaceStarting_proficiency_options
  subraces: [AbilityScoreSkills]
  trait_options: RaceTrait_options
  traits: [AbilityScoreSkills]
  url: String
}

type RaceAbility_bonus_options {
  choose: Float
  from: [RaceAbility_bonus_optionsFrom]
  type: String
}

type RaceAbility_bonus_optionsFrom {
  ability_score: AbilityScoreSkills
  bonus: Float
}

type RaceAbility_bonuses {
  ability_score: AbilityScoreSkills
  bonus: Float
}

type RaceLanguage_options {
  choose: Float
  from: [AbilityScoreSkills]
  type: String
}

type RaceStarting_proficiency_options {
  choose: Float
  from: [AbilityScoreSkills]
  type: String
}

type RaceTrait_options {
  choose: Float
  from: [AbilityScoreSkills]
  type: String
}

"""
The string representation of JavaScript regexp. You may provide it with flags
"/^abc.*/i" or without flags like "^abc.*". More info about RegExp characters and flags: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
"""
scalar RegExpAsString

type Rule {
  _id: String!
  desc: String
  index: String
  name: String
  subsections: [AbilityScoreSkills]
  url: String
}

type RuleSection {
  _id: String!
  desc: String
  index: String
  name: String
  url: String
}

enum SortFindManyAbilityScoreInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyAlignmentInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyBackgroundInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyClassInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyConditionInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyDamageTypeInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyEquipmentCategoryInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyEquipmentInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyFeatureInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyLanguageInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyLevelInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyMagicItemInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyMagicSchoolInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyMonsterInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyProficiencyInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyRaceInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyRuleInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyRuleSectionInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManySpellInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyStartingEquipmentInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManySubclassInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManySubraceInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyTraitInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindManyWeaponPropertyInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneAbilityScoreInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneAlignmentInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneBackgroundInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneClassInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneConditionInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneDamageTypeInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneEquipmentCategoryInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneEquipmentInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneFeatureInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneLanguageInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneLevelInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneMagicItemInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneMagicSchoolInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneMonsterInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneProficiencyInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneRaceInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneRuleInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneRuleSectionInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneSpellInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneStartingEquipmentInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneSubclassInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneSubraceInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneTraitInput {
  _ID_ASC
  _ID_DESC
}

enum SortFindOneWeaponPropertyInput {
  _ID_ASC
  _ID_DESC
}

type Spell {
  _id: String!
  area_of_effect: SpellArea_of_effect
  attack_type: String
  casting_time: String
  classes: [AbilityScoreSkills]
  components: [String]
  concentration: Boolean
  damage: SpellDamage
  dc: SpellDc
  desc: [String]
  duration: String
  heal_at_slot_level: JSON
  higher_level: [String]
  index: String
  level: Float
  material: String
  name: String
  range: String
  ritual: Boolean
  school: AbilityScoreSkills
  subclasses: [AbilityScoreSkills]
  url: String
}

type SpellArea_of_effect {
  size: Float
  type: String
}

type SpellDamage {
  damage_at_slot_level: JSON
  damage_at_character_level: JSON
  damage_type: AbilityScoreSkills
}

type SpellDc {
  dc_success: String
  dc_type: AbilityScoreSkills
  desc: String
}

type StartingEquipment {
  _id: String!
  class: AbilityScoreSkills
  index: String
  starting_equipment: [StartingEquipmentStarting_equipment]
  starting_equipment_options: [StartingEquipmentStarting_equipment_options]
  url: String
}

type StartingEquipmentStarting_equipment {
  equipment: AbilityScoreSkills
  quantity: Float
}

type StartingEquipmentStarting_equipment_options {
  choose: Float
  from: [StartingEquipmentStarting_equipment_optionsFrom]
  type: String
}

type StartingEquipmentStarting_equipment_optionsFrom {
  equipment: AbilityScoreSkills
  quantity: Float
}

type Subclass {
  _id: String!
  class: AbilityScoreSkills
  desc: [String]
  index: String
  name: String
  spells: [SubclassSpells]
  subclass_flavor: String
  subclass_levels: String
  url: String
}

type SubclassSpells {
  prerequisites: [SubclassSpellsPrerequisites]
  spell: AbilityScoreSkills
}

type SubclassSpellsPrerequisites {
  index: String
  name: String
  type: String
  url: String
}

type Subrace {
  _id: String!
  ability_bonuses: [SubraceAbility_bonuses]
  desc: String
  index: String
  language_options: SubraceLanguage_options
  name: String
  race: AbilityScoreSkills
  racial_trait_options: SubraceRacial_trait_options
  racial_traits: [AbilityScoreSkills]
  starting_proficiencies: [AbilityScoreSkills]
  url: String
}

type SubraceAbility_bonuses {
  ability_score: AbilityScoreSkills
  bonus: Float
}

type SubraceLanguage_options {
  choose: Float
  from: [AbilityScoreSkills]
  type: String
}

type SubraceRacial_trait_options {
  choose: Float
  from: [AbilityScoreSkills]
  type: String
}

type Trait {
  _id: String!
  desc: [String]
  index: String
  name: String
  proficiencies: [TraitProficiencies]
  proficiency_choices: TraitProficiency_choices
  races: [AbilityScoreSkills]
  subraces: [AbilityScoreSkills]
  url: String
}

type TraitProficiencies {
  index: String
  name: String
  url: String
}

type TraitProficiency_choices {
  choose: Float
  from: [AbilityScoreSkills]
  type: String
}

type WeaponProperty {
  _id: String!
  desc: [String]
  index: String
  name: String
  url: String
}

